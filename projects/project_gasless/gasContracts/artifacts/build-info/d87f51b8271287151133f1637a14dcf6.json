{"id":"d87f51b8271287151133f1637a14dcf6","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./PythStructs.sol\";\nimport \"./IPythEvents.sol\";\n\n/// @title Consume prices from the Pyth Network (https://pyth.network/).\n/// @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n/// @author Pyth Data Association\ninterface IPyth is IPythEvents {\n    /// @notice Returns the price of a price feed without any sanity checks.\n    /// @dev This function returns the most recent price update in this contract without any recency checks.\n    /// This function is unsafe as the returned price update may be arbitrarily far in the past.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use `getPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the price that is no older than `age` seconds of the current time.\n    /// @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n    /// @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n    /// However, if the price is not recent this function returns the latest available price.\n    ///\n    /// The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n    /// the returned price is recent or useful for any particular application.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n    /// of the current time.\n    /// @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Update price feeds with given update messages.\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    /// Prices will be updated if they are more recent than the current stored prices.\n    /// The call will succeed even if the update is not the most recent.\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    function updatePriceFeeds(bytes[] calldata updateData) external payable;\n\n    /// @notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n    /// necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n    /// given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n    /// of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n    /// a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n    /// Otherwise, it calls updatePriceFeeds method to update the prices.\n    ///\n    /// @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\n    function updatePriceFeedsIfNecessary(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64[] calldata publishTimes\n    ) external payable;\n\n    /// @notice Returns the required fee to update an array of price updates.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Returns the required fee to update a TWAP price.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getTwapUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// This method will eventually allow the caller to determine whether parsed price feeds should update\n    /// the stored values as well.\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minAllowedPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxAllowedPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @param storeUpdatesIfFresh flag for the parse function to\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesWithConfig(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minAllowedPublishTime,\n        uint64 maxAllowedPublishTime,\n        bool checkUniqueness,\n        bool checkUpdateDataIsMinimal,\n        bool storeUpdatesIfFresh\n    )\n        external\n        payable\n        returns (\n            PythStructs.PriceFeed[] memory priceFeeds,\n            uint64[] memory slots\n        );\n\n    /// @notice Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`.\n    ///\n    /// This method calculates TWAP between two data points by processing the difference in cumulative price values\n    /// divided by the time period. It requires exactly two updates that contain valid price information\n    /// for all the requested price IDs.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the updateData array.\n    ///\n    /// @dev Reverts if:\n    /// - The transferred fee is not sufficient\n    /// - The updateData is invalid or malformed\n    /// - The updateData array does not contain exactly 2 updates\n    /// - There is no update for any of the given `priceIds`\n    /// - The time ordering between data points is invalid (start time must be before end time)\n    /// @param updateData Array containing exactly two price updates (start and end points for TWAP calculation)\n    /// @param priceIds Array of price ids to calculate TWAP for\n    /// @return twapPriceFeeds Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)\n    function parseTwapPriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds\n    )\n        external\n        payable\n        returns (PythStructs.TwapPriceFeed[] memory twapPriceFeeds);\n\n    /// @notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n    /// the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n    /// this method will return the first update. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range and uniqueness condition.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesUnique(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n}\n"},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @title IPythEvents contains the events that Pyth contract emits.\n/// @dev This interface can be used for listening to the updates for off-chain and testing purposes.\ninterface IPythEvents {\n    /// @dev Emitted when the price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param publishTime Publish time of the given price update.\n    /// @param price Price of the given price update.\n    /// @param conf Confidence interval of the given price update.\n    event PriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 publishTime,\n        int64 price,\n        uint64 conf\n    );\n\n    /// @dev Emitted when the TWAP price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param startTime Start time of the TWAP.\n    /// @param endTime End time of the TWAP.\n    /// @param twapPrice Price of the TWAP.\n    /// @param twapConf Confidence interval of the TWAP.\n    /// @param downSlotsRatio Down slot ratio of the TWAP.\n    event TwapPriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 startTime,\n        uint64 endTime,\n        int64 twapPrice,\n        uint64 twapConf,\n        uint32 downSlotsRatio\n    );\n}\n"},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\ncontract PythStructs {\n    // A price with a degree of uncertainty, represented as a price +- a confidence interval.\n    //\n    // The confidence interval roughly corresponds to the standard error of a normal distribution.\n    // Both the price and confidence are stored in a fixed-point numeric representation,\n    // `x * (10^expo)`, where `expo` is the exponent.\n    //\n    // Please refer to the documentation at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how\n    // to how this price safely.\n    struct Price {\n        // Price\n        int64 price;\n        // Confidence interval around the price\n        uint64 conf;\n        // Price exponent\n        int32 expo;\n        // Unix timestamp describing when the price was published\n        uint publishTime;\n    }\n\n    // PriceFeed represents a current aggregate price from pyth publisher feeds.\n    struct PriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Latest available price\n        Price price;\n        // Latest available exponentially-weighted moving average price\n        Price emaPrice;\n    }\n\n    struct TwapPriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Start time of the TWAP\n        uint64 startTime;\n        // End time of the TWAP\n        uint64 endTime;\n        // TWAP price\n        Price twap;\n        // Down slot ratio represents the ratio of price feed updates that were missed or unavailable\n        // during the TWAP period, expressed as a fixed-point number between 0 and 1e6 (100%).\n        // For example:\n        //   - 0 means all price updates were available\n        //   - 500_000 means 50% of updates were missed\n        //   - 1_000_000 means all updates were missed\n        // This can be used to assess the quality/reliability of the TWAP calculation.\n        // Applications should define a maximum acceptable ratio (e.g. 100000 for 10%)\n        // and revert if downSlotsRatio exceeds it.\n        uint32 downSlotsRatio;\n    }\n\n    // Information used to calculate time-weighted average prices (TWAP)\n    struct TwapPriceInfo {\n        // slot 1\n        int128 cumulativePrice;\n        uint128 cumulativeConf;\n        // slot 2\n        uint64 numDownSlots;\n        uint64 publishSlot;\n        uint64 publishTime;\n        uint64 prevPublishTime;\n        // slot 3\n        int32 expo;\n    }\n}\n"},"contracts/gasRouter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@pythnetwork/pyth-sdk-solidity/IPyth.sol\";\nimport \"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\n\n/// @title GasStation - Gasless swaps with meta-transactions\ncontract GasStation is Ownable, ReentrancyGuard, EIP712 {\n    using SafeERC20 for IERC20;\n    using ECDSA for bytes32;\n\n    IPyth public immutable pyth;\n    bytes32 public immutable cfxUsdFeedId;\n\n    struct TokenInfo {\n        address tokenAddress;\n        string ticker;\n        bytes32 feedId;\n    }\n\n    TokenInfo[] public supportedTokens;\n    mapping(address => bytes32) public tokenFeedIds;\n    mapping(address => string) public tokenTickers;\n    mapping(address => uint256) public nonces;\n\n    uint256 public constant MAX_CFX_PER_SWAP = 10 * 10**18; // 10 CFX\n    uint256 public relayerFeePercent = 50; // 0.5% fee (50/10000)\n\n    bytes32 private constant SWAP_TYPEHASH = keccak256(\n        \"SwapRequest(address user,address tokenAddress,uint256 amount,uint256 nonce,uint256 deadline)\"\n    );\n\n    event TokenAdded(address indexed tokenAddress, string ticker, bytes32 feedId);\n    event MetaSwapped(\n        address indexed user,\n        address indexed relayer,\n        address indexed tokenAddress,\n        uint256 tokenAmount,\n        uint256 cfxAmount,\n        uint256 relayerFee\n    );\n    event RelayerFeeUpdated(uint256 newFeePercent);\n\n    constructor(address _pyth, bytes32 _cfxUsdFeedId) EIP712(\"GasStation\", \"1\") {\n        require(_pyth != address(0), \"pyth address zero\");\n        require(_cfxUsdFeedId != bytes32(0), \"invalid feed id\");\n        pyth = IPyth(_pyth);\n        cfxUsdFeedId = _cfxUsdFeedId;\n    }\n\n    // --- Owner management ---\n    function addToken(address tokenAddress, string calldata ticker, bytes32 feedId) external onlyOwner {\n        require(feedId != bytes32(0), \"Invalid feed ID\");\n        require(tokenAddress != address(0), \"Invalid token address\");\n        require(tokenFeedIds[tokenAddress] == bytes32(0), \"Token already added\");\n\n        supportedTokens.push(TokenInfo({\n            tokenAddress: tokenAddress,\n            ticker: ticker,\n            feedId: feedId\n        }));\n\n        tokenFeedIds[tokenAddress] = feedId;\n        tokenTickers[tokenAddress] = ticker;\n        emit TokenAdded(tokenAddress, ticker, feedId);\n    }\n\n    // --- Meta-swap ---\n    function metaSwap(\n        address user,\n        address tokenAddress,\n        uint256 amount,\n        uint256 deadline,\n        bytes calldata signature,\n        bytes[] calldata updateData,\n        uint32 maxAge\n    ) external payable nonReentrant {\n        require(block.timestamp <= deadline, \"Signature expired\");\n        require(tokenFeedIds[tokenAddress] != bytes32(0), \"Token not whitelisted\");\n\n        // Verify user signature\n        _verifySwapSignature(user, tokenAddress, amount, deadline, signature);\n        nonces[user]++;\n\n        // Update Pyth prices\n        uint256 fee = pyth.getUpdateFee(updateData);\n        require(msg.value >= fee, \"Insufficient Pyth update fee\");\n        pyth.updatePriceFeeds{value: fee}(updateData);\n\n        // Get prices\n        PythStructs.Price memory tokenPrice = pyth.getPriceNoOlderThan(tokenFeedIds[tokenAddress], maxAge);\n        PythStructs.Price memory cfxPrice = pyth.getPriceNoOlderThan(cfxUsdFeedId, maxAge);\n\n        // Calculate CFX amount\n        uint256 cfxAmount = _calculateCfxAmount(tokenAddress, amount, tokenPrice, cfxPrice);\n        uint256 relayerFee = (cfxAmount * relayerFeePercent) / 10000;\n        uint256 userCfxAmount = cfxAmount - relayerFee;\n\n        require(address(this).balance >= cfxAmount, \"Insufficient CFX in contract\");\n\n        // Pull tokens\n        IERC20(tokenAddress).safeTransferFrom(user, address(this), amount);\n\n        // Transfer CFX to user\n        _sendCfx(user, userCfxAmount);\n\n        // Pay relayer\n        if (relayerFee > 0) _sendCfx(msg.sender, relayerFee);\n\n        // Refund excess Pyth fee to relayer\n        uint256 refund = msg.value - fee;\n        if (refund > 0) _sendCfx(msg.sender, refund);\n\n        emit MetaSwapped(user, msg.sender, tokenAddress, amount, userCfxAmount, relayerFee);\n    }\n\n    // --- Internal helpers ---\n    function _verifySwapSignature(\n        address user,\n        address tokenAddress,\n        uint256 amount,\n        uint256 deadline,\n        bytes calldata signature\n    ) internal view {\n        bytes32 structHash = keccak256(abi.encode(\n            SWAP_TYPEHASH,\n            user,\n            tokenAddress,\n            amount,\n            nonces[user],\n            deadline\n        ));\n        bytes32 hash = _hashTypedDataV4(structHash);\n        address signer = hash.recover(signature);\n        require(signer == user, \"Invalid signature\");\n    }\n\n    function _sendCfx(address to, uint256 amount) internal {\n        (bool success, ) = to.call{value: amount}(\"\");\n        require(success, \"CFX transfer failed\");\n    }\n\n    function _calculateCfxAmount(\n        address tokenAddress,\n        uint256 amount,\n        PythStructs.Price memory tokenPrice,\n        PythStructs.Price memory cfxPrice\n    ) internal view returns (uint256 cfxAmount) {\n        require(tokenPrice.price > 0, \"Invalid token price\");\n        require(cfxPrice.price > 0, \"Invalid CFX price\");\n        require(amount > 0, \"Amount zero\");\n\n        uint8 tokenDecimals = IERC20Metadata(tokenAddress).decimals();\n        int32 tokenExpo = tokenPrice.expo;\n        require(tokenExpo < 0, \"Unexpected positive expo for token\");\n        uint256 tokenUsd = (amount * uint256(uint64(tokenPrice.price)) * (10 ** uint32(-tokenExpo))) / (10 ** tokenDecimals);\n\n        int32 cfxExpo = cfxPrice.expo;\n        require(cfxExpo < 0, \"Unexpected positive expo for CFX\");\n        uint256 cfxUsdPerUnit = uint256(uint64(cfxPrice.price)) * (10 ** uint32(-cfxExpo));\n\n        cfxAmount = (tokenUsd * 10**18) / cfxUsdPerUnit;\n        require(cfxAmount <= MAX_CFX_PER_SWAP, \"Exceeds max CFX per swap\");\n    }\n\n    // --- Owner functions ---\n    function setRelayerFee(uint256 _feePercent) external onlyOwner {\n        require(_feePercent <= 1000, \"Fee too high\"); // Max 10%\n        relayerFeePercent = _feePercent;\n        emit RelayerFeeUpdated(_feePercent);\n    }\n\n    function depositCfx() external payable onlyOwner {\n        require(msg.value > 0, \"Must deposit > 0\");\n    }\n\n    function withdrawCfx(uint256 amount) external onlyOwner nonReentrant {\n        require(address(this).balance >= amount, \"Insufficient balance\");\n        _sendCfx(msg.sender, amount);\n    }\n\n    function withdrawToken(address tokenAddress, uint256 amount) external onlyOwner nonReentrant {\n        IERC20(tokenAddress).safeTransfer(msg.sender, amount);\n    }\n\n    // --- View helpers ---\n    function getSupportedTokens() external view returns (TokenInfo[] memory) {\n        return supportedTokens;\n    }\n\n    function estimateCfxOut(\n        address tokenAddress,\n        uint256 amount\n    ) external view returns (uint256 cfxAmount, uint256 relayerFee, uint256 userAmount) {\n        bytes32 tokenFeedId = tokenFeedIds[tokenAddress];\n        require(tokenFeedId != bytes32(0), \"Token not whitelisted\");\n\n        PythStructs.Price memory tokenPrice = pyth.getPriceUnsafe(tokenFeedId);\n        PythStructs.Price memory cfxPrice = pyth.getPriceUnsafe(cfxUsdFeedId);\n\n        cfxAmount = _calculateCfxAmount(tokenAddress, amount, tokenPrice, cfxPrice);\n        relayerFee = (cfxAmount * relayerFeePercent) / 10000;\n        userAmount = cfxAmount - relayerFee;\n    }\n}\n"}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1077],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1078,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1077],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[],"usedEvents":[13]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[137]},"id":138,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":137,"linearizedBaseContracts":[137],"name":"IERC5267","nameLocation":"142:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"157:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":117,"name":"EIP712DomainChanged","nameLocation":"252:19:1","nodeType":"EventDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"271:2:1"},"src":"246:28:1"},{"documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"280:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":136,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"434:12:1","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[],"src":"446:2:1"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"fields","nameLocation":"516:6:1","nodeType":"VariableDeclaration","scope":136,"src":"509:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":120,"name":"bytes1","nodeType":"ElementaryTypeName","src":"509:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"name","nameLocation":"550:4:1","nodeType":"VariableDeclaration","scope":136,"src":"536:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":122,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"version","nameLocation":"582:7:1","nodeType":"VariableDeclaration","scope":136,"src":"568:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":124,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"chainId","nameLocation":"611:7:1","nodeType":"VariableDeclaration","scope":136,"src":"603:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"verifyingContract","nameLocation":"640:17:1","nodeType":"VariableDeclaration","scope":136,"src":"632:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"salt","nameLocation":"679:4:1","nodeType":"VariableDeclaration","scope":136,"src":"671:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"671:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"extensions","nameLocation":"714:10:1","nodeType":"VariableDeclaration","scope":136,"src":"697:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":133,"nodeType":"ArrayTypeName","src":"697:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"495:239:1"},"scope":137,"src":"425:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":138,"src":"132:605:1","usedErrors":[],"usedEvents":[117]}],"src":"107:631:1"},"id":1},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[202]},"id":203,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":139,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"137:750:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":202,"linearizedBaseContracts":[202],"name":"ReentrancyGuard","nameLocation":"906:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":143,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:2","nodeType":"VariableDeclaration","scope":202,"src":"1676:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":146,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:2","nodeType":"VariableDeclaration","scope":202,"src":"1723:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":148,"mutability":"mutable","name":"_status","nameLocation":"1783:7:2","nodeType":"VariableDeclaration","scope":202,"src":"1767:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":155,"nodeType":"Block","src":"1811:39:2","statements":[{"expression":{"id":153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":151,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1821:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":152,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"1831:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":154,"nodeType":"ExpressionStatement","src":"1821:22:2"}]},"id":156,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[],"src":"1808:2:2"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[],"src":"1811:0:2"},"scope":202,"src":"1797:53:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":166,"nodeType":"Block","src":"2251:79:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":159,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2261:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":161,"nodeType":"ExpressionStatement","src":"2261:21:2"},{"id":162,"nodeType":"PlaceholderStatement","src":"2292:1:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":163,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"2303:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":165,"nodeType":"ExpressionStatement","src":"2303:20:2"}]},"documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"1856:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":167,"name":"nonReentrant","nameLocation":"2236:12:2","nodeType":"ModifierDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"2248:2:2"},"src":"2227:103:2","virtual":false,"visibility":"internal"},{"body":{"id":181,"nodeType":"Block","src":"2375:248:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":171,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"2468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":172,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2479:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":170,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":176,"nodeType":"ExpressionStatement","src":"2460:63:2"},{"expression":{"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":177,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"2598:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":178,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2608:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":180,"nodeType":"ExpressionStatement","src":"2598:18:2"}]},"id":182,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:2","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[],"src":"2364:2:2"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"2375:0:2"},"scope":202,"src":"2336:287:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":189,"nodeType":"Block","src":"2667:171:2","statements":[{"expression":{"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":185,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"2809:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":186,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"2819:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":188,"nodeType":"ExpressionStatement","src":"2809:22:2"}]},"id":190,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:2","nodeType":"FunctionDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"2656:2:2"},"returnParameters":{"id":184,"nodeType":"ParameterList","parameters":[],"src":"2667:0:2"},"scope":202,"src":"2629:209:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":200,"nodeType":"Block","src":"3081:43:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"3098:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":197,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"3109:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":195,"id":199,"nodeType":"Return","src":"3091:26:2"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2844:168:2","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":201,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:2","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"3049:2:2"},"returnParameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":201,"src":"3075:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":193,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:2"},"scope":202,"src":"3017:107:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":203,"src":"888:2238:2","usedErrors":[],"usedEvents":[]}],"src":"112:3015:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[280]},"id":281,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":204,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":280,"linearizedBaseContracts":[280],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":214,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":214,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":210,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":214,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":212,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":214,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":223,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":223,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":223,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":223,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":229,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":229,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":280,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":237,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":237,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":280,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":247,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":247,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":247,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":247,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":280,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":248,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":257,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":257,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":252,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":257,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":280,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":267,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":267,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":267,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":267,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":280,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":279,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"from","nameLocation":"2676:4:3","nodeType":"VariableDeclaration","scope":279,"src":"2668:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":269,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"to","nameLocation":"2690:2:3","nodeType":"VariableDeclaration","scope":279,"src":"2682:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"amount","nameLocation":"2702:6:3","nodeType":"VariableDeclaration","scope":279,"src":"2694:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:3"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":279,"src":"2728:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":276,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:3"},"scope":280,"src":"2646:88:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":281,"src":"202:2534:3","usedErrors":[],"usedEvents":[214,223]}],"src":"106:2631:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[280],"IERC20Metadata":[305]},"id":306,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":282,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":283,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":306,"sourceUnit":281,"src":"135:23:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":285,"name":"IERC20","nameLocations":["305:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":280,"src":"305:6:4"},"id":286,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"160:116:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":305,"linearizedBaseContracts":[305,280],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":292,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":292,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":289,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":305,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":298,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":298,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":295,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":305,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":304,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":304,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":301,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":305,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":306,"src":"277:405:4","usedErrors":[],"usedEvents":[214,223]}],"src":"110:573:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[341]},"id":342,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":307,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"148:1963:5","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":341,"linearizedBaseContracts":[341],"name":"IERC20Permit","nameLocation":"2122:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"2141:850:5","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":326,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3005:6:5","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"owner","nameLocation":"3029:5:5","nodeType":"VariableDeclaration","scope":326,"src":"3021:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"spender","nameLocation":"3052:7:5","nodeType":"VariableDeclaration","scope":326,"src":"3044:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":312,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":315,"mutability":"mutable","name":"value","nameLocation":"3077:5:5","nodeType":"VariableDeclaration","scope":326,"src":"3069:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"deadline","nameLocation":"3100:8:5","nodeType":"VariableDeclaration","scope":326,"src":"3092:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":319,"mutability":"mutable","name":"v","nameLocation":"3124:1:5","nodeType":"VariableDeclaration","scope":326,"src":"3118:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":318,"name":"uint8","nodeType":"ElementaryTypeName","src":"3118:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"r","nameLocation":"3143:1:5","nodeType":"VariableDeclaration","scope":326,"src":"3135:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"s","nameLocation":"3162:1:5","nodeType":"VariableDeclaration","scope":326,"src":"3154:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3154:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3011:158:5"},"returnParameters":{"id":325,"nodeType":"ParameterList","parameters":[],"src":"3178:0:5"},"scope":341,"src":"2996:183:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"3185:294:5","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":334,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3493:6:5","nodeType":"FunctionDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"owner","nameLocation":"3508:5:5","nodeType":"VariableDeclaration","scope":334,"src":"3500:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"3500:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3499:15:5"},"returnParameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"3538:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3537:9:5"},"scope":341,"src":"3484:63:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"3553:128:5","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":340,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3748:16:5","nodeType":"FunctionDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[],"src":"3764:2:5"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":340,"src":"3790:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3789:9:5"},"scope":341,"src":"3739:60:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":342,"src":"2112:1689:5","usedErrors":[],"usedEvents":[]}],"src":"123:3679:5"},"id":5},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1047],"IERC20":[280],"IERC20Permit":[341],"SafeERC20":[717]},"id":718,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":343,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":718,"sourceUnit":281,"src":"140:23:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":718,"sourceUnit":342,"src":"164:40:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":718,"sourceUnit":1048,"src":"205:36:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"243:457:6","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":717,"linearizedBaseContracts":[717],"name":"SafeERC20","nameLocation":"709:9:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":350,"libraryName":{"id":348,"name":"Address","nameLocations":["731:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"731:7:6"},"nodeType":"UsingForDirective","src":"725:26:6","typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":373,"nodeType":"Block","src":"1013:103:6","statements":[{"expression":{"arguments":[{"id":362,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"1043:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":365,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"1073:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":247,"src":"1073:14:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":368,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"1098:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"1102:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":363,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":361,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"1023:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$280_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"1023:86:6"}]},"documentation":{"id":351,"nodeType":"StructuredDocumentation","src":"757:179:6","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":374,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:6","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"token","nameLocation":"970:5:6","nodeType":"VariableDeclaration","scope":374,"src":"963:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},"typeName":{"id":353,"nodeType":"UserDefinedTypeName","pathNode":{"id":352,"name":"IERC20","nameLocations":["963:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":280,"src":"963:6:6"},"referencedDeclaration":280,"src":"963:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"to","nameLocation":"985:2:6","nodeType":"VariableDeclaration","scope":374,"src":"977:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"value","nameLocation":"997:5:6","nodeType":"VariableDeclaration","scope":374,"src":"989:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:6"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"1013:0:6"},"scope":717,"src":"941:175:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":400,"nodeType":"Block","src":"1445:113:6","statements":[{"expression":{"arguments":[{"id":388,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"1475:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":391,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"1505:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:6","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":279,"src":"1505:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":394,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"1534:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":395,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"1540:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"1544:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":389,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":387,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"1455:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$280_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":399,"nodeType":"ExpressionStatement","src":"1455:96:6"}]},"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"1122:228:6","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":401,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:6","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"token","nameLocation":"1388:5:6","nodeType":"VariableDeclaration","scope":401,"src":"1381:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},"typeName":{"id":377,"nodeType":"UserDefinedTypeName","pathNode":{"id":376,"name":"IERC20","nameLocations":["1381:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":280,"src":"1381:6:6"},"referencedDeclaration":280,"src":"1381:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":380,"mutability":"mutable","name":"from","nameLocation":"1403:4:6","nodeType":"VariableDeclaration","scope":401,"src":"1395:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":379,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"to","nameLocation":"1417:2:6","nodeType":"VariableDeclaration","scope":401,"src":"1409:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"value","nameLocation":"1429:5:6","nodeType":"VariableDeclaration","scope":401,"src":"1421:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:6"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"1445:0:6"},"scope":717,"src":"1355:203:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":444,"nodeType":"Block","src":"1894:497:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2143:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":421,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$717","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$717","typeString":"library SafeERC20"}],"id":420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:6","typeDescriptions":{}}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":423,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"2190:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":417,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2159:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":257,"src":"2159:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":412,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"ExpressionStatement","src":"2121:163:6"},{"expression":{"arguments":[{"id":433,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2314:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":436,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2344:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":267,"src":"2344:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:6","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":439,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"2368:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2377:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":434,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":432,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"2294:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$280_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":443,"nodeType":"ExpressionStatement","src":"2294:90:6"}]},"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"1564:249:6","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":445,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:6","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"token","nameLocation":"1846:5:6","nodeType":"VariableDeclaration","scope":445,"src":"1839:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},"typeName":{"id":404,"nodeType":"UserDefinedTypeName","pathNode":{"id":403,"name":"IERC20","nameLocations":["1839:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":280,"src":"1839:6:6"},"referencedDeclaration":280,"src":"1839:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"spender","nameLocation":"1861:7:6","nodeType":"VariableDeclaration","scope":445,"src":"1853:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"value","nameLocation":"1878:5:6","nodeType":"VariableDeclaration","scope":445,"src":"1870:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:6"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"1894:0:6"},"scope":717,"src":"1818:573:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":481,"nodeType":"Block","src":"2668:194:6","statements":[{"assignments":[457],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:6","nodeType":"VariableDeclaration","scope":481,"src":"2678:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":466,"initialValue":{"arguments":[{"arguments":[{"id":462,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$717","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$717","typeString":"library SafeERC20"}],"id":461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:6","typeDescriptions":{}}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":464,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"2732:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":458,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2701:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":257,"src":"2701:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:6"},{"expression":{"arguments":[{"id":468,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2770:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":471,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2800:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":267,"src":"2800:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:6","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":474,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"2824:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":475,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2833:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"2848:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":469,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":467,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"2750:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$280_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":480,"nodeType":"ExpressionStatement","src":"2750:105:6"}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"2397:180:6","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":482,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:6","nodeType":"FunctionDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"token","nameLocation":"2620:5:6","nodeType":"VariableDeclaration","scope":482,"src":"2613:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},"typeName":{"id":448,"nodeType":"UserDefinedTypeName","pathNode":{"id":447,"name":"IERC20","nameLocations":["2613:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":280,"src":"2613:6:6"},"referencedDeclaration":280,"src":"2613:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"spender","nameLocation":"2635:7:6","nodeType":"VariableDeclaration","scope":482,"src":"2627:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"value","nameLocation":"2652:5:6","nodeType":"VariableDeclaration","scope":482,"src":"2644:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:6"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"2668:0:6"},"scope":717,"src":"2582:280:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":526,"nodeType":"Block","src":"3139:321:6","statements":[{"id":525,"nodeType":"UncheckedBlock","src":"3149:305:6","statements":[{"assignments":[494],"declarations":[{"constant":false,"id":494,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:6","nodeType":"VariableDeclaration","scope":525,"src":"3173:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":503,"initialValue":{"arguments":[{"arguments":[{"id":499,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$717","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$717","typeString":"library SafeERC20"}],"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:6","typeDescriptions":{}}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"3227:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":495,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"3196:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":257,"src":"3196:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":505,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3257:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3273:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":504,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"ExpressionStatement","src":"3249:75:6"},{"expression":{"arguments":[{"id":512,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"3358:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":515,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"3388:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":267,"src":"3388:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:6","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":518,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"3412:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":519,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3421:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3436:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":513,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":511,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"3338:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$280_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"3338:105:6"}]}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"2868:180:6","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":527,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:6","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"token","nameLocation":"3091:5:6","nodeType":"VariableDeclaration","scope":527,"src":"3084:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},"typeName":{"id":485,"nodeType":"UserDefinedTypeName","pathNode":{"id":484,"name":"IERC20","nameLocations":["3084:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":280,"src":"3084:6:6"},"referencedDeclaration":280,"src":"3084:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"spender","nameLocation":"3106:7:6","nodeType":"VariableDeclaration","scope":527,"src":"3098:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":490,"mutability":"mutable","name":"value","nameLocation":"3123:5:6","nodeType":"VariableDeclaration","scope":527,"src":"3115:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":489,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:6"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[],"src":"3139:0:6"},"scope":717,"src":"3053:407:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":573,"nodeType":"Block","src":"3856:333:6","statements":[{"assignments":[539],"declarations":[{"constant":false,"id":539,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:6","nodeType":"VariableDeclaration","scope":573,"src":"3866:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":538,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":548,"initialValue":{"arguments":[{"expression":{"expression":{"id":542,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"3917:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":267,"src":"3917:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:6","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":545,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3941:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3950:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":540,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:6"},{"condition":{"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:6","subExpression":{"arguments":[{"id":550,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"3996:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},{"id":551,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4003:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":549,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"3972:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$280_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":572,"nodeType":"IfStatement","src":"3967:216:6","trueBody":{"id":571,"nodeType":"Block","src":"4018:165:6","statements":[{"expression":{"arguments":[{"id":555,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"4052:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":558,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"4082:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":267,"src":"4082:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:6","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":561,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"4106:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":556,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":554,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"4032:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$280_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":565,"nodeType":"ExpressionStatement","src":"4032:86:6"},{"expression":{"arguments":[{"id":567,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"4152:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},{"id":568,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4159:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":566,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"4132:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$280_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":570,"nodeType":"ExpressionStatement","src":"4132:40:6"}]}}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"3466:308:6","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:6","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"token","nameLocation":"3808:5:6","nodeType":"VariableDeclaration","scope":574,"src":"3801:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},"typeName":{"id":530,"nodeType":"UserDefinedTypeName","pathNode":{"id":529,"name":"IERC20","nameLocations":["3801:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":280,"src":"3801:6:6"},"referencedDeclaration":280,"src":"3801:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"spender","nameLocation":"3823:7:6","nodeType":"VariableDeclaration","scope":574,"src":"3815:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"value","nameLocation":"3840:5:6","nodeType":"VariableDeclaration","scope":574,"src":"3832:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:6"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"3856:0:6"},"scope":717,"src":"3779:410:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"4556:257:6","statements":[{"assignments":[596],"declarations":[{"constant":false,"id":596,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:6","nodeType":"VariableDeclaration","scope":630,"src":"4566:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":601,"initialValue":{"arguments":[{"id":599,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"4601:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":597,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"4588:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$341","typeString":"contract IERC20Permit"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:6","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":334,"src":"4588:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:6"},{"expression":{"arguments":[{"id":605,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"4630:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":606,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"4637:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4646:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":608,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4653:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":609,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4663:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":610,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"4666:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":611,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"4669:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":602,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"4617:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$341","typeString":"contract IERC20Permit"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:6","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":326,"src":"4617:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"4617:54:6"},{"assignments":[615],"declarations":[{"constant":false,"id":615,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:6","nodeType":"VariableDeclaration","scope":630,"src":"4681:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":620,"initialValue":{"arguments":[{"id":618,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"4715:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":616,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"4702:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$341","typeString":"contract IERC20Permit"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:6","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":334,"src":"4702:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4739:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":623,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"4753:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"ExpressionStatement","src":"4731:75:6"}]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"4195:141:6","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:6","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"token","nameLocation":"4383:5:6","nodeType":"VariableDeclaration","scope":631,"src":"4370:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$341","typeString":"contract IERC20Permit"},"typeName":{"id":577,"nodeType":"UserDefinedTypeName","pathNode":{"id":576,"name":"IERC20Permit","nameLocations":["4370:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":341,"src":"4370:12:6"},"referencedDeclaration":341,"src":"4370:12:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$341","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"owner","nameLocation":"4406:5:6","nodeType":"VariableDeclaration","scope":631,"src":"4398:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"spender","nameLocation":"4429:7:6","nodeType":"VariableDeclaration","scope":631,"src":"4421:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"value","nameLocation":"4454:5:6","nodeType":"VariableDeclaration","scope":631,"src":"4446:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:6","nodeType":"VariableDeclaration","scope":631,"src":"4469:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"v","nameLocation":"4501:1:6","nodeType":"VariableDeclaration","scope":631,"src":"4495:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":587,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":590,"mutability":"mutable","name":"r","nameLocation":"4520:1:6","nodeType":"VariableDeclaration","scope":631,"src":"4512:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"s","nameLocation":"4539:1:6","nodeType":"VariableDeclaration","scope":631,"src":"4531:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:6"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"4556:0:6"},"scope":717,"src":"4341:472:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":667,"nodeType":"Block","src":"5266:572:6","statements":[{"assignments":[641],"declarations":[{"constant":false,"id":641,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:6","nodeType":"VariableDeclaration","scope":667,"src":"5615:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":640,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":650,"initialValue":{"arguments":[{"id":647,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"5669:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":644,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"5649:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}],"id":643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:6","typeDescriptions":{}}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:6","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":807,"src":"5641:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":652,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"5728:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:6","memberName":"length","nodeType":"MemberAccess","src":"5728:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":658,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"5765:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":659,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:6","typeDescriptions":{}}}],"id":661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":656,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:6","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:6","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":651,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":666,"nodeType":"ExpressionStatement","src":"5720:111:6"}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"4819:372:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":668,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:6","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"token","nameLocation":"5232:5:6","nodeType":"VariableDeclaration","scope":668,"src":"5225:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},"typeName":{"id":634,"nodeType":"UserDefinedTypeName","pathNode":{"id":633,"name":"IERC20","nameLocations":["5225:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":280,"src":"5225:6:6"},"referencedDeclaration":280,"src":"5225:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"data","nameLocation":"5252:4:6","nodeType":"VariableDeclaration","scope":668,"src":"5239:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":636,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:6"},"returnParameters":{"id":639,"nodeType":"ParameterList","parameters":[],"src":"5266:0:6"},"scope":717,"src":"5196:642:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":715,"nodeType":"Block","src":"6428:505:6","statements":[{"assignments":[680,682],"declarations":[{"constant":false,"id":680,"mutability":"mutable","name":"success","nameLocation":"6729:7:6","nodeType":"VariableDeclaration","scope":715,"src":"6724:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":679,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:6","nodeType":"VariableDeclaration","scope":715,"src":"6738:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":681,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":690,"initialValue":{"arguments":[{"id":688,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"6785:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":685,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"6773:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}],"id":684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:6","typeDescriptions":{}}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:6","memberName":"call","nodeType":"MemberAccess","src":"6765:19:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:6"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":691,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6819:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":692,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6831:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:6","memberName":"length","nodeType":"MemberAccess","src":"6831:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":698,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6868:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":699,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:6","typeDescriptions":{}}}],"id":701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":696,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:6","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:6","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":710,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"6919:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}],"id":709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:6","typeDescriptions":{}}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":706,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"6892:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1047_$","typeString":"type(library Address)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:6","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":735,"src":"6892:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":678,"id":714,"nodeType":"Return","src":"6800:126:6"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"5844:490:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":716,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:6","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"token","nameLocation":"6379:5:6","nodeType":"VariableDeclaration","scope":716,"src":"6372:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"},"typeName":{"id":671,"nodeType":"UserDefinedTypeName","pathNode":{"id":670,"name":"IERC20","nameLocations":["6372:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":280,"src":"6372:6:6"},"referencedDeclaration":280,"src":"6372:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":674,"mutability":"mutable","name":"data","nameLocation":"6399:4:6","nodeType":"VariableDeclaration","scope":716,"src":"6386:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":673,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:6"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"6422:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":676,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:6"},"scope":717,"src":"6339:594:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":718,"src":"701:6234:6","usedErrors":[],"usedEvents":[]}],"src":"115:6821:6"},"id":6},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1047]},"id":1048,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":719,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"126:67:7","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1047,"linearizedBaseContracts":[1047],"name":"Address","nameLocation":"202:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":734,"nodeType":"Block","src":"1478:254:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":728,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"1702:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:7","memberName":"code","nodeType":"MemberAccess","src":"1702:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:7","memberName":"length","nodeType":"MemberAccess","src":"1702:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":727,"id":733,"nodeType":"Return","src":"1695:30:7"}]},"documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"216:1191:7","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":735,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:7","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"account","nameLocation":"1440:7:7","nodeType":"VariableDeclaration","scope":735,"src":"1432:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:7"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":735,"src":"1472:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:7"},"scope":1047,"src":"1412:320:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":768,"nodeType":"Block","src":"2718:241:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":746,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1047","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1047","typeString":"library Address"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:7","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:7","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":749,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"2761:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":743,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":753,"nodeType":"ExpressionStatement","src":"2728:73:7"},{"assignments":[755,null],"declarations":[{"constant":false,"id":755,"mutability":"mutable","name":"success","nameLocation":"2818:7:7","nodeType":"VariableDeclaration","scope":768,"src":"2813:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":754,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":762,"initialValue":{"arguments":[{"hexValue":"","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":756,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"2831:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:7","memberName":"call","nodeType":"MemberAccess","src":"2831:14:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":758,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"2853:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:7"},{"expression":{"arguments":[{"id":764,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"2882:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":767,"nodeType":"ExpressionStatement","src":"2874:78:7"}]},"documentation":{"id":736,"nodeType":"StructuredDocumentation","src":"1738:904:7","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":769,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:7","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:7","nodeType":"VariableDeclaration","scope":769,"src":"2666:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"amount","nameLocation":"2701:6:7","nodeType":"VariableDeclaration","scope":769,"src":"2693:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:7"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"2718:0:7"},"scope":1047,"src":"2647:312:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":786,"nodeType":"Block","src":"3790:96:7","statements":[{"expression":{"arguments":[{"id":780,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"3829:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":781,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"3837:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":779,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[827,871],"referencedDeclaration":871,"src":"3807:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":778,"id":785,"nodeType":"Return","src":"3800:79:7"}]},"documentation":{"id":770,"nodeType":"StructuredDocumentation","src":"2965:731:7","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":787,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:7","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"target","nameLocation":"3731:6:7","nodeType":"VariableDeclaration","scope":787,"src":"3723:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"data","nameLocation":"3752:4:7","nodeType":"VariableDeclaration","scope":787,"src":"3739:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":773,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:7"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":787,"src":"3776:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":776,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:7"},"scope":1047,"src":"3701:185:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":806,"nodeType":"Block","src":"4255:76:7","statements":[{"expression":{"arguments":[{"id":800,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4294:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":801,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"4302:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":803,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"4311:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":799,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[827,871],"referencedDeclaration":871,"src":"4272:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":798,"id":805,"nodeType":"Return","src":"4265:59:7"}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"3892:211:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":807,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:7","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"target","nameLocation":"4147:6:7","nodeType":"VariableDeclaration","scope":807,"src":"4139:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"data","nameLocation":"4176:4:7","nodeType":"VariableDeclaration","scope":807,"src":"4163:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":791,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:7","nodeType":"VariableDeclaration","scope":807,"src":"4190:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":793,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:7"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":807,"src":"4241:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":796,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:7"},"scope":1047,"src":"4108:223:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":826,"nodeType":"Block","src":"4806:111:7","statements":[{"expression":{"arguments":[{"id":820,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"4845:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"4853:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4859:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":819,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[827,871],"referencedDeclaration":871,"src":"4823:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":818,"id":825,"nodeType":"Return","src":"4816:94:7"}]},"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"4337:351:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":827,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:7","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"target","nameLocation":"4732:6:7","nodeType":"VariableDeclaration","scope":827,"src":"4724:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"data","nameLocation":"4753:4:7","nodeType":"VariableDeclaration","scope":827,"src":"4740:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":811,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"value","nameLocation":"4767:5:7","nodeType":"VariableDeclaration","scope":827,"src":"4759:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:7"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":827,"src":"4792:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":816,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:7"},"scope":1047,"src":"4693:224:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":870,"nodeType":"Block","src":"5344:267:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":844,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1047","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1047","typeString":"library Address"}],"id":843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:7","typeDescriptions":{}}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:7","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5387:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":841,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":851,"nodeType":"ExpressionStatement","src":"5354:81:7"},{"assignments":[853,855],"declarations":[{"constant":false,"id":853,"mutability":"mutable","name":"success","nameLocation":"5451:7:7","nodeType":"VariableDeclaration","scope":870,"src":"5446:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":852,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:7","nodeType":"VariableDeclaration","scope":870,"src":"5460:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":854,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":862,"initialValue":{"arguments":[{"id":860,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"5513:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":856,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"5487:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:7","memberName":"call","nodeType":"MemberAccess","src":"5487:11:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5506:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:7"},{"expression":{"arguments":[{"id":864,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"5562:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":865,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"5570:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":866,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"5579:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":867,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"5591:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":863,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"5535:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":840,"id":869,"nodeType":"Return","src":"5528:76:7"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"4923:237:7","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":871,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:7","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"target","nameLocation":"5213:6:7","nodeType":"VariableDeclaration","scope":871,"src":"5205:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"data","nameLocation":"5242:4:7","nodeType":"VariableDeclaration","scope":871,"src":"5229:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":831,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"value","nameLocation":"5264:5:7","nodeType":"VariableDeclaration","scope":871,"src":"5256:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:7","nodeType":"VariableDeclaration","scope":871,"src":"5279:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":835,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:7"},"returnParameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":871,"src":"5330:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":838,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:7"},"scope":1047,"src":"5165:446:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":887,"nodeType":"Block","src":"5888:97:7","statements":[{"expression":{"arguments":[{"id":882,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"5924:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":883,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"5932:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":881,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[888,917],"referencedDeclaration":917,"src":"5905:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":880,"id":886,"nodeType":"Return","src":"5898:80:7"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"5617:166:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":888,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:7","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"target","nameLocation":"5824:6:7","nodeType":"VariableDeclaration","scope":888,"src":"5816:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"data","nameLocation":"5845:4:7","nodeType":"VariableDeclaration","scope":888,"src":"5832:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":875,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:7"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":888,"src":"5874:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":878,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:7"},"scope":1047,"src":"5788:197:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":916,"nodeType":"Block","src":"6327:168:7","statements":[{"assignments":[901,903],"declarations":[{"constant":false,"id":901,"mutability":"mutable","name":"success","nameLocation":"6343:7:7","nodeType":"VariableDeclaration","scope":916,"src":"6338:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":900,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:7","nodeType":"VariableDeclaration","scope":916,"src":"6352:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":902,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":908,"initialValue":{"arguments":[{"id":906,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"6397:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":904,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"6379:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:7","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:7","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:7"},{"expression":{"arguments":[{"id":910,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"6446:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":911,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"6454:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":912,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"6463:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":913,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"6475:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":909,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"6419:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":899,"id":915,"nodeType":"Return","src":"6412:76:7"}]},"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"5991:173:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":917,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:7","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"target","nameLocation":"6214:6:7","nodeType":"VariableDeclaration","scope":917,"src":"6206:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"data","nameLocation":"6243:4:7","nodeType":"VariableDeclaration","scope":917,"src":"6230:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":892,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:7","nodeType":"VariableDeclaration","scope":917,"src":"6257:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":894,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:7"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":917,"src":"6313:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":897,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:7"},"scope":1047,"src":"6169:326:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":933,"nodeType":"Block","src":"6771:101:7","statements":[{"expression":{"arguments":[{"id":928,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"6809:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":929,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"6817:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":927,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[934,963],"referencedDeclaration":963,"src":"6788:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":926,"id":932,"nodeType":"Return","src":"6781:84:7"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"6501:168:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":934,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:7","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"target","nameLocation":"6712:6:7","nodeType":"VariableDeclaration","scope":934,"src":"6704:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"data","nameLocation":"6733:4:7","nodeType":"VariableDeclaration","scope":934,"src":"6720:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":921,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:7"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":934,"src":"6757:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":924,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:7"},"scope":1047,"src":"6674:198:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":962,"nodeType":"Block","src":"7213:170:7","statements":[{"assignments":[947,949],"declarations":[{"constant":false,"id":947,"mutability":"mutable","name":"success","nameLocation":"7229:7:7","nodeType":"VariableDeclaration","scope":962,"src":"7224:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":946,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:7","nodeType":"VariableDeclaration","scope":962,"src":"7238:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":948,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":954,"initialValue":{"arguments":[{"id":952,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"7285:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":950,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"7265:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:7","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:7","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:7"},{"expression":{"arguments":[{"id":956,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"7334:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":957,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"7342:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":958,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"7351:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":959,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"7363:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":955,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"7307:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":945,"id":961,"nodeType":"Return","src":"7300:76:7"}]},"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"6878:175:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":963,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:7","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"target","nameLocation":"7105:6:7","nodeType":"VariableDeclaration","scope":963,"src":"7097:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"data","nameLocation":"7134:4:7","nodeType":"VariableDeclaration","scope":963,"src":"7121:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":938,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:7","nodeType":"VariableDeclaration","scope":963,"src":"7148:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":940,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:7"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":963,"src":"7199:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":943,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:7"},"scope":1047,"src":"7058:325:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1001,"nodeType":"Block","src":"7865:434:7","statements":[{"condition":{"id":977,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"7879:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":999,"nodeType":"Block","src":"8235:58:7","statements":[{"expression":{"arguments":[{"id":995,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"8257:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":996,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"8269:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":994,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8249:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":998,"nodeType":"ExpressionStatement","src":"8249:33:7"}]},"id":1000,"nodeType":"IfStatement","src":"7875:418:7","trueBody":{"id":993,"nodeType":"Block","src":"7888:341:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":978,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"7906:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:7","memberName":"length","nodeType":"MemberAccess","src":"7906:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":990,"nodeType":"IfStatement","src":"7902:286:7","trueBody":{"id":989,"nodeType":"Block","src":"7930:258:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":984,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8132:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":983,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"8121:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":982,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":988,"nodeType":"ExpressionStatement","src":"8113:60:7"}]}},{"expression":{"id":991,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"8208:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":976,"id":992,"nodeType":"Return","src":"8201:17:7"}]}}]},"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"7389:277:7","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:7","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"target","nameLocation":"7724:6:7","nodeType":"VariableDeclaration","scope":1002,"src":"7716:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"success","nameLocation":"7745:7:7","nodeType":"VariableDeclaration","scope":1002,"src":"7740:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":967,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:7","nodeType":"VariableDeclaration","scope":1002,"src":"7762:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":969,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:7","nodeType":"VariableDeclaration","scope":1002,"src":"7795:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":971,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:7"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1002,"src":"7851:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":974,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:7"},"scope":1047,"src":"7671:628:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1025,"nodeType":"Block","src":"8680:135:7","statements":[{"condition":{"id":1014,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"8694:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1023,"nodeType":"Block","src":"8751:58:7","statements":[{"expression":{"arguments":[{"id":1019,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"8773:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1020,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8785:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1018,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8765:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1022,"nodeType":"ExpressionStatement","src":"8765:33:7"}]},"id":1024,"nodeType":"IfStatement","src":"8690:119:7","trueBody":{"id":1017,"nodeType":"Block","src":"8703:42:7","statements":[{"expression":{"id":1015,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"8724:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1013,"id":1016,"nodeType":"Return","src":"8717:17:7"}]}}]},"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"8305:210:7","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1026,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:7","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"success","nameLocation":"8560:7:7","nodeType":"VariableDeclaration","scope":1026,"src":"8555:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1004,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:7","nodeType":"VariableDeclaration","scope":1026,"src":"8577:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1006,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:7","nodeType":"VariableDeclaration","scope":1026,"src":"8610:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1008,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:7"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1026,"src":"8666:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1011,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:7"},"scope":1047,"src":"8520:295:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"8904:457:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1033,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"8980:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:7","memberName":"length","nodeType":"MemberAccess","src":"8980:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1043,"nodeType":"Block","src":"9310:45:7","statements":[{"expression":{"arguments":[{"id":1040,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"9331:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1039,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1042,"nodeType":"ExpressionStatement","src":"9324:20:7"}]},"id":1044,"nodeType":"IfStatement","src":"8976:379:7","trueBody":{"id":1038,"nodeType":"Block","src":"9003:301:7","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:7","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:7","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:7"},"nodeType":"YulFunctionCall","src":"9202:17:7"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:7","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:7"},"nodeType":"YulFunctionCall","src":"9243:19:7"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:7"},"nodeType":"YulFunctionCall","src":"9236:44:7"},"nodeType":"YulExpressionStatement","src":"9236:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1028,"isOffset":false,"isSlot":false,"src":"9208:10:7","valueSize":1},{"declaration":1028,"isOffset":false,"isSlot":false,"src":"9251:10:7","valueSize":1}],"id":1037,"nodeType":"InlineAssembly","src":"9152:142:7"}]}}]},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:7","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:7","nodeType":"VariableDeclaration","scope":1046,"src":"8838:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1027,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:7","nodeType":"VariableDeclaration","scope":1046,"src":"8863:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1029,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:7"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"8904:0:7"},"scope":1047,"src":"8821:540:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1048,"src":"194:9169:7","usedErrors":[],"usedEvents":[]}],"src":"101:9263:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1077]},"id":1078,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1049,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"126:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1077,"linearizedBaseContracts":[1077],"name":"Context","nameLocation":"641:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1058,"nodeType":"Block","src":"717:34:8","statements":[{"expression":{"expression":{"id":1055,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:8","memberName":"sender","nodeType":"MemberAccess","src":"734:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1054,"id":1057,"nodeType":"Return","src":"727:17:8"}]},"id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:8","nodeType":"FunctionDefinition","parameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"674:2:8"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1059,"src":"708:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:8"},"scope":1077,"src":"655:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1067,"nodeType":"Block","src":"824:32:8","statements":[{"expression":{"expression":{"id":1064,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:8","memberName":"data","nodeType":"MemberAccess","src":"841:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1063,"id":1066,"nodeType":"Return","src":"834:15:8"}]},"id":1068,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:8","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[],"src":"774:2:8"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1068,"src":"808:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1061,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:8"},"scope":1077,"src":"757:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"934:25:8","statements":[{"expression":{"hexValue":"30","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1072,"id":1074,"nodeType":"Return","src":"944:8:8"}]},"id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:8","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"891:2:8"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1076,"src":"925:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:8"},"scope":1077,"src":"862:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1078,"src":"623:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:861:8"},"id":8},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1082],"ShortStrings":[1293],"StorageSlot":[1403]},"id":1294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1079,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"106:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1080,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1404,"src":"131:27:9","symbolAliases":[],"unitAlias":""},{"canonicalName":"ShortString","id":1082,"name":"ShortString","nameLocation":"333:11:9","nodeType":"UserDefinedValueTypeDefinition","src":"328:28:9","underlyingType":{"id":1081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"358:876:9","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1293,"linearizedBaseContracts":[1293],"name":"ShortStrings","nameLocation":"1243:12:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1086,"mutability":"constant","name":"_FALLBACK_SENTINEL","nameLocation":"1350:18:9","nodeType":"VariableDeclaration","scope":1293,"src":"1325:112:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1325:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:66:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1090,"name":"StringTooLong","nameLocation":"1450:13:9","nodeType":"ErrorDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"str","nameLocation":"1471:3:9","nodeType":"VariableDeclaration","scope":1090,"src":"1464:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1087,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:12:9"},"src":"1444:32:9"},{"errorSelector":"b3512b0c","id":1092,"name":"InvalidShortString","nameLocation":"1487:18:9","nodeType":"ErrorDefinition","parameters":{"id":1091,"nodeType":"ParameterList","parameters":[],"src":"1505:2:9"},"src":"1481:27:9"},{"body":{"id":1135,"nodeType":"Block","src":"1767:208:9","statements":[{"assignments":[1102],"declarations":[{"constant":false,"id":1102,"mutability":"mutable","name":"bstr","nameLocation":"1790:4:9","nodeType":"VariableDeclaration","scope":1135,"src":"1777:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1101,"name":"bytes","nodeType":"ElementaryTypeName","src":"1777:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1107,"initialValue":{"arguments":[{"id":1105,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"1803:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1103,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:9","typeDescriptions":{}}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1777:30:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1108,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"1821:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1826:6:9","memberName":"length","nodeType":"MemberAccess","src":"1821:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:2:9","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1821:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1117,"nodeType":"IfStatement","src":"1817:72:9","trueBody":{"id":1116,"nodeType":"Block","src":"1839:50:9","statements":[{"errorCall":{"arguments":[{"id":1113,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"1874:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1112,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"1860:13:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1115,"nodeType":"RevertStatement","src":"1853:25:9"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1126,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"1946:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:9","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:9","typeDescriptions":{}}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1129,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"1955:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:9","memberName":"length","nodeType":"MemberAccess","src":"1955:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:9","typeDescriptions":{}}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1118,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"1905:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1082_$","typeString":"type(ShortString)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1917:4:9","memberName":"wrap","nodeType":"MemberAccess","src":"1905:16:9","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1082_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1905:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"functionReturnParameters":1100,"id":1134,"nodeType":"Return","src":"1898:70:9"}]},"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"1514:170:9","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1136,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1698:13:9","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"str","nameLocation":"1726:3:9","nodeType":"VariableDeclaration","scope":1136,"src":"1712:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1094,"name":"string","nodeType":"ElementaryTypeName","src":"1712:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1711:19:9"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1136,"src":"1754:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"},"typeName":{"id":1098,"nodeType":"UserDefinedTypeName","pathNode":{"id":1097,"name":"ShortString","nameLocations":["1754:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"1754:11:9"},"referencedDeclaration":1082,"src":"1754:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"visibility":"internal"}],"src":"1753:13:9"},"scope":1293,"src":"1689:286:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1161,"nodeType":"Block","src":"2133:331:9","statements":[{"assignments":[1146],"declarations":[{"constant":false,"id":1146,"mutability":"mutable","name":"len","nameLocation":"2151:3:9","nodeType":"VariableDeclaration","scope":1161,"src":"2143:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1150,"initialValue":{"arguments":[{"id":1148,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"2168:4:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}],"id":1147,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"2157:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1082_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2143:30:9"},{"assignments":[1152],"declarations":[{"constant":false,"id":1152,"mutability":"mutable","name":"str","nameLocation":"2275:3:9","nodeType":"VariableDeclaration","scope":1161,"src":"2261:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1151,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1157,"initialValue":{"arguments":[{"hexValue":"3332","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2281:10:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1153,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2261:34:9"},{"AST":{"nodeType":"YulBlock","src":"2357:81:9","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2378:3:9"},{"name":"len","nodeType":"YulIdentifier","src":"2383:3:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:9"},"nodeType":"YulFunctionCall","src":"2371:16:9"},"nodeType":"YulExpressionStatement","src":"2371:16:9"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2411:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"2416:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2407:3:9"},"nodeType":"YulFunctionCall","src":"2407:14:9"},{"name":"sstr","nodeType":"YulIdentifier","src":"2423:4:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2400:6:9"},"nodeType":"YulFunctionCall","src":"2400:28:9"},"nodeType":"YulExpressionStatement","src":"2400:28:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1146,"isOffset":false,"isSlot":false,"src":"2383:3:9","valueSize":1},{"declaration":1140,"isOffset":false,"isSlot":false,"src":"2423:4:9","valueSize":1},{"declaration":1152,"isOffset":false,"isSlot":false,"src":"2378:3:9","valueSize":1},{"declaration":1152,"isOffset":false,"isSlot":false,"src":"2411:3:9","valueSize":1}],"id":1158,"nodeType":"InlineAssembly","src":"2348:90:9"},{"expression":{"id":1159,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"2454:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1144,"id":1160,"nodeType":"Return","src":"2447:10:9"}]},"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"1981:73:9","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1162,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2068:8:9","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"sstr","nameLocation":"2089:4:9","nodeType":"VariableDeclaration","scope":1162,"src":"2077:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"},"typeName":{"id":1139,"nodeType":"UserDefinedTypeName","pathNode":{"id":1138,"name":"ShortString","nameLocations":["2077:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"2077:11:9"},"referencedDeclaration":1082,"src":"2077:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"visibility":"internal"}],"src":"2076:18:9"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1162,"src":"2118:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1142,"name":"string","nodeType":"ElementaryTypeName","src":"2118:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2117:15:9"},"scope":1293,"src":"2059:405:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1193,"nodeType":"Block","src":"2606:175:9","statements":[{"assignments":[1172],"declarations":[{"constant":false,"id":1172,"mutability":"mutable","name":"result","nameLocation":"2624:6:9","nodeType":"VariableDeclaration","scope":1193,"src":"2616:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1182,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1177,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"2660:4:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}],"expression":{"id":1175,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"2641:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1082_$","typeString":"type(ShortString)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2653:6:9","memberName":"unwrap","nodeType":"MemberAccess","src":"2641:18:9","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1082_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2633:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:9","typeDescriptions":{}}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:4:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2633:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:57:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"2687:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2696:2:9","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2687:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1190,"nodeType":"IfStatement","src":"2683:69:9","trueBody":{"id":1189,"nodeType":"Block","src":"2700:52:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1186,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2721:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"RevertStatement","src":"2714:27:9"}]}},{"expression":{"id":1191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"2768:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1170,"id":1192,"nodeType":"Return","src":"2761:13:9"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"2470:61:9","text":" @dev Return the length of a `ShortString`."},"id":1194,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2545:10:9","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"sstr","nameLocation":"2568:4:9","nodeType":"VariableDeclaration","scope":1194,"src":"2556:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"},"typeName":{"id":1165,"nodeType":"UserDefinedTypeName","pathNode":{"id":1164,"name":"ShortString","nameLocations":["2556:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"2556:11:9"},"referencedDeclaration":1082,"src":"2556:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"visibility":"internal"}],"src":"2555:18:9"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1194,"src":"2597:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:9:9"},"scope":1293,"src":"2536:245:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1233,"nodeType":"Block","src":"3004:232:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"3024:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1205,"name":"bytes","nodeType":"ElementaryTypeName","src":"3018:5:9","typeDescriptions":{}}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3031:6:9","memberName":"length","nodeType":"MemberAccess","src":"3018:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3018:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1231,"nodeType":"Block","src":"3102:128:9","statements":[{"expression":{"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1220,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"3142:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1217,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"3116:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1403_$","typeString":"type(library StorageSlot)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3128:13:9","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1380,"src":"3116:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1311_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1311_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3149:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1310,"src":"3116:38:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"3157:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3116:46:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1225,"nodeType":"ExpressionStatement","src":"3116:46:9"},{"expression":{"arguments":[{"id":1228,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"3200:18:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1226,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"3183:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1082_$","typeString":"type(ShortString)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3195:4:9","memberName":"wrap","nodeType":"MemberAccess","src":"3183:16:9","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1082_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3183:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"functionReturnParameters":1204,"id":1230,"nodeType":"Return","src":"3176:43:9"}]},"id":1232,"nodeType":"IfStatement","src":"3014:216:9","trueBody":{"id":1216,"nodeType":"Block","src":"3044:52:9","statements":[{"expression":{"arguments":[{"id":1213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"3079:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1212,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"3065:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1082_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3065:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"functionReturnParameters":1204,"id":1215,"nodeType":"Return","src":"3058:27:9"}]}}]},"documentation":{"id":1195,"nodeType":"StructuredDocumentation","src":"2787:103:9","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1234,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2904:25:9","nodeType":"FunctionDefinition","parameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"value","nameLocation":"2944:5:9","nodeType":"VariableDeclaration","scope":1234,"src":"2930:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1196,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"store","nameLocation":"2966:5:9","nodeType":"VariableDeclaration","scope":1234,"src":"2951:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1198,"name":"string","nodeType":"ElementaryTypeName","src":"2951:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2929:43:9"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1234,"src":"2991:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"},"typeName":{"id":1202,"nodeType":"UserDefinedTypeName","pathNode":{"id":1201,"name":"ShortString","nameLocations":["2991:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"2991:11:9"},"referencedDeclaration":1082,"src":"2991:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"visibility":"internal"}],"src":"2990:13:9"},"scope":1293,"src":"2895:341:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1260,"nodeType":"Block","src":"3476:159:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"3509:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}],"expression":{"id":1245,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"3490:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1082_$","typeString":"type(ShortString)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3502:6:9","memberName":"unwrap","nodeType":"MemberAccess","src":"3490:18:9","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1082_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3490:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1249,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"3519:18:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3490:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1258,"nodeType":"Block","src":"3592:37:9","statements":[{"expression":{"id":1256,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3613:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1244,"id":1257,"nodeType":"Return","src":"3606:12:9"}]},"id":1259,"nodeType":"IfStatement","src":"3486:143:9","trueBody":{"id":1255,"nodeType":"Block","src":"3539:47:9","statements":[{"expression":{"arguments":[{"id":1252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"3569:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}],"id":1251,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"3560:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1082_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1244,"id":1254,"nodeType":"Return","src":"3553:22:9"}]}}]},"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"3242:120:9","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3376:20:9","nodeType":"FunctionDefinition","parameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"value","nameLocation":"3409:5:9","nodeType":"VariableDeclaration","scope":1261,"src":"3397:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"},"typeName":{"id":1237,"nodeType":"UserDefinedTypeName","pathNode":{"id":1236,"name":"ShortString","nameLocations":["3397:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"3397:11:9"},"referencedDeclaration":1082,"src":"3397:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"store","nameLocation":"3431:5:9","nodeType":"VariableDeclaration","scope":1261,"src":"3416:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1239,"name":"string","nodeType":"ElementaryTypeName","src":"3416:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3396:41:9"},"returnParameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1261,"src":"3461:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1242,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3460:15:9"},"scope":1293,"src":"3367:268:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"4108:175:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"4141:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}],"expression":{"id":1272,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"4122:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1082_$","typeString":"type(ShortString)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4134:6:9","memberName":"unwrap","nodeType":"MemberAccess","src":"4122:18:9","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1082_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4122:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1276,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"4151:18:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4122:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1289,"nodeType":"Block","src":"4226:51:9","statements":[{"expression":{"expression":{"arguments":[{"id":1285,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"4253:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1283,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:9","typeDescriptions":{}}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4260:6:9","memberName":"length","nodeType":"MemberAccess","src":"4247:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1271,"id":1288,"nodeType":"Return","src":"4240:26:9"}]},"id":1290,"nodeType":"IfStatement","src":"4118:159:9","trueBody":{"id":1282,"nodeType":"Block","src":"4171:49:9","statements":[{"expression":{"arguments":[{"id":1279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"4203:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}],"id":1278,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"4192:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1082_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1271,"id":1281,"nodeType":"Return","src":"4185:24:9"}]}}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"3641:357:9","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4012:22:9","nodeType":"FunctionDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"value","nameLocation":"4047:5:9","nodeType":"VariableDeclaration","scope":1292,"src":"4035:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"},"typeName":{"id":1264,"nodeType":"UserDefinedTypeName","pathNode":{"id":1263,"name":"ShortString","nameLocations":["4035:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"4035:11:9"},"referencedDeclaration":1082,"src":"4035:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"store","nameLocation":"4069:5:9","nodeType":"VariableDeclaration","scope":1292,"src":"4054:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1266,"name":"string","nodeType":"ElementaryTypeName","src":"4054:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:41:9"},"returnParameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1292,"src":"4099:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:9"},"scope":1293,"src":"4003:280:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1294,"src":"1235:3050:9","usedErrors":[1090,1092],"usedEvents":[]}],"src":"106:4180:9"},"id":9},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1403]},"id":1404,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1295,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"218:1201:10","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":1403,"linearizedBaseContracts":[1403],"name":"StorageSlot","nameLocation":"1428:11:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1299,"members":[{"constant":false,"id":1298,"mutability":"mutable","name":"value","nameLocation":"1483:5:10","nodeType":"VariableDeclaration","scope":1299,"src":"1475:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:10","nodeType":"StructDefinition","scope":1403,"src":"1446:49:10","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1302,"members":[{"constant":false,"id":1301,"mutability":"mutable","name":"value","nameLocation":"1535:5:10","nodeType":"VariableDeclaration","scope":1302,"src":"1530:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1300,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:10","nodeType":"StructDefinition","scope":1403,"src":"1501:46:10","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1305,"members":[{"constant":false,"id":1304,"mutability":"mutable","name":"value","nameLocation":"1590:5:10","nodeType":"VariableDeclaration","scope":1305,"src":"1582:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:10","nodeType":"StructDefinition","scope":1403,"src":"1553:49:10","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1308,"members":[{"constant":false,"id":1307,"mutability":"mutable","name":"value","nameLocation":"1645:5:10","nodeType":"VariableDeclaration","scope":1308,"src":"1637:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:10","nodeType":"StructDefinition","scope":1403,"src":"1608:49:10","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1311,"members":[{"constant":false,"id":1310,"mutability":"mutable","name":"value","nameLocation":"1698:5:10","nodeType":"VariableDeclaration","scope":1311,"src":"1691:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1309,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:10","nodeType":"StructDefinition","scope":1403,"src":"1663:47:10","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1314,"members":[{"constant":false,"id":1313,"mutability":"mutable","name":"value","nameLocation":"1749:5:10","nodeType":"VariableDeclaration","scope":1314,"src":"1743:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1312,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:10","nodeType":"StructDefinition","scope":1403,"src":"1716:45:10","visibility":"public"},{"body":{"id":1324,"nodeType":"Block","src":"1943:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:10","statements":[{"nodeType":"YulAssignment","src":"2019:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1321,"isOffset":false,"isSlot":true,"src":"2019:6:10","suffix":"slot","valueSize":1},{"declaration":1317,"isOffset":false,"isSlot":false,"src":"2029:4:10","valueSize":1}],"id":1323,"nodeType":"InlineAssembly","src":"1996:47:10"}]},"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"1767:87:10","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1325,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:10","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"slot","nameLocation":"1891:4:10","nodeType":"VariableDeclaration","scope":1325,"src":"1883:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:10"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"r","nameLocation":"1940:1:10","nodeType":"VariableDeclaration","scope":1325,"src":"1920:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1299_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1320,"nodeType":"UserDefinedTypeName","pathNode":{"id":1319,"name":"AddressSlot","nameLocations":["1920:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1299,"src":"1920:11:10"},"referencedDeclaration":1299,"src":"1920:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1299_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:10"},"scope":1403,"src":"1859:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1335,"nodeType":"Block","src":"2231:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:10","statements":[{"nodeType":"YulAssignment","src":"2307:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1332,"isOffset":false,"isSlot":true,"src":"2307:6:10","suffix":"slot","valueSize":1},{"declaration":1328,"isOffset":false,"isSlot":false,"src":"2317:4:10","valueSize":1}],"id":1334,"nodeType":"InlineAssembly","src":"2284:47:10"}]},"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"2055:87:10","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:10","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"slot","nameLocation":"2179:4:10","nodeType":"VariableDeclaration","scope":1336,"src":"2171:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:10"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"r","nameLocation":"2228:1:10","nodeType":"VariableDeclaration","scope":1336,"src":"2208:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1302_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1331,"nodeType":"UserDefinedTypeName","pathNode":{"id":1330,"name":"BooleanSlot","nameLocations":["2208:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1302,"src":"2208:11:10"},"referencedDeclaration":1302,"src":"2208:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1302_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:10"},"scope":1403,"src":"2147:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1346,"nodeType":"Block","src":"2519:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:10","statements":[{"nodeType":"YulAssignment","src":"2595:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1343,"isOffset":false,"isSlot":true,"src":"2595:6:10","suffix":"slot","valueSize":1},{"declaration":1339,"isOffset":false,"isSlot":false,"src":"2605:4:10","valueSize":1}],"id":1345,"nodeType":"InlineAssembly","src":"2572:47:10"}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"2343:87:10","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1347,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:10","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"slot","nameLocation":"2467:4:10","nodeType":"VariableDeclaration","scope":1347,"src":"2459:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:10"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"r","nameLocation":"2516:1:10","nodeType":"VariableDeclaration","scope":1347,"src":"2496:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1305_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1342,"nodeType":"UserDefinedTypeName","pathNode":{"id":1341,"name":"Bytes32Slot","nameLocations":["2496:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"2496:11:10"},"referencedDeclaration":1305,"src":"2496:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1305_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:10"},"scope":1403,"src":"2435:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1357,"nodeType":"Block","src":"2807:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:10","statements":[{"nodeType":"YulAssignment","src":"2883:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1354,"isOffset":false,"isSlot":true,"src":"2883:6:10","suffix":"slot","valueSize":1},{"declaration":1350,"isOffset":false,"isSlot":false,"src":"2893:4:10","valueSize":1}],"id":1356,"nodeType":"InlineAssembly","src":"2860:47:10"}]},"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"2631:87:10","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1358,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:10","nodeType":"FunctionDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"slot","nameLocation":"2755:4:10","nodeType":"VariableDeclaration","scope":1358,"src":"2747:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:10"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"r","nameLocation":"2804:1:10","nodeType":"VariableDeclaration","scope":1358,"src":"2784:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1308_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1353,"nodeType":"UserDefinedTypeName","pathNode":{"id":1352,"name":"Uint256Slot","nameLocations":["2784:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1308,"src":"2784:11:10"},"referencedDeclaration":1308,"src":"2784:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1308_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:10"},"scope":1403,"src":"2723:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1368,"nodeType":"Block","src":"3092:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:10","statements":[{"nodeType":"YulAssignment","src":"3168:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1365,"isOffset":false,"isSlot":true,"src":"3168:6:10","suffix":"slot","valueSize":1},{"declaration":1361,"isOffset":false,"isSlot":false,"src":"3178:4:10","valueSize":1}],"id":1367,"nodeType":"InlineAssembly","src":"3145:47:10"}]},"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"2919:86:10","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1369,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:10","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"slot","nameLocation":"3041:4:10","nodeType":"VariableDeclaration","scope":1369,"src":"3033:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:10"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"r","nameLocation":"3089:1:10","nodeType":"VariableDeclaration","scope":1369,"src":"3070:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1311_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1364,"nodeType":"UserDefinedTypeName","pathNode":{"id":1363,"name":"StringSlot","nameLocations":["3070:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1311,"src":"3070:10:10"},"referencedDeclaration":1311,"src":"3070:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1311_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:10"},"scope":1403,"src":"3010:188:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1379,"nodeType":"Block","src":"3400:112:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:10","statements":[{"nodeType":"YulAssignment","src":"3476:20:10","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1376,"isOffset":false,"isSlot":true,"src":"3476:6:10","suffix":"slot","valueSize":1},{"declaration":1372,"isOffset":false,"isSlot":true,"src":"3486:10:10","suffix":"slot","valueSize":1}],"id":1378,"nodeType":"InlineAssembly","src":"3453:53:10"}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"3204:101:10","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1380,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:10","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"store","nameLocation":"3348:5:10","nodeType":"VariableDeclaration","scope":1380,"src":"3333:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1371,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:10"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"r","nameLocation":"3397:1:10","nodeType":"VariableDeclaration","scope":1380,"src":"3378:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1311_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1375,"nodeType":"UserDefinedTypeName","pathNode":{"id":1374,"name":"StringSlot","nameLocations":["3378:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1311,"src":"3378:10:10"},"referencedDeclaration":1311,"src":"3378:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1311_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:10"},"scope":1403,"src":"3310:202:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1390,"nodeType":"Block","src":"3688:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:10","statements":[{"nodeType":"YulAssignment","src":"3764:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1387,"isOffset":false,"isSlot":true,"src":"3764:6:10","suffix":"slot","valueSize":1},{"declaration":1383,"isOffset":false,"isSlot":false,"src":"3774:4:10","valueSize":1}],"id":1389,"nodeType":"InlineAssembly","src":"3741:47:10"}]},"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"3518:85:10","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1391,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:10","nodeType":"FunctionDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"slot","nameLocation":"3638:4:10","nodeType":"VariableDeclaration","scope":1391,"src":"3630:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:10"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"r","nameLocation":"3685:1:10","nodeType":"VariableDeclaration","scope":1391,"src":"3667:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1314_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1386,"nodeType":"UserDefinedTypeName","pathNode":{"id":1385,"name":"BytesSlot","nameLocations":["3667:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1314,"src":"3667:9:10"},"referencedDeclaration":1314,"src":"3667:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1314_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:10"},"scope":1403,"src":"3608:186:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1401,"nodeType":"Block","src":"3991:112:10","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:10","statements":[{"nodeType":"YulAssignment","src":"4067:20:10","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1398,"isOffset":false,"isSlot":true,"src":"4067:6:10","suffix":"slot","valueSize":1},{"declaration":1394,"isOffset":false,"isSlot":true,"src":"4077:10:10","suffix":"slot","valueSize":1}],"id":1400,"nodeType":"InlineAssembly","src":"4044:53:10"}]},"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"3800:99:10","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1402,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:10","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"store","nameLocation":"3940:5:10","nodeType":"VariableDeclaration","scope":1402,"src":"3926:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1393,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:10"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"r","nameLocation":"3988:1:10","nodeType":"VariableDeclaration","scope":1402,"src":"3970:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1314_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1397,"nodeType":"UserDefinedTypeName","pathNode":{"id":1396,"name":"BytesSlot","nameLocations":["3970:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1314,"src":"3970:9:10"},"referencedDeclaration":1314,"src":"3970:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1314_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:10"},"scope":1403,"src":"3904:199:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1404,"src":"1420:2685:10","usedErrors":[],"usedEvents":[]}],"src":"193:3913:10"},"id":10},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3068],"SignedMath":[3173],"Strings":[1632]},"id":1633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1405,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1633,"sourceUnit":3069,"src":"126:25:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1633,"sourceUnit":3174,"src":"152:31:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"185:34:11","text":" @dev String operations."},"fullyImplemented":true,"id":1632,"linearizedBaseContracts":[1632],"name":"Strings","nameLocation":"228:7:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1411,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:11","nodeType":"VariableDeclaration","scope":1632,"src":"242:54:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1409,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1414,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:11","nodeType":"VariableDeclaration","scope":1632,"src":"302:43:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1412,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1461,"nodeType":"Block","src":"518:625:11","statements":[{"id":1460,"nodeType":"UncheckedBlock","src":"528:609:11","statements":[{"assignments":[1423],"declarations":[{"constant":false,"id":1423,"mutability":"mutable","name":"length","nameLocation":"560:6:11","nodeType":"VariableDeclaration","scope":1460,"src":"552:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1430,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"580:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1424,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"569:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3068_$","typeString":"type(library Math)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:11","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2905,"src":"569:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:11"},{"assignments":[1432],"declarations":[{"constant":false,"id":1432,"mutability":"mutable","name":"buffer","nameLocation":"618:6:11","nodeType":"VariableDeclaration","scope":1460,"src":"604:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1431,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1437,"initialValue":{"arguments":[{"id":1435,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"638:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1433,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:11"},{"assignments":[1439],"declarations":[{"constant":false,"id":1439,"mutability":"mutable","name":"ptr","nameLocation":"667:3:11","nodeType":"VariableDeclaration","scope":1460,"src":"659:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1440,"nodeType":"VariableDeclarationStatement","src":"659:11:11"},{"AST":{"nodeType":"YulBlock","src":"740:67:11","statements":[{"nodeType":"YulAssignment","src":"758:35:11","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:11","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:11"},"nodeType":"YulFunctionCall","src":"777:15:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:11"},"nodeType":"YulFunctionCall","src":"765:28:11"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1432,"isOffset":false,"isSlot":false,"src":"769:6:11","valueSize":1},{"declaration":1423,"isOffset":false,"isSlot":false,"src":"785:6:11","valueSize":1},{"declaration":1439,"isOffset":false,"isSlot":false,"src":"758:3:11","valueSize":1}],"id":1441,"nodeType":"InlineAssembly","src":"731:76:11"},{"body":{"id":1456,"nodeType":"Block","src":"833:267:11","statements":[{"expression":{"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:11","subExpression":{"id":1443,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"851:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1445,"nodeType":"ExpressionStatement","src":"851:5:11"},{"AST":{"nodeType":"YulBlock","src":"934:84:11","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:11","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:11"},"nodeType":"YulFunctionCall","src":"974:14:11"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:11"},"nodeType":"YulFunctionCall","src":"969:30:11"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:11"},"nodeType":"YulFunctionCall","src":"956:44:11"},"nodeType":"YulExpressionStatement","src":"956:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1411,"isOffset":false,"isSlot":false,"src":"990:8:11","valueSize":1},{"declaration":1439,"isOffset":false,"isSlot":false,"src":"964:3:11","valueSize":1},{"declaration":1417,"isOffset":false,"isSlot":false,"src":"978:5:11","valueSize":1}],"id":1446,"nodeType":"InlineAssembly","src":"925:93:11"},{"expression":{"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"1035:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1450,"nodeType":"ExpressionStatement","src":"1035:11:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"1068:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1455,"nodeType":"IfStatement","src":"1064:21:11","trueBody":{"id":1454,"nodeType":"Break","src":"1080:5:11"}}]},"condition":{"hexValue":"74727565","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1457,"nodeType":"WhileStatement","src":"820:280:11"},{"expression":{"id":1458,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"1120:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1421,"id":1459,"nodeType":"Return","src":"1113:13:11"}]}]},"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"352:90:11","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1462,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:11","nodeType":"FunctionDefinition","parameters":{"id":1418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"value","nameLocation":"473:5:11","nodeType":"VariableDeclaration","scope":1462,"src":"465:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1416,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:11"},"returnParameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1462,"src":"503:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1419,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:11"},"scope":1632,"src":"447:696:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"1313:103:11","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"1354:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:11","trueExpression":{"hexValue":"2d","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"1400:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1481,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"1385:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3173_$","typeString":"type(library SignedMath)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:11","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3172,"src":"1385:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1480,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1462,1490],"referencedDeclaration":1462,"src":"1376:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1472,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1470,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:11","typeDescriptions":{}}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1469,"id":1488,"nodeType":"Return","src":"1323:86:11"}]},"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"1149:89:11","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:11","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"value","nameLocation":"1268:5:11","nodeType":"VariableDeclaration","scope":1490,"src":"1261:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1464,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:11"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1490,"src":"1298:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1467,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:11"},"scope":1632,"src":"1243:173:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1509,"nodeType":"Block","src":"1595:100:11","statements":[{"id":1508,"nodeType":"UncheckedBlock","src":"1605:84:11","statements":[{"expression":{"arguments":[{"id":1499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1648:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1667:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1500,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"1655:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3068_$","typeString":"type(library Math)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:11","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3028,"src":"1655:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1498,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1510,1586,1606],"referencedDeclaration":1586,"src":"1636:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1497,"id":1507,"nodeType":"Return","src":"1629:49:11"}]}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"1422:94:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:11","nodeType":"FunctionDefinition","parameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"value","nameLocation":"1550:5:11","nodeType":"VariableDeclaration","scope":1510,"src":"1542:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:11"},"returnParameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"1580:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1495,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:11"},"scope":1632,"src":"1521:174:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1585,"nodeType":"Block","src":"1908:347:11","statements":[{"assignments":[1521],"declarations":[{"constant":false,"id":1521,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:11","nodeType":"VariableDeclaration","scope":1585,"src":"1918:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1520,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1530,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1525,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"1954:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1522,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:11"},{"expression":{"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1531,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"1975:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1533,"indexExpression":{"hexValue":"30","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1536,"nodeType":"ExpressionStatement","src":"1975:15:11"},{"expression":{"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1537,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"2000:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1539,"indexExpression":{"hexValue":"31","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1542,"nodeType":"ExpressionStatement","src":"2000:15:11"},{"body":{"id":1571,"nodeType":"Block","src":"2070:83:11","statements":[{"expression":{"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1557,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"2084:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1559,"indexExpression":{"id":1558,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2091:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1560,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"2096:8:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1564,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2105:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1566,"nodeType":"ExpressionStatement","src":"2084:33:11"},{"expression":{"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2131:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1570,"nodeType":"ExpressionStatement","src":"2131:11:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1551,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2058:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1572,"initializationExpression":{"assignments":[1544],"declarations":[{"constant":false,"id":1544,"mutability":"mutable","name":"i","nameLocation":"2038:1:11","nodeType":"VariableDeclaration","scope":1572,"src":"2030:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1550,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1546,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"2046:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:11"},"loopExpression":{"expression":{"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:11","subExpression":{"id":1554,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2067:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1556,"nodeType":"ExpressionStatement","src":"2065:3:11"},"nodeType":"ForStatement","src":"2025:128:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2170:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1579,"nodeType":"ExpressionStatement","src":"2162:55:11"},{"expression":{"arguments":[{"id":1582,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"2241:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1580,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:11","typeDescriptions":{}}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1519,"id":1584,"nodeType":"Return","src":"2227:21:11"}]},"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"1701:112:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1586,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:11","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"value","nameLocation":"1847:5:11","nodeType":"VariableDeclaration","scope":1586,"src":"1839:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"length","nameLocation":"1862:6:11","nodeType":"VariableDeclaration","scope":1586,"src":"1854:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:11"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1586,"src":"1893:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1517,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:11"},"scope":1632,"src":"1818:437:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1605,"nodeType":"Block","src":"2480:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1599,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"2525:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1597,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:11","typeDescriptions":{}}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:11","typeDescriptions":{}}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1602,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"2533:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1594,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1510,1586,1606],"referencedDeclaration":1586,"src":"2497:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1593,"id":1604,"nodeType":"Return","src":"2490:59:11"}]},"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"2261:141:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:11","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"addr","nameLocation":"2436:4:11","nodeType":"VariableDeclaration","scope":1606,"src":"2428:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:11"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"2465:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1591,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:11"},"scope":1632,"src":"2407:149:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1630,"nodeType":"Block","src":"2711:66:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1619,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"2744:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1617,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:11","typeDescriptions":{}}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1616,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1625,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"2767:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1623,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:11","typeDescriptions":{}}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1622,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1615,"id":1629,"nodeType":"Return","src":"2721:49:11"}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"2562:66:11","text":" @dev Returns true if the two strings are equal."},"id":1631,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:11","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"a","nameLocation":"2662:1:11","nodeType":"VariableDeclaration","scope":1631,"src":"2648:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1608,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"b","nameLocation":"2679:1:11","nodeType":"VariableDeclaration","scope":1631,"src":"2665:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1610,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:11"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1631,"src":"2705:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1613,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:11"},"scope":1632,"src":"2633:144:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1633,"src":"220:2559:11","usedErrors":[],"usedEvents":[]}],"src":"101:2679:11"},"id":11},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1998],"Math":[3068],"SignedMath":[3173],"Strings":[1632]},"id":1999,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1634,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1635,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1999,"sourceUnit":1633,"src":"137:24:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1636,"nodeType":"StructuredDocumentation","src":"163:205:12","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1998,"linearizedBaseContracts":[1998],"name":"ECDSA","nameLocation":"377:5:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1642,"members":[{"id":1637,"name":"NoError","nameLocation":"417:7:12","nodeType":"EnumValue","src":"417:7:12"},{"id":1638,"name":"InvalidSignature","nameLocation":"434:16:12","nodeType":"EnumValue","src":"434:16:12"},{"id":1639,"name":"InvalidSignatureLength","nameLocation":"460:22:12","nodeType":"EnumValue","src":"460:22:12"},{"id":1640,"name":"InvalidSignatureS","nameLocation":"492:17:12","nodeType":"EnumValue","src":"492:17:12"},{"id":1641,"name":"InvalidSignatureV","nameLocation":"519:17:12","nodeType":"EnumValue","src":"519:17:12"}],"name":"RecoverError","nameLocation":"394:12:12","nodeType":"EnumDefinition","src":"389:175:12"},{"body":{"id":1685,"nodeType":"Block","src":"624:457:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1648,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"638:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1649,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"647:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1642_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:12","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"647:20:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1654,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"734:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1655,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"743:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1642_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:12","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1638,"src":"743:29:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1663,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"843:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1664,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"852:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1642_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:12","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1639,"src":"852:35:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1672,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"965:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1673,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"974:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1642_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:12","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1640,"src":"974:30:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1681,"nodeType":"IfStatement","src":"961:114:12","trueBody":{"id":1680,"nodeType":"Block","src":"1006:69:12","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":1676,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1679,"nodeType":"ExpressionStatement","src":"1020:44:12"}]}},"id":1682,"nodeType":"IfStatement","src":"839:236:12","trueBody":{"id":1671,"nodeType":"Block","src":"889:66:12","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":1667,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1670,"nodeType":"ExpressionStatement","src":"903:41:12"}]}},"id":1683,"nodeType":"IfStatement","src":"730:345:12","trueBody":{"id":1662,"nodeType":"Block","src":"774:59:12","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":1658,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"ExpressionStatement","src":"788:34:12"}]}},"id":1684,"nodeType":"IfStatement","src":"634:441:12","trueBody":{"id":1653,"nodeType":"Block","src":"669:55:12","statements":[{"functionReturnParameters":1647,"id":1652,"nodeType":"Return","src":"683:7:12"}]}}]},"id":1686,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:12","nodeType":"FunctionDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"error","nameLocation":"604:5:12","nodeType":"VariableDeclaration","scope":1686,"src":"591:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1644,"nodeType":"UserDefinedTypeName","pathNode":{"id":1643,"name":"RecoverError","nameLocations":["591:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"591:12:12"},"referencedDeclaration":1642,"src":"591:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:12"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[],"src":"624:0:12"},"scope":1998,"src":"570:511:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1731,"nodeType":"Block","src":"2249:626:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1699,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"2263:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:12","memberName":"length","nodeType":"MemberAccess","src":"2263:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1729,"nodeType":"Block","src":"2788:81:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:12","typeDescriptions":{}}},"id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1725,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"2822:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1642_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:12","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1639,"src":"2822:35:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}}],"id":1727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1698,"id":1728,"nodeType":"Return","src":"2802:56:12"}]},"id":1730,"nodeType":"IfStatement","src":"2259:610:12","trueBody":{"id":1720,"nodeType":"Block","src":"2287:495:12","statements":[{"assignments":[1704],"declarations":[{"constant":false,"id":1704,"mutability":"mutable","name":"r","nameLocation":"2309:1:12","nodeType":"VariableDeclaration","scope":1720,"src":"2301:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1705,"nodeType":"VariableDeclarationStatement","src":"2301:9:12"},{"assignments":[1707],"declarations":[{"constant":false,"id":1707,"mutability":"mutable","name":"s","nameLocation":"2332:1:12","nodeType":"VariableDeclaration","scope":1720,"src":"2324:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1708,"nodeType":"VariableDeclarationStatement","src":"2324:9:12"},{"assignments":[1710],"declarations":[{"constant":false,"id":1710,"mutability":"mutable","name":"v","nameLocation":"2353:1:12","nodeType":"VariableDeclaration","scope":1720,"src":"2347:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1709,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1711,"nodeType":"VariableDeclarationStatement","src":"2347:7:12"},{"AST":{"nodeType":"YulBlock","src":"2555:171:12","statements":[{"nodeType":"YulAssignment","src":"2573:32:12","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:12"},"nodeType":"YulFunctionCall","src":"2584:20:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:12"},"nodeType":"YulFunctionCall","src":"2578:27:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:12"}]},{"nodeType":"YulAssignment","src":"2622:32:12","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:12"},"nodeType":"YulFunctionCall","src":"2633:20:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:12"},"nodeType":"YulFunctionCall","src":"2627:27:12"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:12"}]},{"nodeType":"YulAssignment","src":"2671:41:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:12","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:12"},"nodeType":"YulFunctionCall","src":"2690:20:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:12"},"nodeType":"YulFunctionCall","src":"2684:27:12"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:12"},"nodeType":"YulFunctionCall","src":"2676:36:12"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1704,"isOffset":false,"isSlot":false,"src":"2573:1:12","valueSize":1},{"declaration":1707,"isOffset":false,"isSlot":false,"src":"2622:1:12","valueSize":1},{"declaration":1691,"isOffset":false,"isSlot":false,"src":"2588:9:12","valueSize":1},{"declaration":1691,"isOffset":false,"isSlot":false,"src":"2637:9:12","valueSize":1},{"declaration":1691,"isOffset":false,"isSlot":false,"src":"2694:9:12","valueSize":1},{"declaration":1710,"isOffset":false,"isSlot":false,"src":"2671:1:12","valueSize":1}],"id":1712,"nodeType":"InlineAssembly","src":"2546:180:12"},{"expression":{"arguments":[{"id":1714,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"2757:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1715,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"2763:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1716,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"2766:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1717,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"2769:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1713,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1732,1806,1900],"referencedDeclaration":1900,"src":"2746:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1698,"id":1719,"nodeType":"Return","src":"2739:32:12"}]}}]},"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"1087:1053:12","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":1732,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:12","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"hash","nameLocation":"2173:4:12","nodeType":"VariableDeclaration","scope":1732,"src":"2165:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"signature","nameLocation":"2192:9:12","nodeType":"VariableDeclaration","scope":1732,"src":"2179:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1690,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:12"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1732,"src":"2226:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1732,"src":"2235:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1696,"nodeType":"UserDefinedTypeName","pathNode":{"id":1695,"name":"RecoverError","nameLocations":["2235:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"2235:12:12"},"referencedDeclaration":1642,"src":"2235:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:12"},"scope":1998,"src":"2145:730:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1758,"nodeType":"Block","src":"3748:140:12","statements":[{"assignments":[1743,1746],"declarations":[{"constant":false,"id":1743,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:12","nodeType":"VariableDeclaration","scope":1758,"src":"3759:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"error","nameLocation":"3791:5:12","nodeType":"VariableDeclaration","scope":1758,"src":"3778:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1745,"nodeType":"UserDefinedTypeName","pathNode":{"id":1744,"name":"RecoverError","nameLocations":["3778:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"3778:12:12"},"referencedDeclaration":1642,"src":"3778:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1751,"initialValue":{"arguments":[{"id":1748,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3811:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1749,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"3817:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1747,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1732,1806,1900],"referencedDeclaration":1732,"src":"3800:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:12"},{"expression":{"arguments":[{"id":1753,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"3849:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}],"id":1752,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"3837:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1642_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1755,"nodeType":"ExpressionStatement","src":"3837:18:12"},{"expression":{"id":1756,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"3872:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1741,"id":1757,"nodeType":"Return","src":"3865:16:12"}]},"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"2881:775:12","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":1759,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:12","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"hash","nameLocation":"3686:4:12","nodeType":"VariableDeclaration","scope":1759,"src":"3678:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"signature","nameLocation":"3705:9:12","nodeType":"VariableDeclaration","scope":1759,"src":"3692:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1736,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:12"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1759,"src":"3739:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1739,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:12"},"scope":1998,"src":"3661:227:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1805,"nodeType":"Block","src":"4245:203:12","statements":[{"assignments":[1775],"declarations":[{"constant":false,"id":1775,"mutability":"mutable","name":"s","nameLocation":"4263:1:12","nodeType":"VariableDeclaration","scope":1805,"src":"4255:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1774,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1782,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1776,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4267:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:12","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:12","typeDescriptions":{}}},"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:12"},{"assignments":[1784],"declarations":[{"constant":false,"id":1784,"mutability":"mutable","name":"v","nameLocation":"4363:1:12","nodeType":"VariableDeclaration","scope":1805,"src":"4357:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1783,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1797,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1789,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4382:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:12","typeDescriptions":{}}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1793,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:12","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1785,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:12","typeDescriptions":{}}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:12"},{"expression":{"arguments":[{"id":1799,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"4427:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1800,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"4433:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1801,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"4436:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1802,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"4439:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1798,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1732,1806,1900],"referencedDeclaration":1900,"src":"4416:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1773,"id":1804,"nodeType":"Return","src":"4409:32:12"}]},"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"3894:243:12","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:12","nodeType":"FunctionDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"hash","nameLocation":"4170:4:12","nodeType":"VariableDeclaration","scope":1806,"src":"4162:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"r","nameLocation":"4184:1:12","nodeType":"VariableDeclaration","scope":1806,"src":"4176:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"vs","nameLocation":"4195:2:12","nodeType":"VariableDeclaration","scope":1806,"src":"4187:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:12"},"returnParameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"4222:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"4231:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1771,"nodeType":"UserDefinedTypeName","pathNode":{"id":1770,"name":"RecoverError","nameLocations":["4231:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"4231:12:12"},"referencedDeclaration":1642,"src":"4231:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:12"},"scope":1998,"src":"4142:306:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1835,"nodeType":"Block","src":"4699:136:12","statements":[{"assignments":[1819,1822],"declarations":[{"constant":false,"id":1819,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:12","nodeType":"VariableDeclaration","scope":1835,"src":"4710:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1818,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1822,"mutability":"mutable","name":"error","nameLocation":"4742:5:12","nodeType":"VariableDeclaration","scope":1835,"src":"4729:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1821,"nodeType":"UserDefinedTypeName","pathNode":{"id":1820,"name":"RecoverError","nameLocations":["4729:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"4729:12:12"},"referencedDeclaration":1642,"src":"4729:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1828,"initialValue":{"arguments":[{"id":1824,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"4762:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1825,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"4768:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1826,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"4771:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1823,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1732,1806,1900],"referencedDeclaration":1806,"src":"4751:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:12"},{"expression":{"arguments":[{"id":1830,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"4796:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}],"id":1829,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"4784:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1642_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1832,"nodeType":"ExpressionStatement","src":"4784:18:12"},{"expression":{"id":1833,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"4819:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1817,"id":1834,"nodeType":"Return","src":"4812:16:12"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"4454:154:12","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":1836,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:12","nodeType":"FunctionDefinition","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"hash","nameLocation":"4638:4:12","nodeType":"VariableDeclaration","scope":1836,"src":"4630:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"r","nameLocation":"4652:1:12","nodeType":"VariableDeclaration","scope":1836,"src":"4644:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1813,"mutability":"mutable","name":"vs","nameLocation":"4663:2:12","nodeType":"VariableDeclaration","scope":1836,"src":"4655:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:12"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1836,"src":"4690:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:12"},"scope":1998,"src":"4613:222:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1899,"nodeType":"Block","src":"5120:1345:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1855,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"6016:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:12","typeDescriptions":{}}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:12","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1868,"nodeType":"IfStatement","src":"6004:161:12","trueBody":{"id":1867,"nodeType":"Block","src":"6089:76:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1859,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:12","typeDescriptions":{}}},"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1863,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"6123:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1642_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:12","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1640,"src":"6123:30:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}}],"id":1865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1852,"id":1866,"nodeType":"Return","src":"6103:51:12"}]}},{"assignments":[1870],"declarations":[{"constant":false,"id":1870,"mutability":"mutable","name":"signer","nameLocation":"6267:6:12","nodeType":"VariableDeclaration","scope":1899,"src":"6259:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1877,"initialValue":{"arguments":[{"id":1872,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"6286:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1873,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"6292:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1874,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"6295:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1875,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"6298:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1871,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:12","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"6314:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:12","typeDescriptions":{}}},"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1893,"nodeType":"IfStatement","src":"6310:101:12","trueBody":{"id":1892,"nodeType":"Block","src":"6336:75:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1884,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:12","typeDescriptions":{}}},"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1888,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"6370:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1642_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:12","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1638,"src":"6370:29:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}}],"id":1890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1852,"id":1891,"nodeType":"Return","src":"6350:50:12"}]}},{"expression":{"components":[{"id":1894,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"6429:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1895,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"6437:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1642_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:12","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"6437:20:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}}],"id":1897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1852,"id":1898,"nodeType":"Return","src":"6421:37:12"}]},"documentation":{"id":1837,"nodeType":"StructuredDocumentation","src":"4841:163:12","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":1900,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:12","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"hash","nameLocation":"5037:4:12","nodeType":"VariableDeclaration","scope":1900,"src":"5029:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1841,"mutability":"mutable","name":"v","nameLocation":"5049:1:12","nodeType":"VariableDeclaration","scope":1900,"src":"5043:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1840,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1843,"mutability":"mutable","name":"r","nameLocation":"5060:1:12","nodeType":"VariableDeclaration","scope":1900,"src":"5052:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"s","nameLocation":"5071:1:12","nodeType":"VariableDeclaration","scope":1900,"src":"5063:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:12"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1900,"src":"5097:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1900,"src":"5106:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1850,"nodeType":"UserDefinedTypeName","pathNode":{"id":1849,"name":"RecoverError","nameLocations":["5106:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"5106:12:12"},"referencedDeclaration":1642,"src":"5106:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:12"},"scope":1998,"src":"5009:1456:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1932,"nodeType":"Block","src":"6692:138:12","statements":[{"assignments":[1915,1918],"declarations":[{"constant":false,"id":1915,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:12","nodeType":"VariableDeclaration","scope":1932,"src":"6703:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"error","nameLocation":"6735:5:12","nodeType":"VariableDeclaration","scope":1932,"src":"6722:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1917,"nodeType":"UserDefinedTypeName","pathNode":{"id":1916,"name":"RecoverError","nameLocations":["6722:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"6722:12:12"},"referencedDeclaration":1642,"src":"6722:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1925,"initialValue":{"arguments":[{"id":1920,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"6755:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1921,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"6761:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1922,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"6764:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1923,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"6767:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1919,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1732,1806,1900],"referencedDeclaration":1900,"src":"6744:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1642_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:12"},{"expression":{"arguments":[{"id":1927,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"6791:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1642","typeString":"enum ECDSA.RecoverError"}],"id":1926,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"6779:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1642_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1929,"nodeType":"ExpressionStatement","src":"6779:18:12"},{"expression":{"id":1930,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"6814:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1913,"id":1931,"nodeType":"Return","src":"6807:16:12"}]},"documentation":{"id":1901,"nodeType":"StructuredDocumentation","src":"6471:122:12","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1933,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:12","nodeType":"FunctionDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"hash","nameLocation":"6623:4:12","nodeType":"VariableDeclaration","scope":1933,"src":"6615:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1905,"mutability":"mutable","name":"v","nameLocation":"6635:1:12","nodeType":"VariableDeclaration","scope":1933,"src":"6629:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1904,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1907,"mutability":"mutable","name":"r","nameLocation":"6646:1:12","nodeType":"VariableDeclaration","scope":1933,"src":"6638:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"s","nameLocation":"6657:1:12","nodeType":"VariableDeclaration","scope":1933,"src":"6649:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:12"},"returnParameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1933,"src":"6683:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:12"},"scope":1998,"src":"6598:232:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1942,"nodeType":"Block","src":"7206:310:12","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:12","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:12","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:12"},"nodeType":"YulFunctionCall","src":"7376:48:12"},"nodeType":"YulExpressionStatement","src":"7376:48:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:12","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:12"},"nodeType":"YulFunctionCall","src":"7437:18:12"},"nodeType":"YulExpressionStatement","src":"7437:18:12"},{"nodeType":"YulAssignment","src":"7468:32:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:12","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:12","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:12"},"nodeType":"YulFunctionCall","src":"7479:21:12"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1936,"isOffset":false,"isSlot":false,"src":"7450:4:12","valueSize":1},{"declaration":1939,"isOffset":false,"isSlot":false,"src":"7468:7:12","valueSize":1}],"id":1941,"nodeType":"InlineAssembly","src":"7353:157:12"}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"6836:279:12","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1943,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:12","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"hash","nameLocation":"7160:4:12","nodeType":"VariableDeclaration","scope":1943,"src":"7152:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:12"},"returnParameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"message","nameLocation":"7197:7:12","nodeType":"VariableDeclaration","scope":1943,"src":"7189:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:12"},"scope":1998,"src":"7120:396:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1964,"nodeType":"Block","src":"7881:116:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":1957,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"7976:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:12","memberName":"length","nodeType":"MemberAccess","src":"7976:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1955,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"7959:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1632_$","typeString":"type(library Strings)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:12","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1462,"src":"7959:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1960,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"7987:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1952,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1951,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1950,"id":1963,"nodeType":"Return","src":"7891:99:12"}]},"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"7522:274:12","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1965,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:12","nodeType":"FunctionDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"s","nameLocation":"7846:1:12","nodeType":"VariableDeclaration","scope":1965,"src":"7833:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1945,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:12"},"returnParameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1965,"src":"7872:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:12"},"scope":1998,"src":"7801:196:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1976,"nodeType":"Block","src":"8443:290:12","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:12","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:12"},"nodeType":"YulFunctionCall","src":"8530:11:12"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:12","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:12"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:12","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:12"},"nodeType":"YulFunctionCall","src":"8554:23:12"},"nodeType":"YulExpressionStatement","src":"8554:23:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:12","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:12"},"nodeType":"YulFunctionCall","src":"8597:14:12"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:12"},"nodeType":"YulFunctionCall","src":"8590:39:12"},"nodeType":"YulExpressionStatement","src":"8590:39:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:12","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:12"},"nodeType":"YulFunctionCall","src":"8649:14:12"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:12"},"nodeType":"YulFunctionCall","src":"8642:34:12"},"nodeType":"YulExpressionStatement","src":"8642:34:12"},{"nodeType":"YulAssignment","src":"8689:28:12","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:12","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:12"},"nodeType":"YulFunctionCall","src":"8697:20:12"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1973,"isOffset":false,"isSlot":false,"src":"8689:4:12","valueSize":1},{"declaration":1968,"isOffset":false,"isSlot":false,"src":"8613:15:12","valueSize":1},{"declaration":1970,"isOffset":false,"isSlot":false,"src":"8665:10:12","valueSize":1}],"id":1975,"nodeType":"InlineAssembly","src":"8496:231:12"}]},"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"8003:328:12","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:12","nodeType":"FunctionDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:12","nodeType":"VariableDeclaration","scope":1977,"src":"8361:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:12","nodeType":"VariableDeclaration","scope":1977,"src":"8386:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:12"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"data","nameLocation":"8437:4:12","nodeType":"VariableDeclaration","scope":1977,"src":"8429:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:12"},"scope":1998,"src":"8336:397:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1996,"nodeType":"Block","src":"9048:80:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":1991,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"9104:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1992,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"9115:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1988,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1987,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1986,"id":1995,"nodeType":"Return","src":"9058:63:12"}]},"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"8739:193:12","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":1997,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:12","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"validator","nameLocation":"8986:9:12","nodeType":"VariableDeclaration","scope":1997,"src":"8978:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"data","nameLocation":"9010:4:12","nodeType":"VariableDeclaration","scope":1997,"src":"8997:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1981,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:12"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1997,"src":"9039:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:12"},"scope":1998,"src":"8937:191:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1999,"src":"369:8761:12","usedErrors":[],"usedEvents":[]}],"src":"112:9019:12"},"id":12},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[1998],"EIP712":[2202],"IERC5267":[137],"Math":[3068],"ShortString":[1082],"ShortStrings":[1293],"SignedMath":[3173],"StorageSlot":[1403],"Strings":[1632]},"id":2203,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2000,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":2001,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2203,"sourceUnit":1999,"src":"138:21:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2203,"sourceUnit":1294,"src":"160:29:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2203,"sourceUnit":138,"src":"190:39:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2005,"name":"IERC5267","nameLocations":["1837:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":137,"src":"1837:8:13"},"id":2006,"nodeType":"InheritanceSpecifier","src":"1837:8:13"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2004,"nodeType":"StructuredDocumentation","src":"231:1577:13","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"fullyImplemented":true,"id":2202,"linearizedBaseContracts":[2202,137],"name":"EIP712","nameLocation":"1827:6:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2008,"libraryName":{"id":2007,"name":"ShortStrings","nameLocations":["1858:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"1858:12:13"},"nodeType":"UsingForDirective","src":"1852:25:13"},{"constant":true,"id":2013,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1908:10:13","nodeType":"VariableDeclaration","scope":2202,"src":"1883:141:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:84:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2010,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1929:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:95:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2015,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2249:22:13","nodeType":"VariableDeclaration","scope":2202,"src":"2223:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2017,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2303:14:13","nodeType":"VariableDeclaration","scope":2202,"src":"2277:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2019,"mutability":"immutable","name":"_cachedThis","nameLocation":"2349:11:13","nodeType":"VariableDeclaration","scope":2202,"src":"2323:37:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2021,"mutability":"immutable","name":"_hashedName","nameLocation":"2393:11:13","nodeType":"VariableDeclaration","scope":2202,"src":"2367:37:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2023,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2436:14:13","nodeType":"VariableDeclaration","scope":2202,"src":"2410:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2410:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2026,"mutability":"immutable","name":"_name","nameLocation":"2487:5:13","nodeType":"VariableDeclaration","scope":2202,"src":"2457:35:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"},"typeName":{"id":2025,"nodeType":"UserDefinedTypeName","pathNode":{"id":2024,"name":"ShortString","nameLocations":["2457:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"2457:11:13"},"referencedDeclaration":1082,"src":"2457:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2029,"mutability":"immutable","name":"_version","nameLocation":"2528:8:13","nodeType":"VariableDeclaration","scope":2202,"src":"2498:38:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"},"typeName":{"id":2028,"nodeType":"UserDefinedTypeName","pathNode":{"id":2027,"name":"ShortString","nameLocations":["2498:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"2498:11:13"},"referencedDeclaration":1082,"src":"2498:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2031,"mutability":"mutable","name":"_nameFallback","nameLocation":"2557:13:13","nodeType":"VariableDeclaration","scope":2202,"src":"2542:28:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2030,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2033,"mutability":"mutable","name":"_versionFallback","nameLocation":"2591:16:13","nodeType":"VariableDeclaration","scope":2202,"src":"2576:31:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2032,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2090,"nodeType":"Block","src":"3233:376:13","statements":[{"expression":{"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2041,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"3243:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2044,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"3282:13:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2042,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"3251:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:25:13","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1234,"src":"3251:30:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1082_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"src":"3243:53:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"id":2047,"nodeType":"ExpressionStatement","src":"3243:53:13"},{"expression":{"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2048,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"3306:8:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2051,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"3351:16:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2049,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"3317:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3325:25:13","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1234,"src":"3317:33:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1082_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"src":"3306:62:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"id":2054,"nodeType":"ExpressionStatement","src":"3306:62:13"},{"expression":{"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2055,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"3378:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2059,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"3408:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2057,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:13","typeDescriptions":{}}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2056,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3392:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3392:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3378:36:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2063,"nodeType":"ExpressionStatement","src":"3378:36:13"},{"expression":{"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2064,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"3424:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2068,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"3457:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3451:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2066,"name":"bytes","nodeType":"ElementaryTypeName","src":"3451:5:13","typeDescriptions":{}}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3451:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2065,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3441:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3424:42:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2072,"nodeType":"ExpressionStatement","src":"3424:42:13"},{"expression":{"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2073,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3477:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2074,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3500:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"3494:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3477:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2077,"nodeType":"ExpressionStatement","src":"3477:30:13"},{"expression":{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2078,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3517:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2079,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"3542:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:48:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2082,"nodeType":"ExpressionStatement","src":"3517:48:13"},{"expression":{"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2083,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"3575:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2086,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2202","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2202","typeString":"contract EIP712"}],"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2084,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:13","typeDescriptions":{}}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3589:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3575:27:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2089,"nodeType":"ExpressionStatement","src":"3575:27:13"}]},"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"2614:559:13","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2091,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"name","nameLocation":"3204:4:13","nodeType":"VariableDeclaration","scope":2091,"src":"3190:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2035,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"version","nameLocation":"3224:7:13","nodeType":"VariableDeclaration","scope":2091,"src":"3210:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2037,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3189:43:13"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[],"src":"3233:0:13"},"scope":2202,"src":"3178:431:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2116,"nodeType":"Block","src":"3757:200:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2099,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3779:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2202","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2202","typeString":"contract EIP712"}],"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3771:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2097,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:13","typeDescriptions":{}}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3771:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2101,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"3788:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2103,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"3803:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2105,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3820:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3771:63:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2114,"nodeType":"Block","src":"3896:55:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2111,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"3917:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2096,"id":2113,"nodeType":"Return","src":"3910:30:13"}]},"id":2115,"nodeType":"IfStatement","src":"3767:184:13","trueBody":{"id":2110,"nodeType":"Block","src":"3836:54:13","statements":[{"expression":{"id":2108,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3857:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2096,"id":2109,"nodeType":"Return","src":"3850:29:13"}]}}]},"documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"3615:75:13","text":" @dev Returns the domain separator for the current chain."},"id":2117,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3704:18:13","nodeType":"FunctionDefinition","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[],"src":"3722:2:13"},"returnParameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2117,"src":"3748:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3748:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3747:9:13"},"scope":2202,"src":"3695:262:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2137,"nodeType":"Block","src":"4027:116:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2125,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"4065:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2126,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4077:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2127,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"4090:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2128,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4106:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4112:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"4106:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2132,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4129:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2202","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2202","typeString":"contract EIP712"}],"id":2131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:13","typeDescriptions":{}}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2123,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4054:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4058:6:13","memberName":"encode","nodeType":"MemberAccess","src":"4054:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2122,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4044:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:92:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2121,"id":2136,"nodeType":"Return","src":"4037:99:13"}]},"id":2138,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3972:21:13","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[],"src":"3993:2:13"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2138,"src":"4018:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4018:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4017:9:13"},"scope":2202,"src":"3963:180:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2153,"nodeType":"Block","src":"4854:79:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2148,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"4893:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4893:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2150,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"4915:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2146,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"4871:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1998_$","typeString":"type(library ECDSA)"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4877:15:13","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":1977,"src":"4871:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4871:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2145,"id":2152,"nodeType":"Return","src":"4864:62:13"}]},"documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"4149:614:13","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2154,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4777:16:13","nodeType":"FunctionDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"structHash","nameLocation":"4802:10:13","nodeType":"VariableDeclaration","scope":2154,"src":"4794:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4794:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4793:20:13"},"returnParameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2154,"src":"4845:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4844:9:13"},"scope":2202,"src":"4768:165:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[136],"body":{"id":2200,"nodeType":"Block","src":"5366:288:13","statements":[{"expression":{"components":[{"hexValue":"0f","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5397:7:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[{"id":2177,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"5454:13:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2175,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"5427:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5433:20:13","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"5427:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1082_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1082_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":2181,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"5512:16:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2179,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"5482:8:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1082","typeString":"ShortString"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5491:20:13","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"5482:29:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1082_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1082_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5482:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2183,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5543:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5549:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"5543:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2187,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5578:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2202","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2202","typeString":"contract EIP712"}],"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5570:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:13","typeDescriptions":{}}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5570:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5597:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5597:7:13","typeDescriptions":{}}},"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5621:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2194,"nodeType":"ArrayTypeName","src":"5625:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5621:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:264:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2173,"id":2199,"nodeType":"Return","src":"5376:271:13"}]},"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"4939:77:13","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":2201,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5030:12:13","nodeType":"FunctionDefinition","overrides":{"id":2157,"nodeType":"OverrideSpecifier","overrides":[],"src":"5097:8:13"},"parameters":{"id":2156,"nodeType":"ParameterList","parameters":[],"src":"5042:2:13"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"fields","nameLocation":"5143:6:13","nodeType":"VariableDeclaration","scope":2201,"src":"5136:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2158,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5136:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"name","nameLocation":"5177:4:13","nodeType":"VariableDeclaration","scope":2201,"src":"5163:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2160,"name":"string","nodeType":"ElementaryTypeName","src":"5163:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"version","nameLocation":"5209:7:13","nodeType":"VariableDeclaration","scope":2201,"src":"5195:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2162,"name":"string","nodeType":"ElementaryTypeName","src":"5195:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"chainId","nameLocation":"5238:7:13","nodeType":"VariableDeclaration","scope":2201,"src":"5230:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"verifyingContract","nameLocation":"5267:17:13","nodeType":"VariableDeclaration","scope":2201,"src":"5259:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2166,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"salt","nameLocation":"5306:4:13","nodeType":"VariableDeclaration","scope":2201,"src":"5298:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5298:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2172,"mutability":"mutable","name":"extensions","nameLocation":"5341:10:13","nodeType":"VariableDeclaration","scope":2201,"src":"5324:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2171,"nodeType":"ArrayTypeName","src":"5324:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5122:239:13"},"scope":2202,"src":"5021:633:13","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2203,"src":"1809:3847:13","usedErrors":[1090,1092],"usedEvents":[117]}],"src":"113:5544:13"},"id":13},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3068]},"id":3069,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2204,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"128:73:14","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3068,"linearizedBaseContracts":[3068],"name":"Math","nameLocation":"210:4:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2209,"members":[{"id":2206,"name":"Down","nameLocation":"245:4:14","nodeType":"EnumValue","src":"245:4:14"},{"id":2207,"name":"Up","nameLocation":"287:2:14","nodeType":"EnumValue","src":"287:2:14"},{"id":2208,"name":"Zero","nameLocation":"318:4:14","nodeType":"EnumValue","src":"318:4:14"}],"name":"Rounding","nameLocation":"226:8:14","nodeType":"EnumDefinition","src":"221:122:14"},{"body":{"id":2226,"nodeType":"Block","src":"480:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"497:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2220,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"501:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2223,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"509:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:14","trueExpression":{"id":2222,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"505:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2218,"id":2225,"nodeType":"Return","src":"490:20:14"}]},"documentation":{"id":2210,"nodeType":"StructuredDocumentation","src":"349:59:14","text":" @dev Returns the largest of two numbers."},"id":2227,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:14","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"a","nameLocation":"434:1:14","nodeType":"VariableDeclaration","scope":2227,"src":"426:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"b","nameLocation":"445:1:14","nodeType":"VariableDeclaration","scope":2227,"src":"437:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:14"},"returnParameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2227,"src":"471:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:14"},"scope":3068,"src":"413:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2244,"nodeType":"Block","src":"655:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"672:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2238,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"676:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2241,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"684:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:14","trueExpression":{"id":2240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"680:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2236,"id":2243,"nodeType":"Return","src":"665:20:14"}]},"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"523:60:14","text":" @dev Returns the smallest of two numbers."},"id":2245,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:14","nodeType":"FunctionDefinition","parameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"a","nameLocation":"609:1:14","nodeType":"VariableDeclaration","scope":2245,"src":"601:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"b","nameLocation":"620:1:14","nodeType":"VariableDeclaration","scope":2245,"src":"612:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2231,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:14"},"returnParameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2245,"src":"646:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:14"},"scope":3068,"src":"588:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2267,"nodeType":"Block","src":"876:82:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"931:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"935:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2259,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"941:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2260,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"945:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2254,"id":2266,"nodeType":"Return","src":"923:28:14"}]},"documentation":{"id":2246,"nodeType":"StructuredDocumentation","src":"698:102:14","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2268,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:14","nodeType":"FunctionDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"a","nameLocation":"830:1:14","nodeType":"VariableDeclaration","scope":2268,"src":"822:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"b","nameLocation":"841:1:14","nodeType":"VariableDeclaration","scope":2268,"src":"833:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:14"},"returnParameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2268,"src":"867:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:14"},"scope":3068,"src":"805:153:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2292,"nodeType":"Block","src":"1228:123:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"1316:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2282,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"1330:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2286,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"1339:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:14","trueExpression":{"hexValue":"30","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2277,"id":2291,"nodeType":"Return","src":"1309:35:14"}]},"documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"964:188:14","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2293,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:14","nodeType":"FunctionDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"a","nameLocation":"1182:1:14","nodeType":"VariableDeclaration","scope":2293,"src":"1174:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2273,"mutability":"mutable","name":"b","nameLocation":"1193:1:14","nodeType":"VariableDeclaration","scope":2293,"src":"1185:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:14"},"returnParameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2293,"src":"1219:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:14"},"scope":3068,"src":"1157:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2415,"nodeType":"Block","src":"1765:4115:14","statements":[{"id":2414,"nodeType":"UncheckedBlock","src":"1775:4099:14","statements":[{"assignments":[2306],"declarations":[{"constant":false,"id":2306,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:14","nodeType":"VariableDeclaration","scope":2414,"src":"2096:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2307,"nodeType":"VariableDeclarationStatement","src":"2096:13:14"},{"assignments":[2309],"declarations":[{"constant":false,"id":2309,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:14","nodeType":"VariableDeclaration","scope":2414,"src":"2168:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2310,"nodeType":"VariableDeclarationStatement","src":"2168:13:14"},{"AST":{"nodeType":"YulBlock","src":"2248:157:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:14"},"nodeType":"YulFunctionCall","src":"2289:6:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:14"},"nodeType":"YulFunctionCall","src":"2276:20:14"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:14","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:14"},"nodeType":"YulFunctionCall","src":"2322:9:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:14"}]},{"nodeType":"YulAssignment","src":"2348:43:14","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:14"},"nodeType":"YulFunctionCall","src":"2361:14:14"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:14"},"nodeType":"YulFunctionCall","src":"2377:13:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:14"},"nodeType":"YulFunctionCall","src":"2357:34:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2306,"isOffset":false,"isSlot":false,"src":"2313:5:14","valueSize":1},{"declaration":2306,"isOffset":false,"isSlot":false,"src":"2369:5:14","valueSize":1},{"declaration":2306,"isOffset":false,"isSlot":false,"src":"2384:5:14","valueSize":1},{"declaration":2309,"isOffset":false,"isSlot":false,"src":"2348:5:14","valueSize":1},{"declaration":2296,"isOffset":false,"isSlot":false,"src":"2283:1:14","valueSize":1},{"declaration":2296,"isOffset":false,"isSlot":false,"src":"2326:1:14","valueSize":1},{"declaration":2298,"isOffset":false,"isSlot":false,"src":"2286:1:14","valueSize":1},{"declaration":2298,"isOffset":false,"isSlot":false,"src":"2329:1:14","valueSize":1}],"id":2311,"nodeType":"InlineAssembly","src":"2239:166:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2312,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"2486:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2320,"nodeType":"IfStatement","src":"2482:368:14","trueBody":{"id":2319,"nodeType":"Block","src":"2498:352:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2315,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"2816:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2316,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"2824:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2304,"id":2318,"nodeType":"Return","src":"2809:26:14"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2322,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"2960:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2323,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"2974:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2327,"nodeType":"ExpressionStatement","src":"2952:53:14"},{"assignments":[2329],"declarations":[{"constant":false,"id":2329,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:14","nodeType":"VariableDeclaration","scope":2414,"src":"3261:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2330,"nodeType":"VariableDeclarationStatement","src":"3261:17:14"},{"AST":{"nodeType":"YulBlock","src":"3301:291:14","statements":[{"nodeType":"YulAssignment","src":"3370:38:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:14"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:14"},"nodeType":"YulFunctionCall","src":"3383:25:14"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:14"}]},{"nodeType":"YulAssignment","src":"3490:41:14","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:14"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:14"},"nodeType":"YulFunctionCall","src":"3510:20:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:14"},"nodeType":"YulFunctionCall","src":"3499:32:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:14"}]},{"nodeType":"YulAssignment","src":"3548:30:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:14"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:14"},"nodeType":"YulFunctionCall","src":"3557:21:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2300,"isOffset":false,"isSlot":false,"src":"3396:11:14","valueSize":1},{"declaration":2306,"isOffset":false,"isSlot":false,"src":"3524:5:14","valueSize":1},{"declaration":2306,"isOffset":false,"isSlot":false,"src":"3548:5:14","valueSize":1},{"declaration":2306,"isOffset":false,"isSlot":false,"src":"3561:5:14","valueSize":1},{"declaration":2309,"isOffset":false,"isSlot":false,"src":"3490:5:14","valueSize":1},{"declaration":2309,"isOffset":false,"isSlot":false,"src":"3503:5:14","valueSize":1},{"declaration":2329,"isOffset":false,"isSlot":false,"src":"3370:9:14","valueSize":1},{"declaration":2329,"isOffset":false,"isSlot":false,"src":"3513:9:14","valueSize":1},{"declaration":2329,"isOffset":false,"isSlot":false,"src":"3568:9:14","valueSize":1},{"declaration":2296,"isOffset":false,"isSlot":false,"src":"3390:1:14","valueSize":1},{"declaration":2298,"isOffset":false,"isSlot":false,"src":"3393:1:14","valueSize":1}],"id":2331,"nodeType":"InlineAssembly","src":"3292:300:14"},{"assignments":[2333],"declarations":[{"constant":false,"id":2333,"mutability":"mutable","name":"twos","nameLocation":"3907:4:14","nodeType":"VariableDeclaration","scope":2414,"src":"3899:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2341,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2334,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"3914:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:14","subExpression":{"id":2335,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"3930:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:14"},{"AST":{"nodeType":"YulBlock","src":"3969:362:14","statements":[{"nodeType":"YulAssignment","src":"4034:37:14","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:14"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:14"},"nodeType":"YulFunctionCall","src":"4049:22:14"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:14"}]},{"nodeType":"YulAssignment","src":"4138:25:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:14"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:14"},"nodeType":"YulFunctionCall","src":"4147:16:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:14"}]},{"nodeType":"YulAssignment","src":"4278:39:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:14","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:14"},"nodeType":"YulFunctionCall","src":"4294:12:14"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:14"},"nodeType":"YulFunctionCall","src":"4290:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:14"},"nodeType":"YulFunctionCall","src":"4286:31:14"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2300,"isOffset":false,"isSlot":false,"src":"4034:11:14","valueSize":1},{"declaration":2300,"isOffset":false,"isSlot":false,"src":"4053:11:14","valueSize":1},{"declaration":2306,"isOffset":false,"isSlot":false,"src":"4138:5:14","valueSize":1},{"declaration":2306,"isOffset":false,"isSlot":false,"src":"4151:5:14","valueSize":1},{"declaration":2333,"isOffset":false,"isSlot":false,"src":"4066:4:14","valueSize":1},{"declaration":2333,"isOffset":false,"isSlot":false,"src":"4158:4:14","valueSize":1},{"declaration":2333,"isOffset":false,"isSlot":false,"src":"4278:4:14","valueSize":1},{"declaration":2333,"isOffset":false,"isSlot":false,"src":"4301:4:14","valueSize":1},{"declaration":2333,"isOffset":false,"isSlot":false,"src":"4308:4:14","valueSize":1}],"id":2342,"nodeType":"InlineAssembly","src":"3960:371:14"},{"expression":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2343,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"4397:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"4406:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2345,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"4414:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2348,"nodeType":"ExpressionStatement","src":"4397:21:14"},{"assignments":[2350],"declarations":[{"constant":false,"id":2350,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:14","nodeType":"VariableDeclaration","scope":2414,"src":"4736:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2357,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2352,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"4759:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:14"},{"expression":{"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2358,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"4992:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2360,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"5007:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2361,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5021:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2365,"nodeType":"ExpressionStatement","src":"4992:36:14"},{"expression":{"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2366,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5061:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2368,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"5076:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2369,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5090:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2373,"nodeType":"ExpressionStatement","src":"5061:36:14"},{"expression":{"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2374,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5131:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2376,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"5146:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2377,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5160:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2381,"nodeType":"ExpressionStatement","src":"5131:36:14"},{"expression":{"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2382,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5201:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2384,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"5216:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2385,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5230:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2389,"nodeType":"ExpressionStatement","src":"5201:36:14"},{"expression":{"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2390,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2392,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"5286:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2393,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5300:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2397,"nodeType":"ExpressionStatement","src":"5271:36:14"},{"expression":{"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2398,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5342:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2400,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"5357:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2401,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5371:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2405,"nodeType":"ExpressionStatement","src":"5342:36:14"},{"expression":{"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2406,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"5812:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2407,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"5821:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2408,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"5829:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2411,"nodeType":"ExpressionStatement","src":"5812:24:14"},{"expression":{"id":2412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"5857:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2304,"id":2413,"nodeType":"Return","src":"5850:13:14"}]}]},"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"1357:305:14","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2416,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:14","nodeType":"FunctionDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"x","nameLocation":"1691:1:14","nodeType":"VariableDeclaration","scope":2416,"src":"1683:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"y","nameLocation":"1702:1:14","nodeType":"VariableDeclaration","scope":2416,"src":"1694:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:14","nodeType":"VariableDeclaration","scope":2416,"src":"1705:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:14"},"returnParameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"result","nameLocation":"1757:6:14","nodeType":"VariableDeclaration","scope":2416,"src":"1749:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:14"},"scope":3068,"src":"1667:4213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2459,"nodeType":"Block","src":"6122:189:14","statements":[{"assignments":[2432],"declarations":[{"constant":false,"id":2432,"mutability":"mutable","name":"result","nameLocation":"6140:6:14","nodeType":"VariableDeclaration","scope":2459,"src":"6132:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2438,"initialValue":{"arguments":[{"id":2434,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"6156:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2435,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"6159:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2436,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"6162:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2433,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2416,2460],"referencedDeclaration":2416,"src":"6149:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2439,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"6188:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2440,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"6200:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2209_$","typeString":"type(enum Math.Rounding)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2207,"src":"6200:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"src":"6188:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2444,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"6222:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2445,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"6225:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2446,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"6228:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2443,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2456,"nodeType":"IfStatement","src":"6184:98:14","trueBody":{"id":2455,"nodeType":"Block","src":"6246:36:14","statements":[{"expression":{"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"6260:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2454,"nodeType":"ExpressionStatement","src":"6260:11:14"}]}},{"expression":{"id":2457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"6298:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2430,"id":2458,"nodeType":"Return","src":"6291:13:14"}]},"documentation":{"id":2417,"nodeType":"StructuredDocumentation","src":"5886:121:14","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2460,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:14","nodeType":"FunctionDefinition","parameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"x","nameLocation":"6036:1:14","nodeType":"VariableDeclaration","scope":2460,"src":"6028:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"y","nameLocation":"6047:1:14","nodeType":"VariableDeclaration","scope":2460,"src":"6039:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:14","nodeType":"VariableDeclaration","scope":2460,"src":"6050:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:14","nodeType":"VariableDeclaration","scope":2460,"src":"6071:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"},"typeName":{"id":2425,"nodeType":"UserDefinedTypeName","pathNode":{"id":2424,"name":"Rounding","nameLocations":["6071:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"6071:8:14"},"referencedDeclaration":2209,"src":"6071:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:14"},"returnParameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2460,"src":"6113:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:14"},"scope":3068,"src":"6012:299:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2571,"nodeType":"Block","src":"6587:1585:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2468,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"6601:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2474,"nodeType":"IfStatement","src":"6597:45:14","trueBody":{"id":2473,"nodeType":"Block","src":"6609:33:14","statements":[{"expression":{"hexValue":"30","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2467,"id":2472,"nodeType":"Return","src":"6623:8:14"}]}},{"assignments":[2476],"declarations":[{"constant":false,"id":2476,"mutability":"mutable","name":"result","nameLocation":"7329:6:14","nodeType":"VariableDeclaration","scope":2571,"src":"7321:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2485,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"7349:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2478,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2740,2776],"referencedDeclaration":2740,"src":"7344:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:14"},{"id":2570,"nodeType":"UncheckedBlock","src":"7758:408:14","statements":[{"expression":{"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2486,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7782:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7792:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"7801:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7805:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2496,"nodeType":"ExpressionStatement","src":"7782:35:14"},{"expression":{"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7831:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7841:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2499,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"7850:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2500,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7854:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2507,"nodeType":"ExpressionStatement","src":"7831:35:14"},{"expression":{"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7880:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7890:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2510,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"7899:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2511,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7903:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2518,"nodeType":"ExpressionStatement","src":"7880:35:14"},{"expression":{"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2519,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7929:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2520,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7939:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2521,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"7948:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7952:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2529,"nodeType":"ExpressionStatement","src":"7929:35:14"},{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2530,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7978:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7988:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"7997:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8001:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"nodeType":"ExpressionStatement","src":"7978:35:14"},{"expression":{"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2541,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8027:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2542,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8037:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2543,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"8046:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8050:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2551,"nodeType":"ExpressionStatement","src":"8027:35:14"},{"expression":{"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8076:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8086:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2554,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"8095:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8099:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2562,"nodeType":"ExpressionStatement","src":"8076:35:14"},{"expression":{"arguments":[{"id":2564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8136:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"8144:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8148:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2563,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"8132:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2467,"id":2569,"nodeType":"Return","src":"8125:30:14"}]}]},"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"6317:208:14","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2572,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:14","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"a","nameLocation":"6552:1:14","nodeType":"VariableDeclaration","scope":2572,"src":"6544:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:14"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2572,"src":"6578:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:14"},"scope":3068,"src":"6530:1642:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2607,"nodeType":"Block","src":"8348:161:14","statements":[{"id":2606,"nodeType":"UncheckedBlock","src":"8358:145:14","statements":[{"assignments":[2584],"declarations":[{"constant":false,"id":2584,"mutability":"mutable","name":"result","nameLocation":"8390:6:14","nodeType":"VariableDeclaration","scope":2606,"src":"8382:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2583,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2588,"initialValue":{"arguments":[{"id":2586,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"8404:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2585,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2572,2608],"referencedDeclaration":2572,"src":"8399:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"8427:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2590,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"8437:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2591,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"8449:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2209_$","typeString":"type(enum Math.Rounding)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2207,"src":"8449:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"src":"8437:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2594,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"8464:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2595,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"8473:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2597,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"8482:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:14","trueExpression":{"hexValue":"31","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2582,"id":2605,"nodeType":"Return","src":"8420:72:14"}]}]},"documentation":{"id":2573,"nodeType":"StructuredDocumentation","src":"8178:89:14","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2608,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:14","nodeType":"FunctionDefinition","parameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"a","nameLocation":"8294:1:14","nodeType":"VariableDeclaration","scope":2608,"src":"8286:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:14","nodeType":"VariableDeclaration","scope":2608,"src":"8297:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"},"typeName":{"id":2577,"nodeType":"UserDefinedTypeName","pathNode":{"id":2576,"name":"Rounding","nameLocations":["8297:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"8297:8:14"},"referencedDeclaration":2209,"src":"8297:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:14"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2608,"src":"8339:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:14"},"scope":3068,"src":"8272:237:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2739,"nodeType":"Block","src":"8694:922:14","statements":[{"assignments":[2617],"declarations":[{"constant":false,"id":2617,"mutability":"mutable","name":"result","nameLocation":"8712:6:14","nodeType":"VariableDeclaration","scope":2739,"src":"8704:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2619,"initialValue":{"hexValue":"30","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:14"},{"id":2736,"nodeType":"UncheckedBlock","src":"8732:855:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"8760:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2634,"nodeType":"IfStatement","src":"8756:99:14","trueBody":{"id":2633,"nodeType":"Block","src":"8778:77:14","statements":[{"expression":{"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"8796:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2628,"nodeType":"ExpressionStatement","src":"8796:13:14"},{"expression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"8827:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2632,"nodeType":"ExpressionStatement","src":"8827:13:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"8872:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2649,"nodeType":"IfStatement","src":"8868:96:14","trueBody":{"id":2648,"nodeType":"Block","src":"8889:75:14","statements":[{"expression":{"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"8907:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2643,"nodeType":"ExpressionStatement","src":"8907:12:14"},{"expression":{"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"8937:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2647,"nodeType":"ExpressionStatement","src":"8937:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"8981:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2664,"nodeType":"IfStatement","src":"8977:96:14","trueBody":{"id":2663,"nodeType":"Block","src":"8998:75:14","statements":[{"expression":{"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9016:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2658,"nodeType":"ExpressionStatement","src":"9016:12:14"},{"expression":{"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"9046:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2662,"nodeType":"ExpressionStatement","src":"9046:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9090:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2679,"nodeType":"IfStatement","src":"9086:96:14","trueBody":{"id":2678,"nodeType":"Block","src":"9107:75:14","statements":[{"expression":{"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9125:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2673,"nodeType":"ExpressionStatement","src":"9125:12:14"},{"expression":{"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"9155:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2677,"nodeType":"ExpressionStatement","src":"9155:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9199:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2694,"nodeType":"IfStatement","src":"9195:93:14","trueBody":{"id":2693,"nodeType":"Block","src":"9215:73:14","statements":[{"expression":{"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9233:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2688,"nodeType":"ExpressionStatement","src":"9233:11:14"},{"expression":{"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2689,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"9262:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2692,"nodeType":"ExpressionStatement","src":"9262:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9305:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2709,"nodeType":"IfStatement","src":"9301:93:14","trueBody":{"id":2708,"nodeType":"Block","src":"9321:73:14","statements":[{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9339:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2703,"nodeType":"ExpressionStatement","src":"9339:11:14"},{"expression":{"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2704,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"9368:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2707,"nodeType":"ExpressionStatement","src":"9368:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9411:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2724,"nodeType":"IfStatement","src":"9407:93:14","trueBody":{"id":2723,"nodeType":"Block","src":"9427:73:14","statements":[{"expression":{"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9445:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2718,"nodeType":"ExpressionStatement","src":"9445:11:14"},{"expression":{"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"9474:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2722,"nodeType":"ExpressionStatement","src":"9474:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"9517:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2735,"nodeType":"IfStatement","src":"9513:64:14","trueBody":{"id":2734,"nodeType":"Block","src":"9533:44:14","statements":[{"expression":{"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"9551:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2733,"nodeType":"ExpressionStatement","src":"9551:11:14"}]}}]},{"expression":{"id":2737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"9603:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2615,"id":2738,"nodeType":"Return","src":"9596:13:14"}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"8515:113:14","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2740,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:14","nodeType":"FunctionDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"value","nameLocation":"8655:5:14","nodeType":"VariableDeclaration","scope":2740,"src":"8647:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:14"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2740,"src":"8685:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:14"},"scope":3068,"src":"8633:983:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2775,"nodeType":"Block","src":"9849:165:14","statements":[{"id":2774,"nodeType":"UncheckedBlock","src":"9859:149:14","statements":[{"assignments":[2752],"declarations":[{"constant":false,"id":2752,"mutability":"mutable","name":"result","nameLocation":"9891:6:14","nodeType":"VariableDeclaration","scope":2774,"src":"9883:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2756,"initialValue":{"arguments":[{"id":2754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"9905:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2753,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2740,2776],"referencedDeclaration":2740,"src":"9900:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"9932:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2758,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"9942:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2759,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"9954:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2209_$","typeString":"type(enum Math.Rounding)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2207,"src":"9954:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"src":"9942:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"9974:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"9983:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:14","trueExpression":{"hexValue":"31","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2771,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2750,"id":2773,"nodeType":"Return","src":"9925:72:14"}]}]},"documentation":{"id":2741,"nodeType":"StructuredDocumentation","src":"9622:142:14","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2776,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:14","nodeType":"FunctionDefinition","parameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"value","nameLocation":"9791:5:14","nodeType":"VariableDeclaration","scope":2776,"src":"9783:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2746,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:14","nodeType":"VariableDeclaration","scope":2776,"src":"9798:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"},"typeName":{"id":2745,"nodeType":"UserDefinedTypeName","pathNode":{"id":2744,"name":"Rounding","nameLocations":["9798:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"9798:8:14"},"referencedDeclaration":2209,"src":"9798:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:14"},"returnParameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2776,"src":"9840:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:14"},"scope":3068,"src":"9769:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2904,"nodeType":"Block","src":"10201:854:14","statements":[{"assignments":[2785],"declarations":[{"constant":false,"id":2785,"mutability":"mutable","name":"result","nameLocation":"10219:6:14","nodeType":"VariableDeclaration","scope":2904,"src":"10211:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2787,"initialValue":{"hexValue":"30","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:14"},{"id":2901,"nodeType":"UncheckedBlock","src":"10239:787:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"10267:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2804,"nodeType":"IfStatement","src":"10263:103:14","trueBody":{"id":2803,"nodeType":"Block","src":"10286:80:14","statements":[{"expression":{"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"10304:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2798,"nodeType":"ExpressionStatement","src":"10304:17:14"},{"expression":{"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"10339:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2802,"nodeType":"ExpressionStatement","src":"10339:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"10383:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2821,"nodeType":"IfStatement","src":"10379:103:14","trueBody":{"id":2820,"nodeType":"Block","src":"10402:80:14","statements":[{"expression":{"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"10420:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2815,"nodeType":"ExpressionStatement","src":"10420:17:14"},{"expression":{"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"10455:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2819,"nodeType":"ExpressionStatement","src":"10455:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"10499:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2838,"nodeType":"IfStatement","src":"10495:103:14","trueBody":{"id":2837,"nodeType":"Block","src":"10518:80:14","statements":[{"expression":{"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"10536:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2832,"nodeType":"ExpressionStatement","src":"10536:17:14"},{"expression":{"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2833,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"10571:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2836,"nodeType":"ExpressionStatement","src":"10571:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"10615:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2855,"nodeType":"IfStatement","src":"10611:100:14","trueBody":{"id":2854,"nodeType":"Block","src":"10633:78:14","statements":[{"expression":{"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"10651:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2849,"nodeType":"ExpressionStatement","src":"10651:16:14"},{"expression":{"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"10685:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2853,"nodeType":"ExpressionStatement","src":"10685:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"10728:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2872,"nodeType":"IfStatement","src":"10724:100:14","trueBody":{"id":2871,"nodeType":"Block","src":"10746:78:14","statements":[{"expression":{"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"10764:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2866,"nodeType":"ExpressionStatement","src":"10764:16:14"},{"expression":{"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2867,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"10798:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2870,"nodeType":"ExpressionStatement","src":"10798:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"10841:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2889,"nodeType":"IfStatement","src":"10837:100:14","trueBody":{"id":2888,"nodeType":"Block","src":"10859:78:14","statements":[{"expression":{"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"10877:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2883,"nodeType":"ExpressionStatement","src":"10877:16:14"},{"expression":{"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2884,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"10911:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2887,"nodeType":"ExpressionStatement","src":"10911:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"10954:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2900,"nodeType":"IfStatement","src":"10950:66:14","trueBody":{"id":2899,"nodeType":"Block","src":"10972:44:14","statements":[{"expression":{"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2895,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"10990:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2898,"nodeType":"ExpressionStatement","src":"10990:11:14"}]}}]},{"expression":{"id":2902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"11042:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2783,"id":2903,"nodeType":"Return","src":"11035:13:14"}]},"documentation":{"id":2777,"nodeType":"StructuredDocumentation","src":"10020:114:14","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2905,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:14","nodeType":"FunctionDefinition","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"value","nameLocation":"10162:5:14","nodeType":"VariableDeclaration","scope":2905,"src":"10154:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:14"},"returnParameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2905,"src":"10192:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:14"},"scope":3068,"src":"10139:916:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2940,"nodeType":"Block","src":"11290:167:14","statements":[{"id":2939,"nodeType":"UncheckedBlock","src":"11300:151:14","statements":[{"assignments":[2917],"declarations":[{"constant":false,"id":2917,"mutability":"mutable","name":"result","nameLocation":"11332:6:14","nodeType":"VariableDeclaration","scope":2939,"src":"11324:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2921,"initialValue":{"arguments":[{"id":2919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"11347:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2918,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2905,2941],"referencedDeclaration":2905,"src":"11341:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"11374:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2923,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"11384:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2924,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"11396:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2209_$","typeString":"type(enum Math.Rounding)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2207,"src":"11396:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"src":"11384:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2928,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"11417:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"11426:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:14","trueExpression":{"hexValue":"31","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2915,"id":2938,"nodeType":"Return","src":"11367:73:14"}]}]},"documentation":{"id":2906,"nodeType":"StructuredDocumentation","src":"11061:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2941,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:14","nodeType":"FunctionDefinition","parameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"value","nameLocation":"11232:5:14","nodeType":"VariableDeclaration","scope":2941,"src":"11224:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:14","nodeType":"VariableDeclaration","scope":2941,"src":"11239:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"},"typeName":{"id":2910,"nodeType":"UserDefinedTypeName","pathNode":{"id":2909,"name":"Rounding","nameLocations":["11239:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"11239:8:14"},"referencedDeclaration":2209,"src":"11239:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:14"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2941,"src":"11281:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:14"},"scope":3068,"src":"11209:248:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3027,"nodeType":"Block","src":"11771:600:14","statements":[{"assignments":[2950],"declarations":[{"constant":false,"id":2950,"mutability":"mutable","name":"result","nameLocation":"11789:6:14","nodeType":"VariableDeclaration","scope":3027,"src":"11781:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2952,"initialValue":{"hexValue":"30","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:14"},{"id":3024,"nodeType":"UncheckedBlock","src":"11809:533:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"11837:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2967,"nodeType":"IfStatement","src":"11833:98:14","trueBody":{"id":2966,"nodeType":"Block","src":"11855:76:14","statements":[{"expression":{"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"11873:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2961,"nodeType":"ExpressionStatement","src":"11873:13:14"},{"expression":{"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"11904:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2965,"nodeType":"ExpressionStatement","src":"11904:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"11948:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2982,"nodeType":"IfStatement","src":"11944:95:14","trueBody":{"id":2981,"nodeType":"Block","src":"11965:74:14","statements":[{"expression":{"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"11983:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2976,"nodeType":"ExpressionStatement","src":"11983:12:14"},{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2977,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"12013:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"12013:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"12056:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2997,"nodeType":"IfStatement","src":"12052:95:14","trueBody":{"id":2996,"nodeType":"Block","src":"12073:74:14","statements":[{"expression":{"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"12091:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2991,"nodeType":"ExpressionStatement","src":"12091:12:14"},{"expression":{"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"12121:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2995,"nodeType":"ExpressionStatement","src":"12121:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"12164:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3012,"nodeType":"IfStatement","src":"12160:95:14","trueBody":{"id":3011,"nodeType":"Block","src":"12181:74:14","statements":[{"expression":{"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"12199:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3006,"nodeType":"ExpressionStatement","src":"12199:12:14"},{"expression":{"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"12229:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3010,"nodeType":"ExpressionStatement","src":"12229:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"12272:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3023,"nodeType":"IfStatement","src":"12268:64:14","trueBody":{"id":3022,"nodeType":"Block","src":"12288:44:14","statements":[{"expression":{"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"12306:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3021,"nodeType":"ExpressionStatement","src":"12306:11:14"}]}}]},{"expression":{"id":3025,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"12358:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2948,"id":3026,"nodeType":"Return","src":"12351:13:14"}]},"documentation":{"id":2942,"nodeType":"StructuredDocumentation","src":"11463:240:14","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3028,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:14","nodeType":"FunctionDefinition","parameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"value","nameLocation":"11732:5:14","nodeType":"VariableDeclaration","scope":3028,"src":"11724:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:14"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3028,"src":"11762:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:14"},"scope":3068,"src":"11708:663:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3066,"nodeType":"Block","src":"12608:174:14","statements":[{"id":3065,"nodeType":"UncheckedBlock","src":"12618:158:14","statements":[{"assignments":[3040],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"result","nameLocation":"12650:6:14","nodeType":"VariableDeclaration","scope":3065,"src":"12642:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3044,"initialValue":{"arguments":[{"id":3042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"12666:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3041,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3028,3067],"referencedDeclaration":3028,"src":"12659:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3045,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"12693:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"12703:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3047,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"12715:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2209_$","typeString":"type(enum Math.Rounding)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2207,"src":"12715:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"src":"12703:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"12736:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"12751:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:14","trueExpression":{"hexValue":"31","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3038,"id":3064,"nodeType":"Return","src":"12686:79:14"}]}]},"documentation":{"id":3029,"nodeType":"StructuredDocumentation","src":"12377:144:14","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3067,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:14","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"value","nameLocation":"12550:5:14","nodeType":"VariableDeclaration","scope":3067,"src":"12542:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:14","nodeType":"VariableDeclaration","scope":3067,"src":"12557:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"},"typeName":{"id":3033,"nodeType":"UserDefinedTypeName","pathNode":{"id":3032,"name":"Rounding","nameLocations":["12557:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"12557:8:14"},"referencedDeclaration":2209,"src":"12557:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2209","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:14"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3067,"src":"12599:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:14"},"scope":3068,"src":"12526:256:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3069,"src":"202:12582:14","usedErrors":[],"usedEvents":[]}],"src":"103:12682:14"},"id":14},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3173]},"id":3174,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3070,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"134:80:15","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3173,"linearizedBaseContracts":[3173],"name":"SignedMath","nameLocation":"223:10:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3088,"nodeType":"Block","src":"375:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3081,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"392:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3082,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"396:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3085,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"404:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:15","trueExpression":{"id":3084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"400:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3080,"id":3087,"nodeType":"Return","src":"385:20:15"}]},"documentation":{"id":3072,"nodeType":"StructuredDocumentation","src":"240:66:15","text":" @dev Returns the largest of two signed numbers."},"id":3089,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:15","nodeType":"FunctionDefinition","parameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3074,"mutability":"mutable","name":"a","nameLocation":"331:1:15","nodeType":"VariableDeclaration","scope":3089,"src":"324:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3073,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"b","nameLocation":"341:1:15","nodeType":"VariableDeclaration","scope":3089,"src":"334:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3075,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:15"},"returnParameters":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3089,"src":"367:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3078,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:15"},"scope":3173,"src":"311:101:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3106,"nodeType":"Block","src":"554:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3099,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"571:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3100,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"575:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3103,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"583:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:15","trueExpression":{"id":3102,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"579:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3098,"id":3105,"nodeType":"Return","src":"564:20:15"}]},"documentation":{"id":3090,"nodeType":"StructuredDocumentation","src":"418:67:15","text":" @dev Returns the smallest of two signed numbers."},"id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:15","nodeType":"FunctionDefinition","parameters":{"id":3095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"a","nameLocation":"510:1:15","nodeType":"VariableDeclaration","scope":3107,"src":"503:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3091,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"b","nameLocation":"520:1:15","nodeType":"VariableDeclaration","scope":3107,"src":"513:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3093,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:15"},"returnParameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"546:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3096,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:15"},"scope":3173,"src":"490:101:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3150,"nodeType":"Block","src":"796:162:15","statements":[{"assignments":[3118],"declarations":[{"constant":false,"id":3118,"mutability":"mutable","name":"x","nameLocation":"865:1:15","nodeType":"VariableDeclaration","scope":3150,"src":"858:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3117,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3131,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3119,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"870:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3120,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"874:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3123,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"881:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3124,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"885:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3126,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:15"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3132,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"910:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3137,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"930:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:15","typeDescriptions":{}}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3133,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:15","typeDescriptions":{}}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"944:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3143,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"948:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3145,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3116,"id":3149,"nodeType":"Return","src":"903:48:15"}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"597:126:15","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3151,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:15","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"a","nameLocation":"752:1:15","nodeType":"VariableDeclaration","scope":3151,"src":"745:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3109,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"b","nameLocation":"762:1:15","nodeType":"VariableDeclaration","scope":3151,"src":"755:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3111,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:15"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3151,"src":"788:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3114,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:15"},"scope":3173,"src":"728:230:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3171,"nodeType":"Block","src":"1102:158:15","statements":[{"id":3170,"nodeType":"UncheckedBlock","src":"1112:142:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3161,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"1227:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:15","subExpression":{"id":3165,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"1241:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:15","trueExpression":{"id":3164,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"1236:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:15","typeDescriptions":{}}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3158,"id":3169,"nodeType":"Return","src":"1212:31:15"}]}]},"documentation":{"id":3152,"nodeType":"StructuredDocumentation","src":"964:78:15","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3172,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:15","nodeType":"FunctionDefinition","parameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"n","nameLocation":"1067:1:15","nodeType":"VariableDeclaration","scope":3172,"src":"1060:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3153,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:15"},"returnParameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3172,"src":"1093:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:15"},"scope":3173,"src":"1047:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3174,"src":"215:1047:15","usedErrors":[],"usedEvents":[]}],"src":"109:1154:15"},"id":15},"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","exportedSymbols":{"IPyth":[3336],"IPythEvents":[3366],"PythStructs":[3414]},"id":3337,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3175,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:16"},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","file":"./PythStructs.sol","id":3176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3337,"sourceUnit":3415,"src":"64:27:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol","file":"./IPythEvents.sol","id":3177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3337,"sourceUnit":3367,"src":"92:27:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3179,"name":"IPythEvents","nameLocations":["397:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3366,"src":"397:11:16"},"id":3180,"nodeType":"InheritanceSpecifier","src":"397:11:16"}],"canonicalName":"IPyth","contractDependencies":[],"contractKind":"interface","documentation":{"id":3178,"nodeType":"StructuredDocumentation","src":"121:257:16","text":"@title Consume prices from the Pyth Network (https://pyth.network/).\n @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n @author Pyth Data Association"},"fullyImplemented":false,"id":3336,"linearizedBaseContracts":[3336,3366],"name":"IPyth","nameLocation":"388:5:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3181,"nodeType":"StructuredDocumentation","src":"415:669:16","text":"@notice Returns the price of a price feed without any sanity checks.\n @dev This function returns the most recent price update in this contract without any recency checks.\n This function is unsafe as the returned price update may be arbitrarily far in the past.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use `getPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"96834ad3","id":3189,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceUnsafe","nameLocation":"1098:14:16","nodeType":"FunctionDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"id","nameLocation":"1130:2:16","nodeType":"VariableDeclaration","scope":3189,"src":"1122:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1122:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1112:26:16"},"returnParameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"price","nameLocation":"1187:5:16","nodeType":"VariableDeclaration","scope":3189,"src":"1162:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":3186,"nodeType":"UserDefinedTypeName","pathNode":{"id":3185,"name":"PythStructs.Price","nameLocations":["1162:11:16","1174:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"1162:17:16"},"referencedDeclaration":3377,"src":"1162:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"1161:32:16"},"scope":3336,"src":"1089:105:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3190,"nodeType":"StructuredDocumentation","src":"1200:423:16","text":"@notice Returns the price that is no older than `age` seconds of the current time.\n @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"a4ae35e0","id":3200,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceNoOlderThan","nameLocation":"1637:19:16","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"id","nameLocation":"1674:2:16","nodeType":"VariableDeclaration","scope":3200,"src":"1666:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1666:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"age","nameLocation":"1691:3:16","nodeType":"VariableDeclaration","scope":3200,"src":"1686:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint","nodeType":"ElementaryTypeName","src":"1686:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1656:44:16"},"returnParameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"price","nameLocation":"1749:5:16","nodeType":"VariableDeclaration","scope":3200,"src":"1724:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":3197,"nodeType":"UserDefinedTypeName","pathNode":{"id":3196,"name":"PythStructs.Price","nameLocations":["1724:11:16","1736:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"1724:17:16"},"referencedDeclaration":3377,"src":"1724:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"1723:32:16"},"scope":3336,"src":"1628:128:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3201,"nodeType":"StructuredDocumentation","src":"1762:925:16","text":"@notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n However, if the price is not recent this function returns the latest available price.\n The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n the returned price is recent or useful for any particular application.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"9474f45b","id":3209,"implemented":false,"kind":"function","modifiers":[],"name":"getEmaPriceUnsafe","nameLocation":"2701:17:16","nodeType":"FunctionDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"id","nameLocation":"2736:2:16","nodeType":"VariableDeclaration","scope":3209,"src":"2728:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2728:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2718:26:16"},"returnParameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"price","nameLocation":"2793:5:16","nodeType":"VariableDeclaration","scope":3209,"src":"2768:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":3206,"nodeType":"UserDefinedTypeName","pathNode":{"id":3205,"name":"PythStructs.Price","nameLocations":["2768:11:16","2780:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"2768:17:16"},"referencedDeclaration":3377,"src":"2768:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"2767:32:16"},"scope":3336,"src":"2692:108:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"2806:472:16","text":"@notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n of the current time.\n @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"711a2e28","id":3220,"implemented":false,"kind":"function","modifiers":[],"name":"getEmaPriceNoOlderThan","nameLocation":"3292:22:16","nodeType":"FunctionDefinition","parameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"id","nameLocation":"3332:2:16","nodeType":"VariableDeclaration","scope":3220,"src":"3324:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3324:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"age","nameLocation":"3349:3:16","nodeType":"VariableDeclaration","scope":3220,"src":"3344:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint","nodeType":"ElementaryTypeName","src":"3344:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3314:44:16"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"price","nameLocation":"3407:5:16","nodeType":"VariableDeclaration","scope":3220,"src":"3382:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":3217,"nodeType":"UserDefinedTypeName","pathNode":{"id":3216,"name":"PythStructs.Price","nameLocations":["3382:11:16","3394:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"3382:17:16"},"referencedDeclaration":3377,"src":"3382:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"3381:32:16"},"scope":3336,"src":"3283:131:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3221,"nodeType":"StructuredDocumentation","src":"3420:535:16","text":"@notice Update price feeds with given update messages.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n Prices will be updated if they are more recent than the current stored prices.\n The call will succeed even if the update is not the most recent.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data."},"functionSelector":"ef9e5e28","id":3227,"implemented":false,"kind":"function","modifiers":[],"name":"updatePriceFeeds","nameLocation":"3969:16:16","nodeType":"FunctionDefinition","parameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"updateData","nameLocation":"4003:10:16","nodeType":"VariableDeclaration","scope":3227,"src":"3986:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3222,"name":"bytes","nodeType":"ElementaryTypeName","src":"3986:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3223,"nodeType":"ArrayTypeName","src":"3986:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3985:29:16"},"returnParameters":{"id":3226,"nodeType":"ParameterList","parameters":[],"src":"4031:0:16"},"scope":3336,"src":"3960:72:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3228,"nodeType":"StructuredDocumentation","src":"4038:1299:16","text":"@notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n Otherwise, it calls updatePriceFeeds method to update the prices.\n @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`"},"functionSelector":"b9256d28","id":3240,"implemented":false,"kind":"function","modifiers":[],"name":"updatePriceFeedsIfNecessary","nameLocation":"5351:27:16","nodeType":"FunctionDefinition","parameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"updateData","nameLocation":"5405:10:16","nodeType":"VariableDeclaration","scope":3240,"src":"5388:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3229,"name":"bytes","nodeType":"ElementaryTypeName","src":"5388:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3230,"nodeType":"ArrayTypeName","src":"5388:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3234,"mutability":"mutable","name":"priceIds","nameLocation":"5444:8:16","nodeType":"VariableDeclaration","scope":3240,"src":"5425:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5425:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3233,"nodeType":"ArrayTypeName","src":"5425:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3237,"mutability":"mutable","name":"publishTimes","nameLocation":"5480:12:16","nodeType":"VariableDeclaration","scope":3240,"src":"5462:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":3235,"name":"uint64","nodeType":"ElementaryTypeName","src":"5462:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3236,"nodeType":"ArrayTypeName","src":"5462:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"5378:120:16"},"returnParameters":{"id":3239,"nodeType":"ParameterList","parameters":[],"src":"5515:0:16"},"scope":3336,"src":"5342:174:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3241,"nodeType":"StructuredDocumentation","src":"5522:178:16","text":"@notice Returns the required fee to update an array of price updates.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."},"functionSelector":"d47eed45","id":3249,"implemented":false,"kind":"function","modifiers":[],"name":"getUpdateFee","nameLocation":"5714:12:16","nodeType":"FunctionDefinition","parameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"updateData","nameLocation":"5753:10:16","nodeType":"VariableDeclaration","scope":3249,"src":"5736:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3242,"name":"bytes","nodeType":"ElementaryTypeName","src":"5736:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3243,"nodeType":"ArrayTypeName","src":"5736:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5726:43:16"},"returnParameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"feeAmount","nameLocation":"5798:9:16","nodeType":"VariableDeclaration","scope":3249,"src":"5793:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3246,"name":"uint","nodeType":"ElementaryTypeName","src":"5793:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5792:16:16"},"scope":3336,"src":"5705:104:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3250,"nodeType":"StructuredDocumentation","src":"5815:165:16","text":"@notice Returns the required fee to update a TWAP price.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."},"functionSelector":"5f674e35","id":3258,"implemented":false,"kind":"function","modifiers":[],"name":"getTwapUpdateFee","nameLocation":"5994:16:16","nodeType":"FunctionDefinition","parameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"updateData","nameLocation":"6037:10:16","nodeType":"VariableDeclaration","scope":3258,"src":"6020:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3251,"name":"bytes","nodeType":"ElementaryTypeName","src":"6020:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3252,"nodeType":"ArrayTypeName","src":"6020:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6010:43:16"},"returnParameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3256,"mutability":"mutable","name":"feeAmount","nameLocation":"6082:9:16","nodeType":"VariableDeclaration","scope":3258,"src":"6077:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3255,"name":"uint","nodeType":"ElementaryTypeName","src":"6077:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6076:16:16"},"scope":3336,"src":"5985:108:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"6099:1213:16","text":"@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"4716e9c5","id":3276,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdates","nameLocation":"7326:21:16","nodeType":"FunctionDefinition","parameters":{"id":3270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3262,"mutability":"mutable","name":"updateData","nameLocation":"7374:10:16","nodeType":"VariableDeclaration","scope":3276,"src":"7357:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3260,"name":"bytes","nodeType":"ElementaryTypeName","src":"7357:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3261,"nodeType":"ArrayTypeName","src":"7357:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"priceIds","nameLocation":"7413:8:16","nodeType":"VariableDeclaration","scope":3276,"src":"7394:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7394:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3264,"nodeType":"ArrayTypeName","src":"7394:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"minPublishTime","nameLocation":"7438:14:16","nodeType":"VariableDeclaration","scope":3276,"src":"7431:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3266,"name":"uint64","nodeType":"ElementaryTypeName","src":"7431:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3269,"mutability":"mutable","name":"maxPublishTime","nameLocation":"7469:14:16","nodeType":"VariableDeclaration","scope":3276,"src":"7462:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3268,"name":"uint64","nodeType":"ElementaryTypeName","src":"7462:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"7347:142:16"},"returnParameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"priceFeeds","nameLocation":"7547:10:16","nodeType":"VariableDeclaration","scope":3276,"src":"7516:41:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$3386_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":3272,"nodeType":"UserDefinedTypeName","pathNode":{"id":3271,"name":"PythStructs.PriceFeed","nameLocations":["7516:11:16","7528:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":3386,"src":"7516:21:16"},"referencedDeclaration":3386,"src":"7516:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$3386_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":3273,"nodeType":"ArrayTypeName","src":"7516:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$3386_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"}],"src":"7515:43:16"},"scope":3336,"src":"7317:242:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3277,"nodeType":"StructuredDocumentation","src":"7565:1495:16","text":"@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n This method will eventually allow the caller to determine whether parsed price feeds should update\n the stored values as well.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minAllowedPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxAllowedPublishTime maximum acceptable publishTime for the given `priceIds`.\n @param storeUpdatesIfFresh flag for the parse function to\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"3a229d18","id":3303,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdatesWithConfig","nameLocation":"9074:31:16","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"updateData","nameLocation":"9132:10:16","nodeType":"VariableDeclaration","scope":3303,"src":"9115:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3278,"name":"bytes","nodeType":"ElementaryTypeName","src":"9115:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3279,"nodeType":"ArrayTypeName","src":"9115:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3283,"mutability":"mutable","name":"priceIds","nameLocation":"9171:8:16","nodeType":"VariableDeclaration","scope":3303,"src":"9152:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9152:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3282,"nodeType":"ArrayTypeName","src":"9152:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3285,"mutability":"mutable","name":"minAllowedPublishTime","nameLocation":"9196:21:16","nodeType":"VariableDeclaration","scope":3303,"src":"9189:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3284,"name":"uint64","nodeType":"ElementaryTypeName","src":"9189:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"maxAllowedPublishTime","nameLocation":"9234:21:16","nodeType":"VariableDeclaration","scope":3303,"src":"9227:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3286,"name":"uint64","nodeType":"ElementaryTypeName","src":"9227:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"checkUniqueness","nameLocation":"9270:15:16","nodeType":"VariableDeclaration","scope":3303,"src":"9265:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3288,"name":"bool","nodeType":"ElementaryTypeName","src":"9265:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3291,"mutability":"mutable","name":"checkUpdateDataIsMinimal","nameLocation":"9300:24:16","nodeType":"VariableDeclaration","scope":3303,"src":"9295:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3290,"name":"bool","nodeType":"ElementaryTypeName","src":"9295:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"storeUpdatesIfFresh","nameLocation":"9339:19:16","nodeType":"VariableDeclaration","scope":3303,"src":"9334:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3292,"name":"bool","nodeType":"ElementaryTypeName","src":"9334:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9105:259:16"},"returnParameters":{"id":3302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"priceFeeds","nameLocation":"9459:10:16","nodeType":"VariableDeclaration","scope":3303,"src":"9428:41:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$3386_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":3296,"nodeType":"UserDefinedTypeName","pathNode":{"id":3295,"name":"PythStructs.PriceFeed","nameLocations":["9428:11:16","9440:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":3386,"src":"9428:21:16"},"referencedDeclaration":3386,"src":"9428:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$3386_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":3297,"nodeType":"ArrayTypeName","src":"9428:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$3386_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"},{"constant":false,"id":3301,"mutability":"mutable","name":"slots","nameLocation":"9499:5:16","nodeType":"VariableDeclaration","scope":3303,"src":"9483:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":3299,"name":"uint64","nodeType":"ElementaryTypeName","src":"9483:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3300,"nodeType":"ArrayTypeName","src":"9483:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"9414:100:16"},"scope":3336,"src":"9065:450:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3304,"nodeType":"StructuredDocumentation","src":"9521:1194:16","text":"@notice Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`.\n This method calculates TWAP between two data points by processing the difference in cumulative price values\n divided by the time period. It requires exactly two updates that contain valid price information\n for all the requested price IDs.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the updateData array.\n @dev Reverts if:\n - The transferred fee is not sufficient\n - The updateData is invalid or malformed\n - The updateData array does not contain exactly 2 updates\n - There is no update for any of the given `priceIds`\n - The time ordering between data points is invalid (start time must be before end time)\n @param updateData Array containing exactly two price updates (start and end points for TWAP calculation)\n @param priceIds Array of price ids to calculate TWAP for\n @return twapPriceFeeds Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)"},"functionSelector":"eb942158","id":3317,"implemented":false,"kind":"function","modifiers":[],"name":"parseTwapPriceFeedUpdates","nameLocation":"10729:25:16","nodeType":"FunctionDefinition","parameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"updateData","nameLocation":"10781:10:16","nodeType":"VariableDeclaration","scope":3317,"src":"10764:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3305,"name":"bytes","nodeType":"ElementaryTypeName","src":"10764:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3306,"nodeType":"ArrayTypeName","src":"10764:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3310,"mutability":"mutable","name":"priceIds","nameLocation":"10820:8:16","nodeType":"VariableDeclaration","scope":3317,"src":"10801:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10801:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3309,"nodeType":"ArrayTypeName","src":"10801:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10754:80:16"},"returnParameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"twapPriceFeeds","nameLocation":"10920:14:16","nodeType":"VariableDeclaration","scope":3317,"src":"10885:49:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TwapPriceFeed_$3398_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.TwapPriceFeed[]"},"typeName":{"baseType":{"id":3313,"nodeType":"UserDefinedTypeName","pathNode":{"id":3312,"name":"PythStructs.TwapPriceFeed","nameLocations":["10885:11:16","10897:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3398,"src":"10885:25:16"},"referencedDeclaration":3398,"src":"10885:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_TwapPriceFeed_$3398_storage_ptr","typeString":"struct PythStructs.TwapPriceFeed"}},"id":3314,"nodeType":"ArrayTypeName","src":"10885:27:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TwapPriceFeed_$3398_storage_$dyn_storage_ptr","typeString":"struct PythStructs.TwapPriceFeed[]"}},"visibility":"internal"}],"src":"10884:51:16"},"scope":3336,"src":"10720:216:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3318,"nodeType":"StructuredDocumentation","src":"10942:972:16","text":"@notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n this method will return the first update. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range and uniqueness condition.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"accca7f9","id":3335,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdatesUnique","nameLocation":"11928:27:16","nodeType":"FunctionDefinition","parameters":{"id":3329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"updateData","nameLocation":"11982:10:16","nodeType":"VariableDeclaration","scope":3335,"src":"11965:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3319,"name":"bytes","nodeType":"ElementaryTypeName","src":"11965:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3320,"nodeType":"ArrayTypeName","src":"11965:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3324,"mutability":"mutable","name":"priceIds","nameLocation":"12021:8:16","nodeType":"VariableDeclaration","scope":3335,"src":"12002:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12002:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3323,"nodeType":"ArrayTypeName","src":"12002:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"minPublishTime","nameLocation":"12046:14:16","nodeType":"VariableDeclaration","scope":3335,"src":"12039:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3325,"name":"uint64","nodeType":"ElementaryTypeName","src":"12039:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3328,"mutability":"mutable","name":"maxPublishTime","nameLocation":"12077:14:16","nodeType":"VariableDeclaration","scope":3335,"src":"12070:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3327,"name":"uint64","nodeType":"ElementaryTypeName","src":"12070:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11955:142:16"},"returnParameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"priceFeeds","nameLocation":"12155:10:16","nodeType":"VariableDeclaration","scope":3335,"src":"12124:41:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$3386_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":3331,"nodeType":"UserDefinedTypeName","pathNode":{"id":3330,"name":"PythStructs.PriceFeed","nameLocations":["12124:11:16","12136:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":3386,"src":"12124:21:16"},"referencedDeclaration":3386,"src":"12124:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$3386_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":3332,"nodeType":"ArrayTypeName","src":"12124:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$3386_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"}],"src":"12123:43:16"},"scope":3336,"src":"11919:248:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3337,"src":"378:11791:16","usedErrors":[],"usedEvents":[3350,3365]}],"src":"39:12131:16"},"id":16},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol","exportedSymbols":{"IPythEvents":[3366]},"id":3367,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3338,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IPythEvents","contractDependencies":[],"contractKind":"interface","documentation":{"id":3339,"nodeType":"StructuredDocumentation","src":"64:170:17","text":"@title IPythEvents contains the events that Pyth contract emits.\n @dev This interface can be used for listening to the updates for off-chain and testing purposes."},"fullyImplemented":true,"id":3366,"linearizedBaseContracts":[3366],"name":"IPythEvents","nameLocation":"244:11:17","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"262:305:17","text":"@dev Emitted when the price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param publishTime Publish time of the given price update.\n @param price Price of the given price update.\n @param conf Confidence interval of the given price update."},"eventSelector":"d06a6b7f4918494b3719217d1802786c1f5112a6c1d88fe2cfec00b4584f6aec","id":3350,"name":"PriceFeedUpdate","nameLocation":"578:15:17","nodeType":"EventDefinition","parameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"619:2:17","nodeType":"VariableDeclaration","scope":3350,"src":"603:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"603:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3344,"indexed":false,"mutability":"mutable","name":"publishTime","nameLocation":"638:11:17","nodeType":"VariableDeclaration","scope":3350,"src":"631:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3343,"name":"uint64","nodeType":"ElementaryTypeName","src":"631:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3346,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"665:5:17","nodeType":"VariableDeclaration","scope":3350,"src":"659:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3345,"name":"int64","nodeType":"ElementaryTypeName","src":"659:5:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3348,"indexed":false,"mutability":"mutable","name":"conf","nameLocation":"687:4:17","nodeType":"VariableDeclaration","scope":3350,"src":"680:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3347,"name":"uint64","nodeType":"ElementaryTypeName","src":"680:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"593:104:17"},"src":"572:126:17"},{"anonymous":false,"documentation":{"id":3351,"nodeType":"StructuredDocumentation","src":"704:376:17","text":"@dev Emitted when the TWAP price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param startTime Start time of the TWAP.\n @param endTime End time of the TWAP.\n @param twapPrice Price of the TWAP.\n @param twapConf Confidence interval of the TWAP.\n @param downSlotsRatio Down slot ratio of the TWAP."},"eventSelector":"d8b7774079faf4ab389d4e48b46d54e2bb8b66dd0de0d718f61730a9f3c92977","id":3365,"name":"TwapPriceFeedUpdate","nameLocation":"1091:19:17","nodeType":"EventDefinition","parameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3353,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1136:2:17","nodeType":"VariableDeclaration","scope":3365,"src":"1120:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1120:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3355,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"1155:9:17","nodeType":"VariableDeclaration","scope":3365,"src":"1148:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3354,"name":"uint64","nodeType":"ElementaryTypeName","src":"1148:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3357,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"1181:7:17","nodeType":"VariableDeclaration","scope":3365,"src":"1174:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3356,"name":"uint64","nodeType":"ElementaryTypeName","src":"1174:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3359,"indexed":false,"mutability":"mutable","name":"twapPrice","nameLocation":"1204:9:17","nodeType":"VariableDeclaration","scope":3365,"src":"1198:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3358,"name":"int64","nodeType":"ElementaryTypeName","src":"1198:5:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3361,"indexed":false,"mutability":"mutable","name":"twapConf","nameLocation":"1230:8:17","nodeType":"VariableDeclaration","scope":3365,"src":"1223:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3360,"name":"uint64","nodeType":"ElementaryTypeName","src":"1223:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3363,"indexed":false,"mutability":"mutable","name":"downSlotsRatio","nameLocation":"1255:14:17","nodeType":"VariableDeclaration","scope":3365,"src":"1248:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3362,"name":"uint32","nodeType":"ElementaryTypeName","src":"1248:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1110:165:17"},"src":"1085:191:17"}],"scope":3367,"src":"234:1044:17","usedErrors":[],"usedEvents":[3350,3365]}],"src":"39:1240:17"},"id":17},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","exportedSymbols":{"PythStructs":[3414]},"id":3415,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3368,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"PythStructs","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3414,"linearizedBaseContracts":[3414],"name":"PythStructs","nameLocation":"73:11:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PythStructs.Price","id":3377,"members":[{"constant":false,"id":3370,"mutability":"mutable","name":"price","nameLocation":"647:5:18","nodeType":"VariableDeclaration","scope":3377,"src":"641:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3369,"name":"int64","nodeType":"ElementaryTypeName","src":"641:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"conf","nameLocation":"717:4:18","nodeType":"VariableDeclaration","scope":3377,"src":"710:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3371,"name":"uint64","nodeType":"ElementaryTypeName","src":"710:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3374,"mutability":"mutable","name":"expo","nameLocation":"763:4:18","nodeType":"VariableDeclaration","scope":3377,"src":"757:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":3373,"name":"int32","nodeType":"ElementaryTypeName","src":"757:5:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":3376,"mutability":"mutable","name":"publishTime","nameLocation":"848:11:18","nodeType":"VariableDeclaration","scope":3377,"src":"843:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint","nodeType":"ElementaryTypeName","src":"843:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Price","nameLocation":"608:5:18","nodeType":"StructDefinition","scope":3414,"src":"601:265:18","visibility":"public"},{"canonicalName":"PythStructs.PriceFeed","id":3386,"members":[{"constant":false,"id":3379,"mutability":"mutable","name":"id","nameLocation":"1013:2:18","nodeType":"VariableDeclaration","scope":3386,"src":"1005:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1005:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"price","nameLocation":"1065:5:18","nodeType":"VariableDeclaration","scope":3386,"src":"1059:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":3381,"nodeType":"UserDefinedTypeName","pathNode":{"id":3380,"name":"Price","nameLocations":["1059:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"1059:5:18"},"referencedDeclaration":3377,"src":"1059:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"},{"constant":false,"id":3385,"mutability":"mutable","name":"emaPrice","nameLocation":"1158:8:18","nodeType":"VariableDeclaration","scope":3386,"src":"1152:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":3384,"nodeType":"UserDefinedTypeName","pathNode":{"id":3383,"name":"Price","nameLocations":["1152:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"1152:5:18"},"referencedDeclaration":3377,"src":"1152:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"name":"PriceFeed","nameLocation":"960:9:18","nodeType":"StructDefinition","scope":3414,"src":"953:220:18","visibility":"public"},{"canonicalName":"PythStructs.TwapPriceFeed","id":3398,"members":[{"constant":false,"id":3388,"mutability":"mutable","name":"id","nameLocation":"1243:2:18","nodeType":"VariableDeclaration","scope":3398,"src":"1235:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1235:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3390,"mutability":"mutable","name":"startTime","nameLocation":"1296:9:18","nodeType":"VariableDeclaration","scope":3398,"src":"1289:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3389,"name":"uint64","nodeType":"ElementaryTypeName","src":"1289:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3392,"mutability":"mutable","name":"endTime","nameLocation":"1354:7:18","nodeType":"VariableDeclaration","scope":3398,"src":"1347:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3391,"name":"uint64","nodeType":"ElementaryTypeName","src":"1347:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3395,"mutability":"mutable","name":"twap","nameLocation":"1399:4:18","nodeType":"VariableDeclaration","scope":3398,"src":"1393:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":3394,"nodeType":"UserDefinedTypeName","pathNode":{"id":3393,"name":"Price","nameLocations":["1393:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"1393:5:18"},"referencedDeclaration":3377,"src":"1393:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"},{"constant":false,"id":3397,"mutability":"mutable","name":"downSlotsRatio","nameLocation":"2034:14:18","nodeType":"VariableDeclaration","scope":3398,"src":"2027:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3396,"name":"uint32","nodeType":"ElementaryTypeName","src":"2027:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"TwapPriceFeed","nameLocation":"1186:13:18","nodeType":"StructDefinition","scope":3414,"src":"1179:876:18","visibility":"public"},{"canonicalName":"PythStructs.TwapPriceInfo","id":3413,"members":[{"constant":false,"id":3400,"mutability":"mutable","name":"cumulativePrice","nameLocation":"2190:15:18","nodeType":"VariableDeclaration","scope":3413,"src":"2183:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3399,"name":"int128","nodeType":"ElementaryTypeName","src":"2183:6:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":3402,"mutability":"mutable","name":"cumulativeConf","nameLocation":"2223:14:18","nodeType":"VariableDeclaration","scope":3413,"src":"2215:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3401,"name":"uint128","nodeType":"ElementaryTypeName","src":"2215:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"numDownSlots","nameLocation":"2272:12:18","nodeType":"VariableDeclaration","scope":3413,"src":"2265:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3403,"name":"uint64","nodeType":"ElementaryTypeName","src":"2265:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3406,"mutability":"mutable","name":"publishSlot","nameLocation":"2301:11:18","nodeType":"VariableDeclaration","scope":3413,"src":"2294:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3405,"name":"uint64","nodeType":"ElementaryTypeName","src":"2294:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3408,"mutability":"mutable","name":"publishTime","nameLocation":"2329:11:18","nodeType":"VariableDeclaration","scope":3413,"src":"2322:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3407,"name":"uint64","nodeType":"ElementaryTypeName","src":"2322:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"prevPublishTime","nameLocation":"2357:15:18","nodeType":"VariableDeclaration","scope":3413,"src":"2350:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3409,"name":"uint64","nodeType":"ElementaryTypeName","src":"2350:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3412,"mutability":"mutable","name":"expo","nameLocation":"2406:4:18","nodeType":"VariableDeclaration","scope":3413,"src":"2400:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":3411,"name":"int32","nodeType":"ElementaryTypeName","src":"2400:5:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"name":"TwapPriceInfo","nameLocation":"2141:13:18","nodeType":"StructDefinition","scope":3414,"src":"2134:283:18","visibility":"public"}],"scope":3415,"src":"64:2355:18","usedErrors":[],"usedEvents":[]}],"src":"39:2381:18"},"id":18},"contracts/gasRouter.sol":{"ast":{"absolutePath":"contracts/gasRouter.sol","exportedSymbols":{"Address":[1047],"Context":[1077],"ECDSA":[1998],"EIP712":[2202],"GasStation":[4191],"IERC20":[280],"IERC20Metadata":[305],"IERC20Permit":[341],"IERC5267":[137],"IPyth":[3336],"IPythEvents":[3366],"Math":[3068],"Ownable":[112],"PythStructs":[3414],"ReentrancyGuard":[202],"SafeERC20":[717],"ShortString":[1082],"ShortStrings":[1293],"SignedMath":[3173],"StorageSlot":[1403],"Strings":[1632]},"id":4192,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3416,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:19"},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","file":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","id":3417,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4192,"sourceUnit":3337,"src":"58:50:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","file":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","id":3418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4192,"sourceUnit":3415,"src":"109:56:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3419,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4192,"sourceUnit":281,"src":"166:56:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":3420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4192,"sourceUnit":306,"src":"223:75:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":3421,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4192,"sourceUnit":718,"src":"299:65:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3422,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4192,"sourceUnit":113,"src":"365:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":3423,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4192,"sourceUnit":203,"src":"418:62:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":3424,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4192,"sourceUnit":1999,"src":"481:62:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":3425,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4192,"sourceUnit":2203,"src":"544:63:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3427,"name":"Ownable","nameLocations":["693:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"693:7:19"},"id":3428,"nodeType":"InheritanceSpecifier","src":"693:7:19"},{"baseName":{"id":3429,"name":"ReentrancyGuard","nameLocations":["702:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"702:15:19"},"id":3430,"nodeType":"InheritanceSpecifier","src":"702:15:19"},{"baseName":{"id":3431,"name":"EIP712","nameLocations":["719:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":2202,"src":"719:6:19"},"id":3432,"nodeType":"InheritanceSpecifier","src":"719:6:19"}],"canonicalName":"GasStation","contractDependencies":[],"contractKind":"contract","documentation":{"id":3426,"nodeType":"StructuredDocumentation","src":"609:61:19","text":"@title GasStation - Gasless swaps with meta-transactions"},"fullyImplemented":true,"id":4191,"linearizedBaseContracts":[4191,2202,137,202,112,1077],"name":"GasStation","nameLocation":"679:10:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3436,"libraryName":{"id":3433,"name":"SafeERC20","nameLocations":["738:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":717,"src":"738:9:19"},"nodeType":"UsingForDirective","src":"732:27:19","typeName":{"id":3435,"nodeType":"UserDefinedTypeName","pathNode":{"id":3434,"name":"IERC20","nameLocations":["752:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":280,"src":"752:6:19"},"referencedDeclaration":280,"src":"752:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}}},{"global":false,"id":3439,"libraryName":{"id":3437,"name":"ECDSA","nameLocations":["770:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":1998,"src":"770:5:19"},"nodeType":"UsingForDirective","src":"764:24:19","typeName":{"id":3438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"780:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":false,"functionSelector":"f98d06f0","id":3442,"mutability":"immutable","name":"pyth","nameLocation":"817:4:19","nodeType":"VariableDeclaration","scope":4191,"src":"794:27:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$3336","typeString":"contract IPyth"},"typeName":{"id":3441,"nodeType":"UserDefinedTypeName","pathNode":{"id":3440,"name":"IPyth","nameLocations":["794:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":3336,"src":"794:5:19"},"referencedDeclaration":3336,"src":"794:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$3336","typeString":"contract IPyth"}},"visibility":"public"},{"constant":false,"functionSelector":"e83d086f","id":3444,"mutability":"immutable","name":"cfxUsdFeedId","nameLocation":"852:12:19","nodeType":"VariableDeclaration","scope":4191,"src":"827:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"827:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"GasStation.TokenInfo","id":3451,"members":[{"constant":false,"id":3446,"mutability":"mutable","name":"tokenAddress","nameLocation":"906:12:19","nodeType":"VariableDeclaration","scope":3451,"src":"898:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3445,"name":"address","nodeType":"ElementaryTypeName","src":"898:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3448,"mutability":"mutable","name":"ticker","nameLocation":"935:6:19","nodeType":"VariableDeclaration","scope":3451,"src":"928:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3447,"name":"string","nodeType":"ElementaryTypeName","src":"928:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"feedId","nameLocation":"959:6:19","nodeType":"VariableDeclaration","scope":3451,"src":"951:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"951:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"TokenInfo","nameLocation":"878:9:19","nodeType":"StructDefinition","scope":4191,"src":"871:101:19","visibility":"public"},{"constant":false,"functionSelector":"c6255626","id":3455,"mutability":"mutable","name":"supportedTokens","nameLocation":"997:15:19","nodeType":"VariableDeclaration","scope":4191,"src":"978:34:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$3451_storage_$dyn_storage","typeString":"struct GasStation.TokenInfo[]"},"typeName":{"baseType":{"id":3453,"nodeType":"UserDefinedTypeName","pathNode":{"id":3452,"name":"TokenInfo","nameLocations":["978:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3451,"src":"978:9:19"},"referencedDeclaration":3451,"src":"978:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3451_storage_ptr","typeString":"struct GasStation.TokenInfo"}},"id":3454,"nodeType":"ArrayTypeName","src":"978:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$3451_storage_$dyn_storage_ptr","typeString":"struct GasStation.TokenInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"91f12218","id":3459,"mutability":"mutable","name":"tokenFeedIds","nameLocation":"1053:12:19","nodeType":"VariableDeclaration","scope":4191,"src":"1018:47:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"typeName":{"id":3458,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3456,"name":"address","nodeType":"ElementaryTypeName","src":"1026:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1018:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1037:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"constant":false,"functionSelector":"c9325d6c","id":3463,"mutability":"mutable","name":"tokenTickers","nameLocation":"1105:12:19","nodeType":"VariableDeclaration","scope":4191,"src":"1071:46:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string)"},"typeName":{"id":3462,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3460,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1071:26:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3461,"name":"string","nodeType":"ElementaryTypeName","src":"1090:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"7ecebe00","id":3467,"mutability":"mutable","name":"nonces","nameLocation":"1158:6:19","nodeType":"VariableDeclaration","scope":4191,"src":"1123:41:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3466,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3464,"name":"address","nodeType":"ElementaryTypeName","src":"1131:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1123:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1142:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":true,"functionSelector":"31e2a65c","id":3474,"mutability":"constant","name":"MAX_CFX_PER_SWAP","nameLocation":"1195:16:19","nodeType":"VariableDeclaration","scope":4191,"src":"1171:54:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1171:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"},"id":3473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":3472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1219:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":3471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1223:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1219:6:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1214:11:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"ef1774a2","id":3477,"mutability":"mutable","name":"relayerFeePercent","nameLocation":"1256:17:19","nodeType":"VariableDeclaration","scope":4191,"src":"1241:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"1241:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1276:2:19","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"visibility":"public"},{"constant":true,"id":3482,"mutability":"constant","name":"SWAP_TYPEHASH","nameLocation":"1333:13:19","nodeType":"VariableDeclaration","scope":4191,"src":"1308:160:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1308:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5377617052657175657374286164647265737320757365722c6164647265737320746f6b656e416464726573732c75696e7432353620616d6f756e742c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1368:94:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_07f6f794c7fcb551753890b40c47e50ca6b3742713f342e7827073a27f687f46","typeString":"literal_string \"SwapRequest(address user,address tokenAddress,uint256 amount,uint256 nonce,uint256 deadline)\""},"value":"SwapRequest(address user,address tokenAddress,uint256 amount,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_07f6f794c7fcb551753890b40c47e50ca6b3742713f342e7827073a27f687f46","typeString":"literal_string \"SwapRequest(address user,address tokenAddress,uint256 amount,uint256 nonce,uint256 deadline)\""}],"id":3479,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1349:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:119:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"anonymous":false,"eventSelector":"7ee5b861ad236224c1fb776c839c3959f7a0903d4e4dcde63306821c6ff60aa2","id":3490,"name":"TokenAdded","nameLocation":"1481:10:19","nodeType":"EventDefinition","parameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"indexed":true,"mutability":"mutable","name":"tokenAddress","nameLocation":"1508:12:19","nodeType":"VariableDeclaration","scope":3490,"src":"1492:28:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3483,"name":"address","nodeType":"ElementaryTypeName","src":"1492:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3486,"indexed":false,"mutability":"mutable","name":"ticker","nameLocation":"1529:6:19","nodeType":"VariableDeclaration","scope":3490,"src":"1522:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3485,"name":"string","nodeType":"ElementaryTypeName","src":"1522:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3488,"indexed":false,"mutability":"mutable","name":"feedId","nameLocation":"1545:6:19","nodeType":"VariableDeclaration","scope":3490,"src":"1537:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1537:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1491:61:19"},"src":"1475:78:19"},{"anonymous":false,"eventSelector":"6efced4ed44fb06eaed2ffec26c5392c1b03a2ba58ca72e7af5b738826cd4cec","id":3504,"name":"MetaSwapped","nameLocation":"1564:11:19","nodeType":"EventDefinition","parameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1601:4:19","nodeType":"VariableDeclaration","scope":3504,"src":"1585:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3491,"name":"address","nodeType":"ElementaryTypeName","src":"1585:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3494,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"1631:7:19","nodeType":"VariableDeclaration","scope":3504,"src":"1615:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3493,"name":"address","nodeType":"ElementaryTypeName","src":"1615:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3496,"indexed":true,"mutability":"mutable","name":"tokenAddress","nameLocation":"1664:12:19","nodeType":"VariableDeclaration","scope":3504,"src":"1648:28:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3495,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3498,"indexed":false,"mutability":"mutable","name":"tokenAmount","nameLocation":"1694:11:19","nodeType":"VariableDeclaration","scope":3504,"src":"1686:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3500,"indexed":false,"mutability":"mutable","name":"cfxAmount","nameLocation":"1723:9:19","nodeType":"VariableDeclaration","scope":3504,"src":"1715:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3502,"indexed":false,"mutability":"mutable","name":"relayerFee","nameLocation":"1750:10:19","nodeType":"VariableDeclaration","scope":3504,"src":"1742:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1742:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1575:191:19"},"src":"1558:209:19"},{"anonymous":false,"eventSelector":"33e1d5145944d624b86865712fc54c442cdfdeebf537007cb7809bccb0126da5","id":3508,"name":"RelayerFeeUpdated","nameLocation":"1778:17:19","nodeType":"EventDefinition","parameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"indexed":false,"mutability":"mutable","name":"newFeePercent","nameLocation":"1804:13:19","nodeType":"VariableDeclaration","scope":3508,"src":"1796:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1796:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1795:23:19"},"src":"1772:47:19"},{"body":{"id":3549,"nodeType":"Block","src":"1901:198:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3520,"name":"_pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"1919:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1936:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1928:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3521,"name":"address","nodeType":"ElementaryTypeName","src":"1928:7:19","typeDescriptions":{}}},"id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1919:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"707974682061646472657373207a65726f","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1940:19:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a286e1fd9ee244ccbc2f0efcfa9359bc7b9082edba95da886fffbcb375d38ab","typeString":"literal_string \"pyth address zero\""},"value":"pyth address zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9a286e1fd9ee244ccbc2f0efcfa9359bc7b9082edba95da886fffbcb375d38ab","typeString":"literal_string \"pyth address zero\""}],"id":3519,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1911:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1911:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"ExpressionStatement","src":"1911:49:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3530,"name":"_cfxUsdFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"1978:13:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2003:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1995:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1995:7:19","typeDescriptions":{}}},"id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1995:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1978:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642066656564206964","id":3536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2007:17:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b556b18ddeba12dde480f76dcb8c2e3ff1e75b77aaa928b2e404669102833adc","typeString":"literal_string \"invalid feed id\""},"value":"invalid feed id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b556b18ddeba12dde480f76dcb8c2e3ff1e75b77aaa928b2e404669102833adc","typeString":"literal_string \"invalid feed id\""}],"id":3529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1970:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1970:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3538,"nodeType":"ExpressionStatement","src":"1970:55:19"},{"expression":{"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3539,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"2035:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$3336","typeString":"contract IPyth"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3541,"name":"_pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"2048:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3540,"name":"IPyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"2042:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPyth_$3336_$","typeString":"type(contract IPyth)"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2042:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$3336","typeString":"contract IPyth"}},"src":"2035:19:19","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$3336","typeString":"contract IPyth"}},"id":3544,"nodeType":"ExpressionStatement","src":"2035:19:19"},{"expression":{"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3545,"name":"cfxUsdFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"2064:12:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3546,"name":"_cfxUsdFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"2079:13:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2064:28:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3548,"nodeType":"ExpressionStatement","src":"2064:28:19"}]},"id":3550,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"47617353746174696f6e","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1882:12:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea72e269131c1eb081da765e2d0eb638a5114580ee7bb8b317b38170d5aef036","typeString":"literal_string \"GasStation\""},"value":"GasStation"},{"hexValue":"31","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1896:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":3517,"kind":"baseConstructorSpecifier","modifierName":{"id":3514,"name":"EIP712","nameLocations":["1875:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":2202,"src":"1875:6:19"},"nodeType":"ModifierInvocation","src":"1875:25:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"_pyth","nameLocation":"1845:5:19","nodeType":"VariableDeclaration","scope":3550,"src":"1837:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3509,"name":"address","nodeType":"ElementaryTypeName","src":"1837:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3512,"mutability":"mutable","name":"_cfxUsdFeedId","nameLocation":"1860:13:19","nodeType":"VariableDeclaration","scope":3550,"src":"1852:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1836:38:19"},"returnParameters":{"id":3518,"nodeType":"ParameterList","parameters":[],"src":"1901:0:19"},"scope":4191,"src":"1825:274:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3621,"nodeType":"Block","src":"2236:513:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3562,"name":"feedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"2254:6:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2272:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2264:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2264:7:19","typeDescriptions":{}}},"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2264:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2254:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642066656564204944","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2276:17:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_500eab5f73534796c2c4431754ac0f73b45f7e8785d25b7ecda395a48a7c1553","typeString":"literal_string \"Invalid feed ID\""},"value":"Invalid feed ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_500eab5f73534796c2c4431754ac0f73b45f7e8785d25b7ecda395a48a7c1553","typeString":"literal_string \"Invalid feed ID\""}],"id":3561,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2246:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3570,"nodeType":"ExpressionStatement","src":"2246:48:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3572,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"2312:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2336:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2328:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3573,"name":"address","nodeType":"ElementaryTypeName","src":"2328:7:19","typeDescriptions":{}}},"id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2328:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2312:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e2061646472657373","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2340:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""},"value":"Invalid token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""}],"id":3571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2304:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2304:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3580,"nodeType":"ExpressionStatement","src":"2304:60:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3582,"name":"tokenFeedIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"2382:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":3584,"indexExpression":{"id":3583,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"2395:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2382:26:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2420:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2412:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:19","typeDescriptions":{}}},"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2412:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2382:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616c7265616479206164646564","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2424:21:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309","typeString":"literal_string \"Token already added\""},"value":"Token already added"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309","typeString":"literal_string \"Token already added\""}],"id":3581,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2374:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2374:72:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3592,"nodeType":"ExpressionStatement","src":"2374:72:19"},{"expression":{"arguments":[{"arguments":[{"id":3597,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"2516:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3598,"name":"ticker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"2550:6:19","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":3599,"name":"feedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"2578:6:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3596,"name":"TokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"2478:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TokenInfo_$3451_storage_ptr_$","typeString":"type(struct GasStation.TokenInfo storage pointer)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2502:12:19","2542:6:19","2570:6:19"],"names":["tokenAddress","ticker","feedId"],"nodeType":"FunctionCall","src":"2478:117:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3451_memory_ptr","typeString":"struct GasStation.TokenInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenInfo_$3451_memory_ptr","typeString":"struct GasStation.TokenInfo memory"}],"expression":{"id":3593,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"2457:15:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$3451_storage_$dyn_storage","typeString":"struct GasStation.TokenInfo storage ref[] storage ref"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2473:4:19","memberName":"push","nodeType":"MemberAccess","src":"2457:20:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TokenInfo_$3451_storage_$dyn_storage_ptr_$_t_struct$_TokenInfo_$3451_storage_$returns$__$attached_to$_t_array$_t_struct$_TokenInfo_$3451_storage_$dyn_storage_ptr_$","typeString":"function (struct GasStation.TokenInfo storage ref[] storage pointer,struct GasStation.TokenInfo storage ref)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2457:139:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3602,"nodeType":"ExpressionStatement","src":"2457:139:19"},{"expression":{"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3603,"name":"tokenFeedIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"2607:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":3605,"indexExpression":{"id":3604,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"2620:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2607:26:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3606,"name":"feedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"2636:6:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2607:35:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3608,"nodeType":"ExpressionStatement","src":"2607:35:19"},{"expression":{"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3609,"name":"tokenTickers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"2652:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":3611,"indexExpression":{"id":3610,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"2665:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2652:26:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3612,"name":"ticker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"2681:6:19","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"2652:35:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3614,"nodeType":"ExpressionStatement","src":"2652:35:19"},{"eventCall":{"arguments":[{"id":3616,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"2713:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3617,"name":"ticker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"2727:6:19","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":3618,"name":"feedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"2735:6:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3615,"name":"TokenAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"2702:10:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_bytes32_$returns$__$","typeString":"function (address,string memory,bytes32)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3620,"nodeType":"EmitStatement","src":"2697:45:19"}]},"functionSelector":"78af1d55","id":3622,"implemented":true,"kind":"function","modifiers":[{"id":3559,"kind":"modifierInvocation","modifierName":{"id":3558,"name":"onlyOwner","nameLocations":["2226:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2226:9:19"},"nodeType":"ModifierInvocation","src":"2226:9:19"}],"name":"addToken","nameLocation":"2146:8:19","nodeType":"FunctionDefinition","parameters":{"id":3557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"tokenAddress","nameLocation":"2163:12:19","nodeType":"VariableDeclaration","scope":3622,"src":"2155:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3551,"name":"address","nodeType":"ElementaryTypeName","src":"2155:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3554,"mutability":"mutable","name":"ticker","nameLocation":"2193:6:19","nodeType":"VariableDeclaration","scope":3622,"src":"2177:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3553,"name":"string","nodeType":"ElementaryTypeName","src":"2177:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3556,"mutability":"mutable","name":"feedId","nameLocation":"2209:6:19","nodeType":"VariableDeclaration","scope":3622,"src":"2201:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2201:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2154:62:19"},"returnParameters":{"id":3560,"nodeType":"ParameterList","parameters":[],"src":"2236:0:19"},"scope":4191,"src":"2137:612:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3811,"nodeType":"Block","src":"3030:1556:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3643,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3048:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3054:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"3048:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3645,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"3067:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3048:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e61747572652065787069726564","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3077:19:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""},"value":"Signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""}],"id":3642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3040:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3040:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3649,"nodeType":"ExpressionStatement","src":"3040:57:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3651,"name":"tokenFeedIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"3115:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":3653,"indexExpression":{"id":3652,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"3128:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3115:26:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3153:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3145:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3145:7:19","typeDescriptions":{}}},"id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3145:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3115:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f742077686974656c6973746564","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3157:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a8a590ce223befaf7d80c46dd8a79ab1acc914febe31544396be9a38974f0312","typeString":"literal_string \"Token not whitelisted\""},"value":"Token not whitelisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a8a590ce223befaf7d80c46dd8a79ab1acc914febe31544396be9a38974f0312","typeString":"literal_string \"Token not whitelisted\""}],"id":3650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3107:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3107:74:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3661,"nodeType":"ExpressionStatement","src":"3107:74:19"},{"expression":{"arguments":[{"id":3663,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"3246:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3664,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"3252:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3665,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"3266:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3666,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"3274:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3667,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"3284:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3662,"name":"_verifySwapSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"3225:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes calldata) view"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3225:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3669,"nodeType":"ExpressionStatement","src":"3225:69:19"},{"expression":{"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3304:14:19","subExpression":{"baseExpression":{"id":3670,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"3304:6:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3672,"indexExpression":{"id":3671,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"3311:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3304:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3674,"nodeType":"ExpressionStatement","src":"3304:14:19"},{"assignments":[3676],"declarations":[{"constant":false,"id":3676,"mutability":"mutable","name":"fee","nameLocation":"3367:3:19","nodeType":"VariableDeclaration","scope":3811,"src":"3359:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"3359:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3681,"initialValue":{"arguments":[{"id":3679,"name":"updateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"3391:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":3677,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"3373:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$3336","typeString":"contract IPyth"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3378:12:19","memberName":"getUpdateFee","nodeType":"MemberAccess","referencedDeclaration":3249,"src":"3373:17:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory[] memory) view external returns (uint256)"}},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3373:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3359:43:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3683,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3420:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3424:5:19","memberName":"value","nodeType":"MemberAccess","src":"3420:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3685,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"3433:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3420:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420507974682075706461746520666565","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3438:30:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_247f61d1502c4c13f2793ae448acb6b00fec22e45f7d0a648ec930c64442771a","typeString":"literal_string \"Insufficient Pyth update fee\""},"value":"Insufficient Pyth update fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_247f61d1502c4c13f2793ae448acb6b00fec22e45f7d0a648ec930c64442771a","typeString":"literal_string \"Insufficient Pyth update fee\""}],"id":3682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3412:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3412:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3689,"nodeType":"ExpressionStatement","src":"3412:57:19"},{"expression":{"arguments":[{"id":3695,"name":"updateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"3513:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":3690,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"3479:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$3336","typeString":"contract IPyth"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3484:16:19","memberName":"updatePriceFeeds","nodeType":"MemberAccess","referencedDeclaration":3227,"src":"3479:21:19","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes memory[] memory) payable external"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3693,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"3508:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3479:33:19","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$value","typeString":"function (bytes memory[] memory) payable external"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3479:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3697,"nodeType":"ExpressionStatement","src":"3479:45:19"},{"assignments":[3702],"declarations":[{"constant":false,"id":3702,"mutability":"mutable","name":"tokenPrice","nameLocation":"3582:10:19","nodeType":"VariableDeclaration","scope":3811,"src":"3557:35:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":3701,"nodeType":"UserDefinedTypeName","pathNode":{"id":3700,"name":"PythStructs.Price","nameLocations":["3557:11:19","3569:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"3557:17:19"},"referencedDeclaration":3377,"src":"3557:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"id":3710,"initialValue":{"arguments":[{"baseExpression":{"id":3705,"name":"tokenFeedIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"3620:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":3707,"indexExpression":{"id":3706,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"3633:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3620:26:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3708,"name":"maxAge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"3648:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3703,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"3595:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$3336","typeString":"contract IPyth"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3600:19:19","memberName":"getPriceNoOlderThan","nodeType":"MemberAccess","referencedDeclaration":3200,"src":"3595:24:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_struct$_Price_$3377_memory_ptr_$","typeString":"function (bytes32,uint256) view external returns (struct PythStructs.Price memory)"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3595:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}},"nodeType":"VariableDeclarationStatement","src":"3557:98:19"},{"assignments":[3715],"declarations":[{"constant":false,"id":3715,"mutability":"mutable","name":"cfxPrice","nameLocation":"3690:8:19","nodeType":"VariableDeclaration","scope":3811,"src":"3665:33:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":3714,"nodeType":"UserDefinedTypeName","pathNode":{"id":3713,"name":"PythStructs.Price","nameLocations":["3665:11:19","3677:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"3665:17:19"},"referencedDeclaration":3377,"src":"3665:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"id":3721,"initialValue":{"arguments":[{"id":3718,"name":"cfxUsdFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"3726:12:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3719,"name":"maxAge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"3740:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3716,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"3701:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$3336","typeString":"contract IPyth"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3706:19:19","memberName":"getPriceNoOlderThan","nodeType":"MemberAccess","referencedDeclaration":3200,"src":"3701:24:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_struct$_Price_$3377_memory_ptr_$","typeString":"function (bytes32,uint256) view external returns (struct PythStructs.Price memory)"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}},"nodeType":"VariableDeclarationStatement","src":"3665:82:19"},{"assignments":[3723],"declarations":[{"constant":false,"id":3723,"mutability":"mutable","name":"cfxAmount","nameLocation":"3798:9:19","nodeType":"VariableDeclaration","scope":3811,"src":"3790:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"3790:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3730,"initialValue":{"arguments":[{"id":3725,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"3830:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3726,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"3844:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3727,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"3852:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}},{"id":3728,"name":"cfxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"3864:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"},{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}],"id":3724,"name":"_calculateCfxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"3810:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_struct$_Price_$3377_memory_ptr_$_t_struct$_Price_$3377_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,struct PythStructs.Price memory,struct PythStructs.Price memory) view returns (uint256)"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3810:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3790:83:19"},{"assignments":[3732],"declarations":[{"constant":false,"id":3732,"mutability":"mutable","name":"relayerFee","nameLocation":"3891:10:19","nodeType":"VariableDeclaration","scope":3811,"src":"3883:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"3883:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3739,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"cfxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"3905:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3734,"name":"relayerFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"3917:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3905:29:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3904:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3938:5:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3904:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3883:60:19"},{"assignments":[3741],"declarations":[{"constant":false,"id":3741,"mutability":"mutable","name":"userCfxAmount","nameLocation":"3961:13:19","nodeType":"VariableDeclaration","scope":3811,"src":"3953:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3740,"name":"uint256","nodeType":"ElementaryTypeName","src":"3953:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3745,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3742,"name":"cfxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"3977:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3743,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"3989:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3977:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3953:46:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3749,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4026:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_GasStation_$4191","typeString":"contract GasStation"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GasStation_$4191","typeString":"contract GasStation"}],"id":3748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4018:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3747,"name":"address","nodeType":"ElementaryTypeName","src":"4018:7:19","typeDescriptions":{}}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4018:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4032:7:19","memberName":"balance","nodeType":"MemberAccess","src":"4018:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3752,"name":"cfxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"4043:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4018:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742043465820696e20636f6e7472616374","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4054:30:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d171d9253a701c955b23f9b69829ccc7cd0f50cf32d26ac5e4181c5d11dd6b0","typeString":"literal_string \"Insufficient CFX in contract\""},"value":"Insufficient CFX in contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d171d9253a701c955b23f9b69829ccc7cd0f50cf32d26ac5e4181c5d11dd6b0","typeString":"literal_string \"Insufficient CFX in contract\""}],"id":3746,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4010:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4010:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3756,"nodeType":"ExpressionStatement","src":"4010:75:19"},{"expression":{"arguments":[{"id":3761,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"4157:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3764,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4171:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_GasStation_$4191","typeString":"contract GasStation"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GasStation_$4191","typeString":"contract GasStation"}],"id":3763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4163:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3762,"name":"address","nodeType":"ElementaryTypeName","src":"4163:7:19","typeDescriptions":{}}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4163:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3766,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"4178:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3758,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"4126:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3757,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"4119:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$280_$","typeString":"type(contract IERC20)"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4140:16:19","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":401,"src":"4119:37:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$280_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$280_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3768,"nodeType":"ExpressionStatement","src":"4119:66:19"},{"expression":{"arguments":[{"id":3770,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"4237:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3771,"name":"userCfxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"4243:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3769,"name":"_sendCfx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"4228:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4228:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3773,"nodeType":"ExpressionStatement","src":"4228:29:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3774,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"4295:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4295:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3783,"nodeType":"IfStatement","src":"4291:52:19","trueBody":{"expression":{"arguments":[{"expression":{"id":3778,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4320:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4324:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4320:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3780,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"4332:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3777,"name":"_sendCfx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"4311:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4311:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3782,"nodeType":"ExpressionStatement","src":"4311:32:19"}},{"assignments":[3785],"declarations":[{"constant":false,"id":3785,"mutability":"mutable","name":"refund","nameLocation":"4407:6:19","nodeType":"VariableDeclaration","scope":3811,"src":"4399:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"4399:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3790,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3786,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4416:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4420:5:19","memberName":"value","nodeType":"MemberAccess","src":"4416:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3788,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"4428:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4416:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4399:32:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3791,"name":"refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"4445:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4454:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4445:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3800,"nodeType":"IfStatement","src":"4441:44:19","trueBody":{"expression":{"arguments":[{"expression":{"id":3795,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4466:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4470:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4466:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3797,"name":"refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"4478:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3794,"name":"_sendCfx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"4457:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4457:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3799,"nodeType":"ExpressionStatement","src":"4457:28:19"}},{"eventCall":{"arguments":[{"id":3802,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"4513:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3803,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4519:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4523:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4519:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3805,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"4531:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3806,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"4545:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3807,"name":"userCfxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"4553:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3808,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"4568:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3801,"name":"MetaSwapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"4501:11:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256,uint256)"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4501:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3810,"nodeType":"EmitStatement","src":"4496:83:19"}]},"functionSelector":"a275d666","id":3812,"implemented":true,"kind":"function","modifiers":[{"id":3640,"kind":"modifierInvocation","modifierName":{"id":3639,"name":"nonReentrant","nameLocations":["3017:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":167,"src":"3017:12:19"},"nodeType":"ModifierInvocation","src":"3017:12:19"}],"name":"metaSwap","nameLocation":"2789:8:19","nodeType":"FunctionDefinition","parameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"user","nameLocation":"2815:4:19","nodeType":"VariableDeclaration","scope":3812,"src":"2807:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3623,"name":"address","nodeType":"ElementaryTypeName","src":"2807:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"tokenAddress","nameLocation":"2837:12:19","nodeType":"VariableDeclaration","scope":3812,"src":"2829:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3625,"name":"address","nodeType":"ElementaryTypeName","src":"2829:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"amount","nameLocation":"2867:6:19","nodeType":"VariableDeclaration","scope":3812,"src":"2859:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"2859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"deadline","nameLocation":"2891:8:19","nodeType":"VariableDeclaration","scope":3812,"src":"2883:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"2883:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"signature","nameLocation":"2924:9:19","nodeType":"VariableDeclaration","scope":3812,"src":"2909:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3631,"name":"bytes","nodeType":"ElementaryTypeName","src":"2909:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"updateData","nameLocation":"2960:10:19","nodeType":"VariableDeclaration","scope":3812,"src":"2943:27:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3633,"name":"bytes","nodeType":"ElementaryTypeName","src":"2943:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3634,"nodeType":"ArrayTypeName","src":"2943:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3637,"mutability":"mutable","name":"maxAge","nameLocation":"2987:6:19","nodeType":"VariableDeclaration","scope":3812,"src":"2980:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3636,"name":"uint32","nodeType":"ElementaryTypeName","src":"2980:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2797:202:19"},"returnParameters":{"id":3641,"nodeType":"ParameterList","parameters":[],"src":"3030:0:19"},"scope":4191,"src":"2780:1806:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3861,"nodeType":"Block","src":"4810:365:19","statements":[{"assignments":[3826],"declarations":[{"constant":false,"id":3826,"mutability":"mutable","name":"structHash","nameLocation":"4828:10:19","nodeType":"VariableDeclaration","scope":3861,"src":"4820:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4820:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3840,"initialValue":{"arguments":[{"arguments":[{"id":3830,"name":"SWAP_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"4875:13:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3831,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"4902:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3832,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"4920:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3833,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"4946:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3834,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"4966:6:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3836,"indexExpression":{"id":3835,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"4973:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4966:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3837,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"4992:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3828,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4851:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4855:6:19","memberName":"encode","nodeType":"MemberAccess","src":"4851:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4851:159:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3827,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4841:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4841:170:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4820:191:19"},{"assignments":[3842],"declarations":[{"constant":false,"id":3842,"mutability":"mutable","name":"hash","nameLocation":"5029:4:19","nodeType":"VariableDeclaration","scope":3861,"src":"5021:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5021:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3846,"initialValue":{"arguments":[{"id":3844,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"5053:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3843,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"5036:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5036:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5021:43:19"},{"assignments":[3848],"declarations":[{"constant":false,"id":3848,"mutability":"mutable","name":"signer","nameLocation":"5082:6:19","nodeType":"VariableDeclaration","scope":3861,"src":"5074:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3847,"name":"address","nodeType":"ElementaryTypeName","src":"5074:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3853,"initialValue":{"arguments":[{"id":3851,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"5104:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3849,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"5091:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5096:7:19","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1759,"src":"5091:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5074:40:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3855,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"5132:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3856,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"5142:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5132:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5148:19:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":3854,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5124:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5124:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3860,"nodeType":"ExpressionStatement","src":"5124:44:19"}]},"id":3862,"implemented":true,"kind":"function","modifiers":[],"name":"_verifySwapSignature","nameLocation":"4633:20:19","nodeType":"FunctionDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"user","nameLocation":"4671:4:19","nodeType":"VariableDeclaration","scope":3862,"src":"4663:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3813,"name":"address","nodeType":"ElementaryTypeName","src":"4663:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"tokenAddress","nameLocation":"4693:12:19","nodeType":"VariableDeclaration","scope":3862,"src":"4685:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3815,"name":"address","nodeType":"ElementaryTypeName","src":"4685:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3818,"mutability":"mutable","name":"amount","nameLocation":"4723:6:19","nodeType":"VariableDeclaration","scope":3862,"src":"4715:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"4715:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3820,"mutability":"mutable","name":"deadline","nameLocation":"4747:8:19","nodeType":"VariableDeclaration","scope":3862,"src":"4739:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint256","nodeType":"ElementaryTypeName","src":"4739:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3822,"mutability":"mutable","name":"signature","nameLocation":"4780:9:19","nodeType":"VariableDeclaration","scope":3862,"src":"4765:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3821,"name":"bytes","nodeType":"ElementaryTypeName","src":"4765:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4653:142:19"},"returnParameters":{"id":3824,"nodeType":"ParameterList","parameters":[],"src":"4810:0:19"},"scope":4191,"src":"4624:551:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3883,"nodeType":"Block","src":"5236:111:19","statements":[{"assignments":[3870,null],"declarations":[{"constant":false,"id":3870,"mutability":"mutable","name":"success","nameLocation":"5252:7:19","nodeType":"VariableDeclaration","scope":3883,"src":"5247:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3869,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3877,"initialValue":{"arguments":[{"hexValue":"","id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5288:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3871,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"5265:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5268:4:19","memberName":"call","nodeType":"MemberAccess","src":"5265:7:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3873,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"5280:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5265:22:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5265:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5246:45:19"},{"expression":{"arguments":[{"id":3879,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"5309:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"434658207472616e73666572206661696c6564","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5318:21:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d84664c035bd21906bc79a9f55b23d7b53cc1eb60d57e3012442c16995f5cda","typeString":"literal_string \"CFX transfer failed\""},"value":"CFX transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d84664c035bd21906bc79a9f55b23d7b53cc1eb60d57e3012442c16995f5cda","typeString":"literal_string \"CFX transfer failed\""}],"id":3878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5301:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5301:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3882,"nodeType":"ExpressionStatement","src":"5301:39:19"}]},"id":3884,"implemented":true,"kind":"function","modifiers":[],"name":"_sendCfx","nameLocation":"5190:8:19","nodeType":"FunctionDefinition","parameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"to","nameLocation":"5207:2:19","nodeType":"VariableDeclaration","scope":3884,"src":"5199:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3863,"name":"address","nodeType":"ElementaryTypeName","src":"5199:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"amount","nameLocation":"5219:6:19","nodeType":"VariableDeclaration","scope":3884,"src":"5211:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5198:28:19"},"returnParameters":{"id":3868,"nodeType":"ParameterList","parameters":[],"src":"5236:0:19"},"scope":4191,"src":"5181:166:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4020,"nodeType":"Block","src":"5572:814:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3900,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"5590:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":3901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5601:5:19","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3370,"src":"5590:16:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5609:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5590:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e207072696365","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5612:21:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_de06b2fc5ff3043c083d967b71c990dc9ad8c49a20961299f991f7ad50528013","typeString":"literal_string \"Invalid token price\""},"value":"Invalid token price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_de06b2fc5ff3043c083d967b71c990dc9ad8c49a20961299f991f7ad50528013","typeString":"literal_string \"Invalid token price\""}],"id":3899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5582:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5582:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3906,"nodeType":"ExpressionStatement","src":"5582:52:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3908,"name":"cfxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"5652:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":3909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5661:5:19","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3370,"src":"5652:14:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5669:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5652:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420434658207072696365","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5672:19:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_22836c652d71874b40e48293968cf23c945edd644326f7c0ebac461a6b474ea5","typeString":"literal_string \"Invalid CFX price\""},"value":"Invalid CFX price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_22836c652d71874b40e48293968cf23c945edd644326f7c0ebac461a6b474ea5","typeString":"literal_string \"Invalid CFX price\""}],"id":3907,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5644:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3914,"nodeType":"ExpressionStatement","src":"5644:48:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3916,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"5710:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5719:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5710:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74207a65726f","id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5722:13:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_e7781ea458ec1953907f64a217bfd3ffe515f3c1737fce4ecf66ca84f23798b0","typeString":"literal_string \"Amount zero\""},"value":"Amount zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e7781ea458ec1953907f64a217bfd3ffe515f3c1737fce4ecf66ca84f23798b0","typeString":"literal_string \"Amount zero\""}],"id":3915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5702:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5702:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3921,"nodeType":"ExpressionStatement","src":"5702:34:19"},{"assignments":[3923],"declarations":[{"constant":false,"id":3923,"mutability":"mutable","name":"tokenDecimals","nameLocation":"5753:13:19","nodeType":"VariableDeclaration","scope":4020,"src":"5747:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3922,"name":"uint8","nodeType":"ElementaryTypeName","src":"5747:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3929,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3925,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"5784:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3924,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5769:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$305_$","typeString":"type(contract IERC20Metadata)"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5769:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$305","typeString":"contract IERC20Metadata"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5798:8:19","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":304,"src":"5769:37:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5769:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5747:61:19"},{"assignments":[3931],"declarations":[{"constant":false,"id":3931,"mutability":"mutable","name":"tokenExpo","nameLocation":"5824:9:19","nodeType":"VariableDeclaration","scope":4020,"src":"5818:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":3930,"name":"int32","nodeType":"ElementaryTypeName","src":"5818:5:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"id":3934,"initialValue":{"expression":{"id":3932,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"5836:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":3933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5847:4:19","memberName":"expo","nodeType":"MemberAccess","referencedDeclaration":3374,"src":"5836:15:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"VariableDeclarationStatement","src":"5818:33:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int32","typeString":"int32"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3936,"name":"tokenExpo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"5869:9:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5881:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5869:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e657870656374656420706f736974697665206578706f20666f7220746f6b656e","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5884:36:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c358edcf3c01bdb709747e6d17e5e1c51b7c5d36a295cacbabc271fdfa9daba","typeString":"literal_string \"Unexpected positive expo for token\""},"value":"Unexpected positive expo for token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c358edcf3c01bdb709747e6d17e5e1c51b7c5d36a295cacbabc271fdfa9daba","typeString":"literal_string \"Unexpected positive expo for token\""}],"id":3935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5861:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5861:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3941,"nodeType":"ExpressionStatement","src":"5861:60:19"},{"assignments":[3943],"declarations":[{"constant":false,"id":3943,"mutability":"mutable","name":"tokenUsd","nameLocation":"5939:8:19","nodeType":"VariableDeclaration","scope":4020,"src":"5931:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"5931:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3969,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3944,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"5951:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"expression":{"id":3949,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"5975:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":3950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5986:5:19","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3370,"src":"5975:16:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"id":3948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5968:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3947,"name":"uint64","nodeType":"ElementaryTypeName","src":"5968:6:19","typeDescriptions":{}}},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5968:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5960:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"5960:7:19","typeDescriptions":{}}},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5951:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5997:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"6010:10:19","subExpression":{"id":3957,"name":"tokenExpo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"6011:9:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int32","typeString":"int32"}],"id":3956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6003:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3955,"name":"uint32","nodeType":"ElementaryTypeName","src":"6003:6:19","typeDescriptions":{}}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6003:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5997:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5996:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5951:71:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5950:73:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6027:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3965,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"6033:13:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6027:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6026:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5950:97:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5931:116:19"},{"assignments":[3971],"declarations":[{"constant":false,"id":3971,"mutability":"mutable","name":"cfxExpo","nameLocation":"6064:7:19","nodeType":"VariableDeclaration","scope":4020,"src":"6058:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":3970,"name":"int32","nodeType":"ElementaryTypeName","src":"6058:5:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"id":3974,"initialValue":{"expression":{"id":3972,"name":"cfxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"6074:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":3973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6083:4:19","memberName":"expo","nodeType":"MemberAccess","referencedDeclaration":3374,"src":"6074:13:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"VariableDeclarationStatement","src":"6058:29:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int32","typeString":"int32"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3976,"name":"cfxExpo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"6105:7:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6115:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6105:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e657870656374656420706f736974697665206578706f20666f7220434658","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6118:34:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ae50a8c78b68d40e67b69a2c0a6625c958b90f470e6b14ef17f105ed73768dc","typeString":"literal_string \"Unexpected positive expo for CFX\""},"value":"Unexpected positive expo for CFX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ae50a8c78b68d40e67b69a2c0a6625c958b90f470e6b14ef17f105ed73768dc","typeString":"literal_string \"Unexpected positive expo for CFX\""}],"id":3975,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6097:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6097:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3981,"nodeType":"ExpressionStatement","src":"6097:56:19"},{"assignments":[3983],"declarations":[{"constant":false,"id":3983,"mutability":"mutable","name":"cfxUsdPerUnit","nameLocation":"6171:13:19","nodeType":"VariableDeclaration","scope":4020,"src":"6163:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"6163:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4001,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":3988,"name":"cfxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"6202:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":3989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6211:5:19","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3370,"src":"6202:14:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6195:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3986,"name":"uint64","nodeType":"ElementaryTypeName","src":"6195:6:19","typeDescriptions":{}}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6195:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6187:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"6187:7:19","typeDescriptions":{}}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6187:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6222:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"6235:8:19","subExpression":{"id":3995,"name":"cfxExpo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"6236:7:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int32","typeString":"int32"}],"id":3994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6228:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3993,"name":"uint32","nodeType":"ElementaryTypeName","src":"6228:6:19","typeDescriptions":{}}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6228:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6222:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6221:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6187:58:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6163:82:19"},{"expression":{"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4002,"name":"cfxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"6256:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4003,"name":"tokenUsd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"6269:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6280:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6284:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"6280:6:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"6269:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6268:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4009,"name":"cfxUsdPerUnit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"6290:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6268:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6256:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4012,"nodeType":"ExpressionStatement","src":"6256:47:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4014,"name":"cfxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"6321:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4015,"name":"MAX_CFX_PER_SWAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"6334:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473206d617820434658207065722073776170","id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6352:26:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_550af65beae20b6676d809741eefde75324a4c6325a5b0dbfc34ae6e2e53a1c5","typeString":"literal_string \"Exceeds max CFX per swap\""},"value":"Exceeds max CFX per swap"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_550af65beae20b6676d809741eefde75324a4c6325a5b0dbfc34ae6e2e53a1c5","typeString":"literal_string \"Exceeds max CFX per swap\""}],"id":4013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6313:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6313:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4019,"nodeType":"ExpressionStatement","src":"6313:66:19"}]},"id":4021,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateCfxAmount","nameLocation":"5362:19:19","nodeType":"FunctionDefinition","parameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"tokenAddress","nameLocation":"5399:12:19","nodeType":"VariableDeclaration","scope":4021,"src":"5391:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3885,"name":"address","nodeType":"ElementaryTypeName","src":"5391:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"amount","nameLocation":"5429:6:19","nodeType":"VariableDeclaration","scope":4021,"src":"5421:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"5421:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3891,"mutability":"mutable","name":"tokenPrice","nameLocation":"5470:10:19","nodeType":"VariableDeclaration","scope":4021,"src":"5445:35:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":3890,"nodeType":"UserDefinedTypeName","pathNode":{"id":3889,"name":"PythStructs.Price","nameLocations":["5445:11:19","5457:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"5445:17:19"},"referencedDeclaration":3377,"src":"5445:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"},{"constant":false,"id":3894,"mutability":"mutable","name":"cfxPrice","nameLocation":"5515:8:19","nodeType":"VariableDeclaration","scope":4021,"src":"5490:33:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":3893,"nodeType":"UserDefinedTypeName","pathNode":{"id":3892,"name":"PythStructs.Price","nameLocations":["5490:11:19","5502:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"5490:17:19"},"referencedDeclaration":3377,"src":"5490:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"5381:148:19"},"returnParameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"cfxAmount","nameLocation":"5561:9:19","nodeType":"VariableDeclaration","scope":4021,"src":"5553:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"5553:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5552:19:19"},"scope":4191,"src":"5353:1033:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4043,"nodeType":"Block","src":"6486:158:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4029,"name":"_feePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"6504:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6519:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"6504:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46656520746f6f2068696768","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6525:14:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""},"value":"Fee too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""}],"id":4028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6496:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4034,"nodeType":"ExpressionStatement","src":"6496:44:19"},{"expression":{"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4035,"name":"relayerFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"6561:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4036,"name":"_feePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"6581:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6561:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4038,"nodeType":"ExpressionStatement","src":"6561:31:19"},{"eventCall":{"arguments":[{"id":4040,"name":"_feePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"6625:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4039,"name":"RelayerFeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"6607:17:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6607:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4042,"nodeType":"EmitStatement","src":"6602:35:19"}]},"functionSelector":"83302a6f","id":4044,"implemented":true,"kind":"function","modifiers":[{"id":4026,"kind":"modifierInvocation","modifierName":{"id":4025,"name":"onlyOwner","nameLocations":["6476:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"6476:9:19"},"nodeType":"ModifierInvocation","src":"6476:9:19"}],"name":"setRelayerFee","nameLocation":"6432:13:19","nodeType":"FunctionDefinition","parameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"_feePercent","nameLocation":"6454:11:19","nodeType":"VariableDeclaration","scope":4044,"src":"6446:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4022,"name":"uint256","nodeType":"ElementaryTypeName","src":"6446:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6445:21:19"},"returnParameters":{"id":4027,"nodeType":"ParameterList","parameters":[],"src":"6486:0:19"},"scope":4191,"src":"6423:221:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4057,"nodeType":"Block","src":"6699:59:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4050,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6721:5:19","memberName":"value","nodeType":"MemberAccess","src":"6717:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6729:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d757374206465706f736974203e2030","id":4054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6732:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6f3a40eddd0d269dfadb18d186331292147187d83c1820db11317875defb134","typeString":"literal_string \"Must deposit > 0\""},"value":"Must deposit > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6f3a40eddd0d269dfadb18d186331292147187d83c1820db11317875defb134","typeString":"literal_string \"Must deposit > 0\""}],"id":4049,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6709:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4056,"nodeType":"ExpressionStatement","src":"6709:42:19"}]},"functionSelector":"f6954a13","id":4058,"implemented":true,"kind":"function","modifiers":[{"id":4047,"kind":"modifierInvocation","modifierName":{"id":4046,"name":"onlyOwner","nameLocations":["6689:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"6689:9:19"},"nodeType":"ModifierInvocation","src":"6689:9:19"}],"name":"depositCfx","nameLocation":"6659:10:19","nodeType":"FunctionDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[],"src":"6669:2:19"},"returnParameters":{"id":4048,"nodeType":"ParameterList","parameters":[],"src":"6699:0:19"},"scope":4191,"src":"6650:108:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4084,"nodeType":"Block","src":"6833:119:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4070,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6859:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_GasStation_$4191","typeString":"contract GasStation"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GasStation_$4191","typeString":"contract GasStation"}],"id":4069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6851:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4068,"name":"address","nodeType":"ElementaryTypeName","src":"6851:7:19","typeDescriptions":{}}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6851:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6865:7:19","memberName":"balance","nodeType":"MemberAccess","src":"6851:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4073,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"6876:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6851:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6884:22:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":4067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6843:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6843:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4077,"nodeType":"ExpressionStatement","src":"6843:64:19"},{"expression":{"arguments":[{"expression":{"id":4079,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6926:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6930:6:19","memberName":"sender","nodeType":"MemberAccess","src":"6926:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4081,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"6938:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4078,"name":"_sendCfx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"6917:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6917:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4083,"nodeType":"ExpressionStatement","src":"6917:28:19"}]},"functionSelector":"11dfca5d","id":4085,"implemented":true,"kind":"function","modifiers":[{"id":4063,"kind":"modifierInvocation","modifierName":{"id":4062,"name":"onlyOwner","nameLocations":["6810:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"6810:9:19"},"nodeType":"ModifierInvocation","src":"6810:9:19"},{"id":4065,"kind":"modifierInvocation","modifierName":{"id":4064,"name":"nonReentrant","nameLocations":["6820:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":167,"src":"6820:12:19"},"nodeType":"ModifierInvocation","src":"6820:12:19"}],"name":"withdrawCfx","nameLocation":"6773:11:19","nodeType":"FunctionDefinition","parameters":{"id":4061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4060,"mutability":"mutable","name":"amount","nameLocation":"6793:6:19","nodeType":"VariableDeclaration","scope":4085,"src":"6785:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4059,"name":"uint256","nodeType":"ElementaryTypeName","src":"6785:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6784:16:19"},"returnParameters":{"id":4066,"nodeType":"ParameterList","parameters":[],"src":"6833:0:19"},"scope":4191,"src":"6764:188:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4105,"nodeType":"Block","src":"7051:70:19","statements":[{"expression":{"arguments":[{"expression":{"id":4100,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7095:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7099:6:19","memberName":"sender","nodeType":"MemberAccess","src":"7095:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4102,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"7107:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4097,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"7068:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4096,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7061:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$280_$","typeString":"type(contract IERC20)"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7061:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$280","typeString":"contract IERC20"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7082:12:19","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":374,"src":"7061:33:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$280_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$280_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7061:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4104,"nodeType":"ExpressionStatement","src":"7061:53:19"}]},"functionSelector":"9e281a98","id":4106,"implemented":true,"kind":"function","modifiers":[{"id":4092,"kind":"modifierInvocation","modifierName":{"id":4091,"name":"onlyOwner","nameLocations":["7028:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"7028:9:19"},"nodeType":"ModifierInvocation","src":"7028:9:19"},{"id":4094,"kind":"modifierInvocation","modifierName":{"id":4093,"name":"nonReentrant","nameLocations":["7038:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":167,"src":"7038:12:19"},"nodeType":"ModifierInvocation","src":"7038:12:19"}],"name":"withdrawToken","nameLocation":"6967:13:19","nodeType":"FunctionDefinition","parameters":{"id":4090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4087,"mutability":"mutable","name":"tokenAddress","nameLocation":"6989:12:19","nodeType":"VariableDeclaration","scope":4106,"src":"6981:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4086,"name":"address","nodeType":"ElementaryTypeName","src":"6981:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4089,"mutability":"mutable","name":"amount","nameLocation":"7011:6:19","nodeType":"VariableDeclaration","scope":4106,"src":"7003:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4088,"name":"uint256","nodeType":"ElementaryTypeName","src":"7003:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6980:38:19"},"returnParameters":{"id":4095,"nodeType":"ParameterList","parameters":[],"src":"7051:0:19"},"scope":4191,"src":"6958:163:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4115,"nodeType":"Block","src":"7228:39:19","statements":[{"expression":{"id":4113,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"7245:15:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$3451_storage_$dyn_storage","typeString":"struct GasStation.TokenInfo storage ref[] storage ref"}},"functionReturnParameters":4112,"id":4114,"nodeType":"Return","src":"7238:22:19"}]},"functionSelector":"d3c7c2c7","id":4116,"implemented":true,"kind":"function","modifiers":[],"name":"getSupportedTokens","nameLocation":"7164:18:19","nodeType":"FunctionDefinition","parameters":{"id":4107,"nodeType":"ParameterList","parameters":[],"src":"7182:2:19"},"returnParameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4116,"src":"7208:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$3451_memory_ptr_$dyn_memory_ptr","typeString":"struct GasStation.TokenInfo[]"},"typeName":{"baseType":{"id":4109,"nodeType":"UserDefinedTypeName","pathNode":{"id":4108,"name":"TokenInfo","nameLocations":["7208:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3451,"src":"7208:9:19"},"referencedDeclaration":3451,"src":"7208:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3451_storage_ptr","typeString":"struct GasStation.TokenInfo"}},"id":4110,"nodeType":"ArrayTypeName","src":"7208:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$3451_storage_$dyn_storage_ptr","typeString":"struct GasStation.TokenInfo[]"}},"visibility":"internal"}],"src":"7207:20:19"},"scope":4191,"src":"7155:112:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4189,"nodeType":"Block","src":"7439:487:19","statements":[{"assignments":[4130],"declarations":[{"constant":false,"id":4130,"mutability":"mutable","name":"tokenFeedId","nameLocation":"7457:11:19","nodeType":"VariableDeclaration","scope":4189,"src":"7449:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7449:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4134,"initialValue":{"baseExpression":{"id":4131,"name":"tokenFeedIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"7471:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":4133,"indexExpression":{"id":4132,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"7484:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7471:26:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7449:48:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4136,"name":"tokenFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"7515:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7538:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7530:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7530:7:19","typeDescriptions":{}}},"id":4140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7530:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7515:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f742077686974656c6973746564","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7542:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a8a590ce223befaf7d80c46dd8a79ab1acc914febe31544396be9a38974f0312","typeString":"literal_string \"Token not whitelisted\""},"value":"Token not whitelisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a8a590ce223befaf7d80c46dd8a79ab1acc914febe31544396be9a38974f0312","typeString":"literal_string \"Token not whitelisted\""}],"id":4135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7507:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7507:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4144,"nodeType":"ExpressionStatement","src":"7507:59:19"},{"assignments":[4149],"declarations":[{"constant":false,"id":4149,"mutability":"mutable","name":"tokenPrice","nameLocation":"7602:10:19","nodeType":"VariableDeclaration","scope":4189,"src":"7577:35:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":4148,"nodeType":"UserDefinedTypeName","pathNode":{"id":4147,"name":"PythStructs.Price","nameLocations":["7577:11:19","7589:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"7577:17:19"},"referencedDeclaration":3377,"src":"7577:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"id":4154,"initialValue":{"arguments":[{"id":4152,"name":"tokenFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"7635:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4150,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"7615:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$3336","typeString":"contract IPyth"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7620:14:19","memberName":"getPriceUnsafe","nodeType":"MemberAccess","referencedDeclaration":3189,"src":"7615:19:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_Price_$3377_memory_ptr_$","typeString":"function (bytes32) view external returns (struct PythStructs.Price memory)"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7615:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}},"nodeType":"VariableDeclarationStatement","src":"7577:70:19"},{"assignments":[4159],"declarations":[{"constant":false,"id":4159,"mutability":"mutable","name":"cfxPrice","nameLocation":"7682:8:19","nodeType":"VariableDeclaration","scope":4189,"src":"7657:33:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":4158,"nodeType":"UserDefinedTypeName","pathNode":{"id":4157,"name":"PythStructs.Price","nameLocations":["7657:11:19","7669:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"7657:17:19"},"referencedDeclaration":3377,"src":"7657:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"id":4164,"initialValue":{"arguments":[{"id":4162,"name":"cfxUsdFeedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"7713:12:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4160,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"7693:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$3336","typeString":"contract IPyth"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7698:14:19","memberName":"getPriceUnsafe","nodeType":"MemberAccess","referencedDeclaration":3189,"src":"7693:19:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_Price_$3377_memory_ptr_$","typeString":"function (bytes32) view external returns (struct PythStructs.Price memory)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7693:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}},"nodeType":"VariableDeclarationStatement","src":"7657:69:19"},{"expression":{"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4165,"name":"cfxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"7737:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4167,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"7769:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4168,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"7783:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4169,"name":"tokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"7791:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}},{"id":4170,"name":"cfxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7803:8:19","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"},{"typeIdentifier":"t_struct$_Price_$3377_memory_ptr","typeString":"struct PythStructs.Price memory"}],"id":4166,"name":"_calculateCfxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"7749:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_struct$_Price_$3377_memory_ptr_$_t_struct$_Price_$3377_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,struct PythStructs.Price memory,struct PythStructs.Price memory) view returns (uint256)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7749:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7737:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4173,"nodeType":"ExpressionStatement","src":"7737:75:19"},{"expression":{"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4174,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"7822:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4175,"name":"cfxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"7836:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4176,"name":"relayerFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"7848:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:29:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7869:5:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7835:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7822:52:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4182,"nodeType":"ExpressionStatement","src":"7822:52:19"},{"expression":{"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4183,"name":"userAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"7884:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4184,"name":"cfxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"7897:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4185,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"7909:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7897:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7884:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4188,"nodeType":"ExpressionStatement","src":"7884:35:19"}]},"functionSelector":"5f5443a5","id":4190,"implemented":true,"kind":"function","modifiers":[],"name":"estimateCfxOut","nameLocation":"7282:14:19","nodeType":"FunctionDefinition","parameters":{"id":4121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"tokenAddress","nameLocation":"7314:12:19","nodeType":"VariableDeclaration","scope":4190,"src":"7306:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4117,"name":"address","nodeType":"ElementaryTypeName","src":"7306:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4120,"mutability":"mutable","name":"amount","nameLocation":"7344:6:19","nodeType":"VariableDeclaration","scope":4190,"src":"7336:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7296:60:19"},"returnParameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4123,"mutability":"mutable","name":"cfxAmount","nameLocation":"7388:9:19","nodeType":"VariableDeclaration","scope":4190,"src":"7380:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4122,"name":"uint256","nodeType":"ElementaryTypeName","src":"7380:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4125,"mutability":"mutable","name":"relayerFee","nameLocation":"7407:10:19","nodeType":"VariableDeclaration","scope":4190,"src":"7399:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4124,"name":"uint256","nodeType":"ElementaryTypeName","src":"7399:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4127,"mutability":"mutable","name":"userAmount","nameLocation":"7427:10:19","nodeType":"VariableDeclaration","scope":4190,"src":"7419:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7379:59:19"},"scope":4191,"src":"7273:653:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4192,"src":"670:7258:19","usedErrors":[1090,1092],"usedEvents":[13,117,3490,3504,3508]}],"src":"32:7897:19"},"id":19}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c05240e7affbf9d98fc9cb88366642a4c324f76b833b35e536ac621be9ef849064736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 MSTORE BLOCKHASH 0xE7 0xAF 0xFB 0xF9 0xD9 DUP16 0xC9 0xCB DUP9 CALLDATASIZE PUSH7 0x42A4C324F76B83 EXTCODESIZE CALLDATALOAD 0xE5 CALLDATASIZE 0xAC PUSH3 0x1BE9EF DUP5 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"701:6234:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c05240e7affbf9d98fc9cb88366642a4c324f76b833b35e536ac621be9ef849064736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 MSTORE BLOCKHASH 0xE7 0xAF 0xFB 0xF9 0xD9 DUP16 0xC9 0xCB DUP9 CALLDATASIZE PUSH7 0x42A4C324F76B83 EXTCODESIZE CALLDATALOAD 0xE5 CALLDATASIZE 0xAC PUSH3 0x1BE9EF DUP5 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"701:6234:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207cd18bdcd4baa6add5b2e207d9d4c2d39f7b515a259708dc9c21262cca01f04964736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xD18BDCD4BAA6ADD5B2E207D9D4C2D39F7B515A259708DC9C21262CCA01 CREATE 0x49 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9169:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212207cd18bdcd4baa6add5b2e207d9d4c2d39f7b515a259708dc9c21262cca01f04964736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xD18BDCD4BAA6ADD5B2E207D9D4C2D39F7B515A259708DC9C21262CCA01 CREATE 0x49 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9169:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220192f84a302340849c713dada1cf0afce904d7b2773eee464654b58a19478e09764736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0x2F DUP5 LOG3 MUL CALLVALUE ADDMOD 0x49 0xC7 SGT 0xDA 0xDA SHR CREATE 0xAF 0xCE SWAP1 0x4D PUSH28 0x2773EEE464654B58A19478E09764736F6C6343000814003300000000 ","sourceMap":"1235:3050:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220192f84a302340849c713dada1cf0afce904d7b2773eee464654b58a19478e09764736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0x2F DUP5 LOG3 MUL CALLVALUE ADDMOD 0x49 0xC7 SGT 0xDA 0xDA SHR CREATE 0xAF 0xCE SWAP1 0x4D PUSH28 0x2773EEE464654B58A19478E09764736F6C6343000814003300000000 ","sourceMap":"1235:3050:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212209d3ee5c0f8ab38bf08034dfae1988b6402791e8c77775fa6d42462170310c24364736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 RETURNDATACOPY 0xE5 0xC0 0xF8 0xAB CODESIZE 0xBF ADDMOD SUB 0x4D STATICCALL 0xE1 SWAP9 DUP12 PUSH5 0x2791E8C77 PUSH24 0x5FA6D42462170310C24364736F6C63430008140033000000 ","sourceMap":"1420:2685:10:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212209d3ee5c0f8ab38bf08034dfae1988b6402791e8c77775fa6d42462170310c24364736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 RETURNDATACOPY 0xE5 0xC0 0xF8 0xAB CODESIZE 0xBF ADDMOD SUB 0x4D STATICCALL 0xE1 SWAP9 DUP12 PUSH5 0x2791E8C77 PUSH24 0x5FA6D42462170310C24364736F6C63430008140033000000 ","sourceMap":"1420:2685:10:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212208ac13cdd8d0521d52154beaad57d8f3cc20a79075a6c37c2dade85202f447f3264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xC1 EXTCODECOPY 0xDD DUP14 SDIV 0x21 0xD5 0x21 SLOAD 0xBE 0xAA 0xD5 PUSH30 0x8F3CC20A79075A6C37C2DADE85202F447F3264736F6C6343000814003300 ","sourceMap":"220:2559:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212208ac13cdd8d0521d52154beaad57d8f3cc20a79075a6c37c2dade85202f447f3264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xC1 EXTCODECOPY 0xDD DUP14 SDIV 0x21 0xD5 0x21 SLOAD 0xBE 0xAA 0xD5 PUSH30 0x8F3CC20A79075A6C37C2DADE85202F447F3264736F6C6343000814003300 ","sourceMap":"220:2559:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212209a3657394e311feadafa42013fbb6e3a8fe3b9944dd8d66d546a99087365676864736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 CALLDATASIZE JUMPI CODECOPY 0x4E BALANCE 0x1F 0xEA 0xDA STATICCALL TIMESTAMP ADD EXTCODEHASH 0xBB PUSH15 0x3A8FE3B9944DD8D66D546A99087365 PUSH8 0x6864736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"369:8761:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212209a3657394e311feadafa42013fbb6e3a8fe3b9944dd8d66d546a99087365676864736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 CALLDATASIZE JUMPI CODECOPY 0x4E BALANCE 0x1F 0xEA 0xDA STATICCALL TIMESTAMP ADD EXTCODEHASH 0xBB PUSH15 0x3A8FE3B9944DD8D66D546A99087365 PUSH8 0x6864736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"369:8761:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c61f610e9c1d5dd1dbeab6d1c20fa76cb476724e8847172e46a6a98b671477564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH2 0xF610 0xE9 0xC1 0xD5 0xDD SAR 0xBE 0xAB PUSH14 0x1C20FA76CB476724E8847172E46A PUSH11 0x98B671477564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"202:12582:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c61f610e9c1d5dd1dbeab6d1c20fa76cb476724e8847172e46a6a98b671477564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH2 0xF610 0xE9 0xC1 0xD5 0xDD SAR 0xBE 0xAB PUSH14 0x1C20FA76CB476724E8847172E46A PUSH11 0x98B671477564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"202:12582:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212205aa40068d9bff08ee52013b97ffaa925adb46080ffcb0daae07ef26457fe238d64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS LOG4 STOP PUSH9 0xD9BFF08EE52013B97F STATICCALL 0xA9 0x25 0xAD 0xB4 PUSH1 0x80 SELFDESTRUCT 0xCB 0xD 0xAA 0xE0 PUSH31 0xF26457FE238D64736F6C634300081400330000000000000000000000000000 ","sourceMap":"215:1047:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212205aa40068d9bff08ee52013b97ffaa925adb46080ffcb0daae07ef26457fe238d64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS LOG4 STOP PUSH9 0xD9BFF08EE52013B97F STATICCALL 0xA9 0x25 0xAD 0xB4 PUSH1 0x80 SELFDESTRUCT 0xCB 0xD 0xAA 0xE0 PUSH31 0xF26457FE238D64736F6C634300081400330000000000000000000000000000 ","sourceMap":"215:1047:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"IPyth":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"publishTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"price","type":"int64"},{"indexed":false,"internalType":"uint64","name":"conf","type":"uint64"}],"name":"PriceFeedUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"startTime","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"endTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"twapPrice","type":"int64"},{"indexed":false,"internalType":"uint64","name":"twapConf","type":"uint64"},{"indexed":false,"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"name":"TwapPriceFeedUpdate","type":"event"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"age","type":"uint256"}],"name":"getEmaPriceNoOlderThan","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getEmaPriceUnsafe","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"age","type":"uint256"}],"name":"getPriceNoOlderThan","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getPriceUnsafe","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"getTwapUpdateFee","outputs":[{"internalType":"uint256","name":"feeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"getUpdateFee","outputs":[{"internalType":"uint256","name":"feeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxPublishTime","type":"uint64"}],"name":"parsePriceFeedUpdates","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxPublishTime","type":"uint64"}],"name":"parsePriceFeedUpdatesUnique","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minAllowedPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxAllowedPublishTime","type":"uint64"},{"internalType":"bool","name":"checkUniqueness","type":"bool"},{"internalType":"bool","name":"checkUpdateDataIsMinimal","type":"bool"},{"internalType":"bool","name":"storeUpdatesIfFresh","type":"bool"}],"name":"parsePriceFeedUpdatesWithConfig","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"},{"internalType":"uint64[]","name":"slots","type":"uint64[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"}],"name":"parseTwapPriceFeedUpdates","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint64","name":"startTime","type":"uint64"},{"internalType":"uint64","name":"endTime","type":"uint64"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"twap","type":"tuple"},{"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"internalType":"struct PythStructs.TwapPriceFeed[]","name":"twapPriceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"updatePriceFeeds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64[]","name":"publishTimes","type":"uint64[]"}],"name":"updatePriceFeedsIfNecessary","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getEmaPriceNoOlderThan(bytes32,uint256)":"711a2e28","getEmaPriceUnsafe(bytes32)":"9474f45b","getPriceNoOlderThan(bytes32,uint256)":"a4ae35e0","getPriceUnsafe(bytes32)":"96834ad3","getTwapUpdateFee(bytes[])":"5f674e35","getUpdateFee(bytes[])":"d47eed45","parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)":"4716e9c5","parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)":"accca7f9","parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)":"3a229d18","parseTwapPriceFeedUpdates(bytes[],bytes32[])":"eb942158","updatePriceFeeds(bytes[])":"ef9e5e28","updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])":"b9256d28"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"twapPrice\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"twapConf\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"name\":\"TwapPriceFeedUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getEmaPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getEmaPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getTwapUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdatesUnique\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minAllowedPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxAllowedPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"checkUniqueness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkUpdateDataIsMinimal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storeUpdatesIfFresh\",\"type\":\"bool\"}],\"name\":\"parsePriceFeedUpdatesWithConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64[]\",\"name\":\"slots\",\"type\":\"uint64[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"}],\"name\":\"parseTwapPriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"twap\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"internalType\":\"struct PythStructs.TwapPriceFeed[]\",\"name\":\"twapPriceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"updatePriceFeeds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64[]\",\"name\":\"publishTimes\",\"type\":\"uint64[]\"}],\"name\":\"updatePriceFeedsIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Pyth Data Association\",\"details\":\"Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}},\"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)\":{\"details\":\"Emitted when the TWAP price feed with `id` has received a fresh update.\",\"params\":{\"downSlotsRatio\":\"Down slot ratio of the TWAP.\",\"endTime\":\"End time of the TWAP.\",\"id\":\"The Pyth Price Feed ID.\",\"startTime\":\"Start time of the TWAP.\",\"twapConf\":\"Confidence interval of the TWAP.\",\"twapPrice\":\"Price of the TWAP.\"}}},\"kind\":\"dev\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getEmaPriceUnsafe(bytes32)\":{\"details\":\"This function returns the same price as `getEmaPrice` in the case where the price is available. However, if the price is not recent this function returns the latest available price. The returned price can be from arbitrarily far in the past; this function makes no guarantees that the returned price is recent or useful for any particular application. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceUnsafe(bytes32)\":{\"details\":\"This function returns the most recent price update in this contract without any recency checks. This function is unsafe as the returned price update may be arbitrarily far in the past. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use `getPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getTwapUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"getUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range and uniqueness condition.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxAllowedPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minAllowedPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"storeUpdatesIfFresh\":\"flag for the parse function to\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parseTwapPriceFeedUpdates(bytes[],bytes32[])\":{\"details\":\"Reverts if: - The transferred fee is not sufficient - The updateData is invalid or malformed - The updateData array does not contain exactly 2 updates - There is no update for any of the given `priceIds` - The time ordering between data points is invalid (start time must be before end time)\",\"params\":{\"priceIds\":\"Array of price ids to calculate TWAP for\",\"updateData\":\"Array containing exactly two price updates (start and end points for TWAP calculation)\"},\"returns\":{\"twapPriceFeeds\":\"Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)\"}},\"updatePriceFeeds(bytes[])\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"updateData\":\"Array of price update data.\"}},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"details\":\"Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"priceIds\":\"Array of price ids.\",\"publishTimes\":\"Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\",\"updateData\":\"Array of price update data.\"}}},\"title\":\"Consume prices from the Pyth Network (https://pyth.network/).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the exponentially-weighted moving average price that is no older than `age` seconds of the current time.\"},\"getEmaPriceUnsafe(bytes32)\":{\"notice\":\"Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\"},\"getPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the price that is no older than `age` seconds of the current time.\"},\"getPriceUnsafe(bytes32)\":{\"notice\":\"Returns the price of a price feed without any sanity checks.\"},\"getTwapUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update a TWAP price.\"},\"getUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update an array of price updates.\"},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array.\"},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Similar to `parsePriceFeedUpdates` but ensures the updates returned are the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp, this method will return the first update. This method may store the price updates on-chain, if they are more recent than the current stored prices.\"},\"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. This method will eventually allow the caller to determine whether parsed price feeds should update the stored values as well.\"},\"parseTwapPriceFeedUpdates(bytes[],bytes32[])\":{\"notice\":\"Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`. This method calculates TWAP between two data points by processing the difference in cumulative price values divided by the time period. It requires exactly two updates that contain valid price information for all the requested price IDs. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the updateData array.\"},\"updatePriceFeeds(bytes[])\":{\"notice\":\"Update price feeds with given update messages. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. Prices will be updated if they are more recent than the current stored prices. The call will succeed even if the update is not the most recent.\"},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"notice\":\"Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have a newer or equal publish time than the given publish time, it will reject the transaction to save gas. Otherwise, it calls updatePriceFeeds method to update the prices.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":\"IPyth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0xada6a1f4898b056d2804409ecad466b786dc6a12bc6f8f247e7f1471c1b86fcd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecee3c205896236fc11bfb1367f033353448fa462b08e5212a32e767f72022c9\",\"dweb:/ipfs/QmeEQpRRza2Swm2gCCC61TDxQ2GNLjqPhdtbSznADMuMni\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]}},\"version\":1}"}},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"IPythEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"publishTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"price","type":"int64"},{"indexed":false,"internalType":"uint64","name":"conf","type":"uint64"}],"name":"PriceFeedUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"startTime","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"endTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"twapPrice","type":"int64"},{"indexed":false,"internalType":"uint64","name":"twapConf","type":"uint64"},{"indexed":false,"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"name":"TwapPriceFeedUpdate","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"twapPrice\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"twapConf\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"name\":\"TwapPriceFeedUpdate\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This interface can be used for listening to the updates for off-chain and testing purposes.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}},\"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)\":{\"details\":\"Emitted when the TWAP price feed with `id` has received a fresh update.\",\"params\":{\"downSlotsRatio\":\"Down slot ratio of the TWAP.\",\"endTime\":\"End time of the TWAP.\",\"id\":\"The Pyth Price Feed ID.\",\"startTime\":\"Start time of the TWAP.\",\"twapConf\":\"Confidence interval of the TWAP.\",\"twapPrice\":\"Price of the TWAP.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"IPythEvents contains the events that Pyth contract emits.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":\"IPythEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]}},\"version\":1}"}},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"PythStructs":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601357603a908160198239f35b600080fdfe600080fdfea2646970667358221220b59e959ead27fa0f1e76d69b0e315f3ee2b2c4b600090a71414071f0ce4616c264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP15 SWAP6 SWAP15 0xAD 0x27 STATICCALL 0xF 0x1E PUSH23 0xD69B0E315F3EE2B2C4B600090A71414071F0CE4616C264 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"64:2355:18:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b59e959ead27fa0f1e76d69b0e315f3ee2b2c4b600090a71414071f0ce4616c264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP15 SWAP6 SWAP15 0xAD 0x27 STATICCALL 0xF 0x1E PUSH23 0xD69B0E315F3EE2B2C4B600090A71414071F0CE4616C264 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"64:2355:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":\"PythStructs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]}},\"version\":1}"}},"contracts/gasRouter.sol":{"GasStation":{"abi":[{"inputs":[{"internalType":"address","name":"_pyth","type":"address"},{"internalType":"bytes32","name":"_cfxUsdFeedId","type":"bytes32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":true,"internalType":"address","name":"tokenAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"cfxAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"relayerFee","type":"uint256"}],"name":"MetaSwapped","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFeePercent","type":"uint256"}],"name":"RelayerFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenAddress","type":"address"},{"indexed":false,"internalType":"string","name":"ticker","type":"string"},{"indexed":false,"internalType":"bytes32","name":"feedId","type":"bytes32"}],"name":"TokenAdded","type":"event"},{"inputs":[],"name":"MAX_CFX_PER_SWAP","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"string","name":"ticker","type":"string"},{"internalType":"bytes32","name":"feedId","type":"bytes32"}],"name":"addToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cfxUsdFeedId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositCfx","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"estimateCfxOut","outputs":[{"internalType":"uint256","name":"cfxAmount","type":"uint256"},{"internalType":"uint256","name":"relayerFee","type":"uint256"},{"internalType":"uint256","name":"userAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSupportedTokens","outputs":[{"components":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"string","name":"ticker","type":"string"},{"internalType":"bytes32","name":"feedId","type":"bytes32"}],"internalType":"struct GasStation.TokenInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"uint32","name":"maxAge","type":"uint32"}],"name":"metaSwap","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pyth","outputs":[{"internalType":"contract IPyth","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"relayerFeePercent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_feePercent","type":"uint256"}],"name":"setRelayerFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"supportedTokens","outputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"string","name":"ticker","type":"string"},{"internalType":"bytes32","name":"feedId","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenFeedIds","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenTickers","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawCfx","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"finalize_allocation":{"entryPoint":714,"id":null,"parameterSlots":1,"returnSlots":0},"fun_toShortStringWithFallback":{"entryPoint":1219,"id":1234,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback_3353":{"entryPoint":742,"id":1234,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6101a034620002af576001600160401b0362002ae5601f38829003908101601f191684019083821185831017620002b45780859160409485948552833981010312620002af5782516001600160a01b039384821691829003620002af57602080910151928051916200007183620002ca565b600a8352808301956923b0b9a9ba30ba34b7b760b11b875282516200009681620002ca565b60018152603160f81b83820190815260008054336001600160a01b0319821681178355919b167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08c80a360018055620000ef86620002e6565b98610120998a526200010183620004c3565b96610140978852519020918260e0525190209061010099828b524660a052855192858401927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f84528785015260608401524660808401523060a084015260a0835260c0830193838510908511176200029b5750828552815190206080523060c05260326008558515620002665750508415620002325750610160928352610180938452519361246c958662000679873960805186611fba015260a05186612085015260c05186611f84015260e051866120090152518561202f01525184610d1e01525183610d470152518281816101150152818161073a0152818161077e015281816107dc01528181610867015281816108ec01526113650152518181816102ae015281816108aa01526113c60152f35b606491519062461bcd60e51b82526004820152600f60248201526e1a5b9d985b1a590819995959081a59608a1b6044820152fd5b61010470707974682061646472657373207a65726f60781b9160649462461bcd60e51b855260c4820152601160e48201520152fd5b634e487b7160e01b81526041600452602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117620002b457604052565b805160209081811015620003835750601f8251116200032257808251920151908083106200031357501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b82851062000369575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935062000345565b906001600160401b038211620002b457600254926001938481811c91168015620004b8575b83821014620004a257601f811162000468575b5081601f8411600114620003fc5750928293918392600094620003f0575b50501b916000199060031b1c19161760025560ff90565b015192503880620003d9565b919083601f198116600260005284600020946000905b888383106200044d575050501062000433575b505050811b0160025560ff90565b015160001960f88460031b161c1916905538808062000425565b85870151885590960195948501948793509081019062000412565b600260005284601f84600020920160051c820191601f860160051c015b82811062000495575050620003bb565b6000815501859062000485565b634e487b7160e01b600052602260045260246000fd5b90607f1690620003a8565b8051602091908281101562000553575090601f825111620004f257808251920151908083106200031357501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b82851062000539575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935062000515565b6001600160401b038111620002b4576003928354926001938481811c911680156200066d575b83821014620004a257601f811162000634575b5081601f8411600114620005cb5750928293918392600094620005bf575b50501b9160001990841b1c191617905560ff90565b015192503880620005aa565b919083601f1981168760005284600020946000905b8883831062000619575050501062000600575b505050811b01905560ff90565b015160001983861b60f8161c19169055388080620005f3565b858701518855909601959485019487935090810190620005e0565b8560005284601f84600020920160051c820191601f860160051c015b828110620006605750506200058c565b6000815501859062000650565b90607f16906200057956fe60c0604052600436101561001257600080fd5b600060a05260003560e01c806311dfca5d146114a957806331e2a65c146114845780635f5443a514611324578063715018a6146112c557806378af1d5514610ede5780637ecebe0014610ea257806383302a6f14610e1457806384b0196e14610d065780638da5cb5b14610cdd57806391f1221814610ca15780639e281a9814610c1d578063a275d6661461050f578063c625562614610497578063c9325d6c14610439578063d3c7c2c7146102d1578063e83d086f14610294578063ef1774a214610274578063f2fde38b146101a7578063f6954a131461014d5763f98d06f0146100fd57600080fd5b346101475760a05180600319360112610144576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80fd5b60a05180fd5b60a051806003193601126101445761016361171a565b341561016f5760a05180f35b60405162461bcd60e51b815260206004820152601060248201526f04d757374206465706f736974203e20360841b6044820152606490fd5b34610147576020366003190112610147576101c061151f565b6101c861171a565b6001600160a01b0390811690811561022057600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360a05180f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346101475760a05180600319360112610144576020600854604051908152f35b346101475760a051806003193601126101445760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346101475760a05180600319360112610144576004546001600160401b038111610423576040519060209061030b828260051b01846116f9565b8083528183019081600460a051527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b60a051915b8383106103ca5750505050604051918083019381845251809452604083019360408160051b850101929160a051955b82871061037b5785850386f35b909192938280600192603f19898203018552875190848060a01b0382511681526040806103b48585015160608088870152850190611562565b930151910152960192019601959291909261036e565b6003866001926040999899516103df816116c3565b848060a01b038654168152604051610404816103fd81898b0161162d565b03826116f9565b838201526002860154604082015281520192019201919095949561033f565b634e487b7160e01b600052604160045260246000fd5b34610147576020366003190112610147576001600160a01b0361045a61151f565b1660a0515260066020526104936103fd61047f604060a051206040519283809261162d565b604051918291602083526020830190611562565b0390f35b3461014757602036600319011261014757600435600454811015610147576104be906115a2565b5060018060a01b038154166002604051926104e7846104e0816001850161162d565b03856116f9565b01546105056040519384938452606060208501526060840190611562565b9060408301520390f35b60e03660031901126101475761052361151f565b6024356001600160a01b0381169003610147576084356001600160401b03811161014757610555903690600401611535565b906001600160401b0360a435116101475736602360a435011215610147576001600160401b0360a43560040135116101475736602460a4356004013560051b60a4350101116101475763ffffffff60c4351660c43503610147576105b7611b84565b6064354211610be45760a080516024356001600160a01b0316905260056020525160409020546105e89015156119ef565b60018060a01b03831660a051526007602052604060a051205491604051927f07f6f794c7fcb551753890b40c47e50ca6b3742713f342e7827073a27f687f46602085015260018060a01b038516604085015260018060a01b03602435166060850152604435608085015260a084015260643560c084015260c083528260e08101106001600160401b0360e085011117610b03576106be6106c49260428560e06106cc97016040526020815191012061069e611f81565b906040519161190160f01b83526002830152602282015220923691611943565b90611eba565b919091611da0565b6001600160a01b03828116911603610bab5760a080516001600160a01b038316905260076020525160408120805490916000198214610b94575060010190556040519063d47eed4560e01b82526020828061073660a43560040135602460a4350160048401611a33565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa918215610ac05760a05192610b60575b50813410610b1b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b1561014757604051631df3cbc560e31b815260a05181806107d760a43560040135602460a4350160048401611a33565b0381867f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af18015610ac057610aec575b5060018060a01b036024351660a051526005602052604060a05120546040516080818061086363052571af60e51b9586835260c435906004840190929163ffffffff6020916040840195845216910152565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610ac05760a05191610acd575b506040519182527f0000000000000000000000000000000000000000000000000000000000000000600483015260c43563ffffffff1660248301526080826044816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610ac05761092e9260a05192610a8f575b50604435602435612128565b61271061093d60085483611b2e565b04926109498483611b77565b914710610a4a57604051906323b872dd60e01b602083015260018060a01b038416602483015230604483015260443560648301526064825260a082018281106001600160401b03821117610423576040526109c9916109b3906024356001600160a01b0316611bda565b6109bd83856120ab565b84610a3b575b34611b77565b80610a2b575b5060408051604435815260208101929092528101929092526001600160a01b036024358116923392909116907f6efced4ed44fb06eaed2ffec26c5392c1b03a2ba58ca72e7af5b738826cd4cec90606090a46001805560a05180f35b610a3590336120ab565b836109cf565b610a4585336120ab565b6109c3565b60405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742043465820696e20636f6e7472616374000000006044820152606490fd5b610ab291925060803d608011610ab9575b610aaa81836116f9565b810190611ac2565b9085610922565b503d610aa0565b6040513d60a051823e3d90fd5b610ae6915060803d608011610ab957610aaa81836116f9565b846108a1565b6001600160401b038111610b035760405282610811565b634e487b7160e01b60a051526041600452602460a051fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420507974682075706461746520666565000000006044820152606490fd5b9091506020813d602011610b8c575b81610b7c602093836116f9565b8101031261014757519082610774565b3d9150610b6f565b634e487b7160e01b9052601160045260a051602490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527014da59db985d1d5c9948195e1c1a5c9959607a1b6044820152606490fd5b3461014757604036600319011261014757610c3661151f565b610c3e61171a565b610c46611b84565b60405163a9059cbb60e01b602082015233602482015260243560448201526044815260808101918183106001600160401b03841117610b0357604092909252610c97916001600160a01b0316611bda565b6001805560a05180f35b34610147576020366003190112610147576001600160a01b03610cc261151f565b1660a0515260056020526020604060a0512054604051908152f35b346101475760a0518060031936011261014457546040516001600160a01b039091168152602090f35b346101475760a0518060031936011261014457610d427f0000000000000000000000000000000000000000000000000000000000000000611772565b610d6b7f000000000000000000000000000000000000000000000000000000000000000061186e565b6040516020808201928284106001600160401b03851117610b03579181610dc58594610db7979660405260a0518452604051978897600f60f81b895260e0858a015260e0890190611562565b908782036040890152611562565b9146606087015230608087015260a05160a087015285830360c0870152519182815201929160a0515b828110610dfd57505050500390f35b835185528695509381019392810192600101610dee565b3461014757602036600319011261014757600435610e3061171a565b6103e88111610e6e576020817f33e1d5145944d624b86865712fc54c442cdfdeebf537007cb7809bccb0126da592600855604051908152a160a05180f35b60405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152606490fd5b34610147576020366003190112610147576001600160a01b03610ec361151f565b1660a0515260076020526020604060a0512054604051908152f35b3461014757606036600319011261014757610ef761151f565b60248035916001600160401b039283811161014757610f1a903690600401611535565b9091604435610f2761171a565b801561128f576001600160a01b03918216948515611253578560a0515260209260058452604060a05120546112195760405190610f63826116c3565b878252610f71368789611943565b908583019182526040830190858252600454680100000000000000008110156111ec57610fa9906001608052600181016004556115a2565b9490946112035751166bffffffffffffffffffffffff60a01b845416178355608051830191519182518b81116111ec57610fed81610fe784546115f3565b8461197a565b60a051938894601f831160011461117e5750600294829160a05192611173575b50508160011b916000199060031b1c19161790555b519101558560a051526005835260a051826040822055600684526040812097851161115f57505061105d8361105788546115f3565b8861197a565b60a05195601f84116001146110dc57837f7ee5b861ad236224c1fb776c839c3959f7a0903d4e4dcde63306821c6ff60aa2969760a051916110d1575b508460011b906000198660031b1c19161790555b6110c46040519485946040865260408601916119ce565b918301520390a260a05180f35b905085013588611099565b80875260a051838120608051601f1987169990925b8a811061114a5750867f7ee5b861ad236224c1fb776c839c3959f7a0903d4e4dcde63306821c6ff60aa2999a10611130575b505084811b0190556110ad565b870135600019600388901b60f8161c191690558880611123565b888201358355918301919086019086016110f1565b634e487b7160e01b9052604160045260a051fd5b015190508d8061100d565b92939484601f198416945260a051918a83209294608051955b8c8282106111d85750509084600298979695949392106111bf575b505050811b019055611022565b015160001960f88460031b161c191690558d80806111b2565b838501518655948701949384019301611197565b85634e487b7160e01b60a05152604160045260a051fd5b85634e487b7160e01b60a0515260a05180600452fd5b60405162461bcd60e51b81526004810185905260138184015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606490fd5b60649060156040519162461bcd60e51b83526020600484015282015274496e76616c696420746f6b656e206164647265737360581b6044820152fd5b60405162461bcd60e51b815260206004820152600f818701526e125b9d985b1a590819995959081251608a1b6044820152606490fd5b346101475760a05180600319360112610144576112e061171a565b60a05180546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b346101475760403660031901126101475761133d61151f565b60018060a01b0380821660a051526005602052604060a0512054906113638215156119ef565b7f00000000000000000000000000000000000000000000000000000000000000001690604051926396834ad360e01b9182855260048501526080938481602481875afa928315610ac057859160a05194611465575b5060246040518096819382527f000000000000000000000000000000000000000000000000000000000000000060048301525afa928315610ac05761140b9460a05194611446575b505060243590612128565b61271061141a60085483611b2e565b04906104936114298383611b77565b604051938493846040919493926060820195825260208201520152565b61145d929450803d10610ab957610aaa81836116f9565b918480611400565b61147d919450823d8411610ab957610aaa81836116f9565b92866113b8565b346101475760a05180600319360112610144576020604051678ac7230489e800008152f35b3461151a57602036600319011261151a576004356114c561171a565b6114cd611b84565b8047106114de57610c9790336120ab565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b600080fd5b600435906001600160a01b038216820361151a57565b9181601f8401121561151a578235916001600160401b03831161151a576020838186019501011161151a57565b919082519283825260005b84811061158e575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161156d565b6004548110156115dd576003906004600052027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015611623575b602083101461160d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611602565b906000929180549161163e836115f3565b9182825260019384811690816000146116a05750600114611660575b50505050565b90919394506000526020928360002092846000945b83861061168c57505050500101903880808061165a565b805485870183015294019385908201611675565b9294505050602093945060ff191683830152151560051b0101903880808061165a565b606081019081106001600160401b0382111761042357604052565b604081019081106001600160401b0382111761042357604052565b90601f801991011681019081106001600160401b0382111761042357604052565b6000546001600160a01b0316330361172e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60ff81146117b05760ff811690601f821161179e5760405191611794836116de565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b506040516002548160006117c3836115f3565b8083529260019081811690811561184c57506001146117ed575b506117ea925003826116f9565b90565b6002600090815291507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b84831061183157506117ea9350508101602001386117dd565b81935090816020925483858901015201910190918492611818565b9050602092506117ea94915060ff191682840152151560051b820101386117dd565b60ff81146118905760ff811690601f821161179e5760405191611794836116de565b506040516003548160006118a3836115f3565b8083529260019081811690811561184c57506001146118c957506117ea925003826116f9565b6003600090815291507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b84831061190d57506117ea9350508101602001386117dd565b819350908160209254838589010152019101909184926118f4565b6001600160401b03811161042357601f01601f191660200190565b92919261194f82611928565b9161195d60405193846116f9565b82948184528183011161151a578281602093846000960137010152565b90601f811161198857505050565b600091825260208220906020601f850160051c830194106119c4575b601f0160051c01915b8281106119b957505050565b8181556001016119ad565b90925082906119a4565b908060209392818452848401376000828201840152601f01601f1916010190565b156119f657565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881b9bdd081dda1a5d195b1a5cdd1959605a1b6044820152606490fd5b9160208181850182865252604084019360408360051b82010194846000925b858410611a63575050505050505090565b90919293949596603f198282030184528735601e198436030181121561151a5783018681019190356001600160401b03811161151a57803603831361151a57611ab1889283926001956119ce565b990194019401929594939190611a52565b9081608091031261151a57604051906001600160401b0360808301818111848210176104235760405281518060070b810361151a5783526020820151908116810361151a5760208301526040810151908160030b820361151a5760609160408401520151606082015290565b81810292918115918404141715611b4157565b634e487b7160e01b600052601160045260246000fd5b8115611b61570490565b634e487b7160e01b600052601260045260246000fd5b91908203918211611b4157565b600260015414611b95576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60018060a01b031690611c39604051611bf2816116de565b6020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af1611c33611cd3565b91611d03565b805191821591848315611cab575b505050905015611c545750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b919381809450010312611ccf57820151908115158203610144575080388084611c47565b5080fd5b3d15611cfe573d90611ce482611928565b91611cf260405193846116f9565b82523d6000602084013e565b606090565b91929015611d655750815115611d17575090565b3b15611d205790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611d785750805190602001fd5b60405162461bcd60e51b815260206004820152908190611d9c906024830190611562565b0390fd5b6005811015611ea45780611db15750565b60018103611dfe5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b60028103611e4b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b600314611e5457565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b906041815114600014611ee857611ee4916020820151906060604084015193015160001a90611ef2565b9091565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311611f755791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15611f685781516001600160a01b03811615611f62579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480612082575b15611fdc577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c081018181106001600160401b038211176104235760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611fb3565b600080809381935af16120bc611cd3565b50156120c457565b60405162461bcd60e51b815260206004820152601360248201527210d196081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b60030b637fffffff198114611b415760000390565b63ffffffff16604d8111611b4157600a0a90565b909193929360009081815160070b13156123fb5781865160070b13156123c257831561238f576040805163313ce56760e01b815290966004956020959192909186908290899082906001600160a01b03165afa90811561238557859161234a575b508884015160030b91858312156122fc576121d56121be6121b860ff936001600160401b038099511690611b2e565b946120ff565b936121cf63ffffffff958616612114565b90611b2e565b9116604d81116122e957906121ed91600a0a90611b57565b928883015160030b92858412156122a857916122136121cf9261221995945116936120ff565b16612114565b91670de0b6b3a76400009182810292818404149015171561229557509061223f91611b57565b93678ac7230489e80000851161225457505050565b5162461bcd60e51b815291820152601860248201527f45786365656473206d6178204346582070657220737761700000000000000000604482015260649150fd5b634e487b7160e01b815260118552602490fd5b60648888808d519262461bcd60e51b845283015260248201527f556e657870656374656420706f736974697665206578706f20666f72204346586044820152fd5b634e487b7160e01b865260118852602486fd5b895162461bcd60e51b8152808901889052602260248201527f556e657870656374656420706f736974697665206578706f20666f7220746f6b60448201526132b760f11b6064820152608490fd5b90508581813d831161237e575b61236181836116f9565b8101031261237a575160ff8116810361237a5738612189565b8480fd5b503d612357565b89513d87823e3d90fd5b60405162461bcd60e51b815260206004820152600b60248201526a416d6f756e74207a65726f60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c69642043465820707269636560781b6044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272496e76616c696420746f6b656e20707269636560681b6044820152606490fdfea2646970667358221220642deca9e2da3f2b31d6db6de9c40cb869009b2514e858c3c03fbefa3eef134664736f6c63430008140033","opcodes":"PUSH2 0x1A0 CALLVALUE PUSH3 0x2AF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH3 0x2AE5 PUSH1 0x1F CODESIZE DUP3 SWAP1 SUB SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP5 ADD SWAP1 DUP4 DUP3 GT DUP6 DUP4 LT OR PUSH3 0x2B4 JUMPI DUP1 DUP6 SWAP2 PUSH1 0x40 SWAP5 DUP6 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x2AF JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP3 AND SWAP2 DUP3 SWAP1 SUB PUSH3 0x2AF JUMPI PUSH1 0x20 DUP1 SWAP2 ADD MLOAD SWAP3 DUP1 MLOAD SWAP2 PUSH3 0x71 DUP4 PUSH3 0x2CA JUMP JUMPDEST PUSH1 0xA DUP4 MSTORE DUP1 DUP4 ADD SWAP6 PUSH10 0x23B0B9A9BA30BA34B7B7 PUSH1 0xB1 SHL DUP8 MSTORE DUP3 MLOAD PUSH3 0x96 DUP2 PUSH3 0x2CA JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 SWAP12 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP13 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH3 0xEF DUP7 PUSH3 0x2E6 JUMP JUMPDEST SWAP9 PUSH2 0x120 SWAP10 DUP11 MSTORE PUSH3 0x101 DUP4 PUSH3 0x4C3 JUMP JUMPDEST SWAP7 PUSH2 0x140 SWAP8 DUP9 MSTORE MLOAD SWAP1 KECCAK256 SWAP2 DUP3 PUSH1 0xE0 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x100 SWAP10 DUP3 DUP12 MSTORE CHAINID PUSH1 0xA0 MSTORE DUP6 MLOAD SWAP3 DUP6 DUP5 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE DUP8 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE CHAINID PUSH1 0x80 DUP5 ADD MSTORE ADDRESS PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 MSTORE PUSH1 0xC0 DUP4 ADD SWAP4 DUP4 DUP6 LT SWAP1 DUP6 GT OR PUSH3 0x29B JUMPI POP DUP3 DUP6 MSTORE DUP2 MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH1 0x32 PUSH1 0x8 SSTORE DUP6 ISZERO PUSH3 0x266 JUMPI POP POP DUP5 ISZERO PUSH3 0x232 JUMPI POP PUSH2 0x160 SWAP3 DUP4 MSTORE PUSH2 0x180 SWAP4 DUP5 MSTORE MLOAD SWAP4 PUSH2 0x246C SWAP6 DUP7 PUSH3 0x679 DUP8 CODECOPY PUSH1 0x80 MLOAD DUP7 PUSH2 0x1FBA ADD MSTORE PUSH1 0xA0 MLOAD DUP7 PUSH2 0x2085 ADD MSTORE PUSH1 0xC0 MLOAD DUP7 PUSH2 0x1F84 ADD MSTORE PUSH1 0xE0 MLOAD DUP7 PUSH2 0x2009 ADD MSTORE MLOAD DUP6 PUSH2 0x202F ADD MSTORE MLOAD DUP5 PUSH2 0xD1E ADD MSTORE MLOAD DUP4 PUSH2 0xD47 ADD MSTORE MLOAD DUP3 DUP2 DUP2 PUSH2 0x115 ADD MSTORE DUP2 DUP2 PUSH2 0x73A ADD MSTORE DUP2 DUP2 PUSH2 0x77E ADD MSTORE DUP2 DUP2 PUSH2 0x7DC ADD MSTORE DUP2 DUP2 PUSH2 0x867 ADD MSTORE DUP2 DUP2 PUSH2 0x8EC ADD MSTORE PUSH2 0x1365 ADD MSTORE MLOAD DUP2 DUP2 DUP2 PUSH2 0x2AE ADD MSTORE DUP2 DUP2 PUSH2 0x8AA ADD MSTORE PUSH2 0x13C6 ADD MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP2 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A590819995959081A59 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x104 PUSH17 0x707974682061646472657373207A65726F PUSH1 0x78 SHL SWAP2 PUSH1 0x64 SWAP5 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xE4 DUP3 ADD MSTORE ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x2B4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 DUP2 LT ISZERO PUSH3 0x383 JUMPI POP PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x322 JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x313 JUMPI POP OR SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x0 NOT SWAP2 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH3 0x369 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH3 0x345 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x2B4 JUMPI PUSH1 0x2 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x4B8 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x4A2 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x468 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x3FC JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x3F0 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x3D9 JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND PUSH1 0x2 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x44D JUMPI POP POP POP LT PUSH3 0x433 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x425 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x412 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0x495 JUMPI POP POP PUSH3 0x3BB JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x485 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x3A8 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 DUP3 DUP2 LT ISZERO PUSH3 0x553 JUMPI POP SWAP1 PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x4F2 JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x313 JUMPI POP OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH3 0x539 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH3 0x515 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x2B4 JUMPI PUSH1 0x3 SWAP3 DUP4 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x66D JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x4A2 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x634 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x5CB JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x5BF JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP5 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x5AA JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x619 JUMPI POP POP POP LT PUSH3 0x600 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP7 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x5F3 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x5E0 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0x660 JUMPI POP POP PUSH3 0x58C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x650 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x579 JUMP INVALID PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 MSTORE PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11DFCA5D EQ PUSH2 0x14A9 JUMPI DUP1 PUSH4 0x31E2A65C EQ PUSH2 0x1484 JUMPI DUP1 PUSH4 0x5F5443A5 EQ PUSH2 0x1324 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12C5 JUMPI DUP1 PUSH4 0x78AF1D55 EQ PUSH2 0xEDE JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0xEA2 JUMPI DUP1 PUSH4 0x83302A6F EQ PUSH2 0xE14 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0xD06 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCDD JUMPI DUP1 PUSH4 0x91F12218 EQ PUSH2 0xCA1 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0xC1D JUMPI DUP1 PUSH4 0xA275D666 EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xC6255626 EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0xC9325D6C EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xD3C7C2C7 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xE83D086F EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xEF1774A2 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xF6954A13 EQ PUSH2 0x14D JUMPI PUSH4 0xF98D06F0 EQ PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0xA0 MLOAD DUP1 REVERT JUMPDEST PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH2 0x163 PUSH2 0x171A JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x16F JUMPI PUSH1 0xA0 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4D757374206465706F736974203E203 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x151F JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x171A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0xA0 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x30B DUP3 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST DUP1 DUP4 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 PUSH1 0x4 PUSH1 0xA0 MLOAD MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0xA0 MLOAD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x3CA JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 ADD SWAP4 DUP2 DUP5 MSTORE MLOAD DUP1 SWAP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP4 PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 SWAP2 PUSH1 0xA0 MLOAD SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x37B JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x40 DUP1 PUSH2 0x3B4 DUP6 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP9 DUP8 ADD MSTORE DUP6 ADD SWAP1 PUSH2 0x1562 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x3 DUP7 PUSH1 0x1 SWAP3 PUSH1 0x40 SWAP10 SWAP9 SWAP10 MLOAD PUSH2 0x3DF DUP2 PUSH2 0x16C3 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP7 SLOAD AND DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x404 DUP2 PUSH2 0x3FD DUP2 DUP10 DUP12 ADD PUSH2 0x162D JUMP JUMPDEST SUB DUP3 PUSH2 0x16F9 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP6 SWAP5 SWAP6 PUSH2 0x33F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x45A PUSH2 0x151F JUMP JUMPDEST AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x493 PUSH2 0x3FD PUSH2 0x47F PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x162D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1562 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH2 0x4BE SWAP1 PUSH2 0x15A2 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x4E7 DUP5 PUSH2 0x4E0 DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x162D JUMP JUMPDEST SUB DUP6 PUSH2 0x16F9 JUMP JUMPDEST ADD SLOAD PUSH2 0x505 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE PUSH1 0x60 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0x1562 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH2 0x523 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x147 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x147 JUMPI PUSH2 0x555 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1535 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xA4 CALLDATALOAD GT PUSH2 0x147 JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0xA4 CALLDATALOAD ADD SLT ISZERO PUSH2 0x147 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xA4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT PUSH2 0x147 JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0xA4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x5 SHL PUSH1 0xA4 CALLDATALOAD ADD ADD GT PUSH2 0x147 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xC4 CALLDATALOAD AND PUSH1 0xC4 CALLDATALOAD SUB PUSH2 0x147 JUMPI PUSH2 0x5B7 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD TIMESTAMP GT PUSH2 0xBE4 JUMPI PUSH1 0xA0 DUP1 MLOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5E8 SWAP1 ISZERO ISZERO PUSH2 0x19EF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x7F6F794C7FCB551753890B40C47E50CA6B3742713F342E7827073A27F687F46 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 MSTORE DUP3 PUSH1 0xE0 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xE0 DUP6 ADD GT OR PUSH2 0xB03 JUMPI PUSH2 0x6BE PUSH2 0x6C4 SWAP3 PUSH1 0x42 DUP6 PUSH1 0xE0 PUSH2 0x6CC SWAP8 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x69E PUSH2 0x1F81 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP3 CALLDATASIZE SWAP2 PUSH2 0x1943 JUMP JUMPDEST SWAP1 PUSH2 0x1EBA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1DA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND SUB PUSH2 0xBAB JUMPI PUSH1 0xA0 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 PUSH1 0x0 NOT DUP3 EQ PUSH2 0xB94 JUMPI POP PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 DUP3 DUP1 PUSH2 0x736 PUSH1 0xA4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x24 PUSH1 0xA4 CALLDATALOAD ADD PUSH1 0x4 DUP5 ADD PUSH2 0x1A33 JUMP JUMPDEST SUB DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xAC0 JUMPI PUSH1 0xA0 MLOAD SWAP3 PUSH2 0xB60 JUMPI JUMPDEST POP DUP2 CALLVALUE LT PUSH2 0xB1B JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO PUSH2 0x147 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0xA0 MLOAD DUP2 DUP1 PUSH2 0x7D7 PUSH1 0xA4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x24 PUSH1 0xA4 CALLDATALOAD ADD PUSH1 0x4 DUP5 ADD PUSH2 0x1A33 JUMP JUMPDEST SUB DUP2 DUP7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xAEC JUMPI JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 DUP1 PUSH2 0x863 PUSH4 0x52571AF PUSH1 0xE5 SHL SWAP6 DUP7 DUP4 MSTORE PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0x4 DUP5 ADD SWAP1 SWAP3 SWAP2 PUSH4 0xFFFFFFFF PUSH1 0x20 SWAP2 PUSH1 0x40 DUP5 ADD SWAP6 DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xAC0 JUMPI PUSH1 0xA0 MLOAD SWAP2 PUSH2 0xACD JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x0 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x80 DUP3 PUSH1 0x44 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xAC0 JUMPI PUSH2 0x92E SWAP3 PUSH1 0xA0 MLOAD SWAP3 PUSH2 0xA8F JUMPI JUMPDEST POP PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x2128 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x93D PUSH1 0x8 SLOAD DUP4 PUSH2 0x1B2E JUMP JUMPDEST DIV SWAP3 PUSH2 0x949 DUP5 DUP4 PUSH2 0x1B77 JUMP JUMPDEST SWAP2 SELFBALANCE LT PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP4 ADD MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x64 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x423 JUMPI PUSH1 0x40 MSTORE PUSH2 0x9C9 SWAP2 PUSH2 0x9B3 SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x9BD DUP4 DUP6 PUSH2 0x20AB JUMP JUMPDEST DUP5 PUSH2 0xA3B JUMPI JUMPDEST CALLVALUE PUSH2 0x1B77 JUMP JUMPDEST DUP1 PUSH2 0xA2B JUMPI JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x44 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 AND SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH32 0x6EFCED4ED44FB06EAED2FFEC26C5392C1B03A2BA58CA72E7AF5B738826CD4CEC SWAP1 PUSH1 0x60 SWAP1 LOG4 PUSH1 0x1 DUP1 SSTORE PUSH1 0xA0 MLOAD DUP1 RETURN JUMPDEST PUSH2 0xA35 SWAP1 CALLER PUSH2 0x20AB JUMP JUMPDEST DUP4 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0xA45 DUP6 CALLER PUSH2 0x20AB JUMP JUMPDEST PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742043465820696E20636F6E747261637400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xAB2 SWAP2 SWAP3 POP PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0xAB9 JUMPI JUMPDEST PUSH2 0xAAA DUP2 DUP4 PUSH2 0x16F9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x922 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 MLOAD DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xAE6 SWAP2 POP PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0xAB9 JUMPI PUSH2 0xAAA DUP2 DUP4 PUSH2 0x16F9 JUMP JUMPDEST DUP5 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xB03 JUMPI PUSH1 0x40 MSTORE DUP3 PUSH2 0x811 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0xA0 MLOAD MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0xA0 MLOAD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742050797468207570646174652066656500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB8C JUMPI JUMPDEST DUP2 PUSH2 0xB7C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x16F9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x147 JUMPI MLOAD SWAP1 DUP3 PUSH2 0x774 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB6F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL SWAP1 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0xA0 MLOAD PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14DA59DB985D1D5C9948195E1C1A5C9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH2 0xC36 PUSH2 0x151F JUMP JUMPDEST PUSH2 0xC3E PUSH2 0x171A JUMP JUMPDEST PUSH2 0xC46 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0xB03 JUMPI PUSH1 0x40 SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0xC97 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0xA0 MLOAD DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCC2 PUSH2 0x151F JUMP JUMPDEST AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH2 0xD42 PUSH32 0x0 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0xD6B PUSH32 0x0 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH2 0xB03 JUMPI SWAP2 DUP2 PUSH2 0xDC5 DUP6 SWAP5 PUSH2 0xDB7 SWAP8 SWAP7 PUSH1 0x40 MSTORE PUSH1 0xA0 MLOAD DUP5 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0xF PUSH1 0xF8 SHL DUP10 MSTORE PUSH1 0xE0 DUP6 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD SWAP1 PUSH2 0x1562 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x1562 JUMP JUMPDEST SWAP2 CHAINID PUSH1 0x60 DUP8 ADD MSTORE ADDRESS PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 MLOAD PUSH1 0xA0 DUP8 ADD MSTORE DUP6 DUP4 SUB PUSH1 0xC0 DUP8 ADD MSTORE MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP3 SWAP2 PUSH1 0xA0 MLOAD JUMPDEST DUP3 DUP2 LT PUSH2 0xDFD JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xDEE JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xE30 PUSH2 0x171A JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT PUSH2 0xE6E JUMPI PUSH1 0x20 DUP2 PUSH32 0x33E1D5145944D624B86865712FC54C442CDFDEEBF537007CB7809BCCB0126DA5 SWAP3 PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0xA0 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEC3 PUSH2 0x151F JUMP JUMPDEST AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH2 0xEF7 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP2 GT PUSH2 0x147 JUMPI PUSH2 0xF1A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1535 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x44 CALLDATALOAD PUSH2 0xF27 PUSH2 0x171A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x128F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP5 DUP6 ISZERO PUSH2 0x1253 JUMPI DUP6 PUSH1 0xA0 MLOAD MSTORE PUSH1 0x20 SWAP3 PUSH1 0x5 DUP5 MSTORE PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 SLOAD PUSH2 0x1219 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF63 DUP3 PUSH2 0x16C3 JUMP JUMPDEST DUP8 DUP3 MSTORE PUSH2 0xF71 CALLDATASIZE DUP8 DUP10 PUSH2 0x1943 JUMP JUMPDEST SWAP1 DUP6 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 DUP6 DUP3 MSTORE PUSH1 0x4 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x11EC JUMPI PUSH2 0xFA9 SWAP1 PUSH1 0x1 PUSH1 0x80 MSTORE PUSH1 0x1 DUP2 ADD PUSH1 0x4 SSTORE PUSH2 0x15A2 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0x1203 JUMPI MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE PUSH1 0x80 MLOAD DUP4 ADD SWAP2 MLOAD SWAP2 DUP3 MLOAD DUP12 DUP2 GT PUSH2 0x11EC JUMPI PUSH2 0xFED DUP2 PUSH2 0xFE7 DUP5 SLOAD PUSH2 0x15F3 JUMP JUMPDEST DUP5 PUSH2 0x197A JUMP JUMPDEST PUSH1 0xA0 MLOAD SWAP4 DUP9 SWAP5 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x117E JUMPI POP PUSH1 0x2 SWAP5 DUP3 SWAP2 PUSH1 0xA0 MLOAD SWAP3 PUSH2 0x1173 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD SWAP2 ADD SSTORE DUP6 PUSH1 0xA0 MLOAD MSTORE PUSH1 0x5 DUP4 MSTORE PUSH1 0xA0 MLOAD DUP3 PUSH1 0x40 DUP3 KECCAK256 SSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP8 DUP6 GT PUSH2 0x115F JUMPI POP POP PUSH2 0x105D DUP4 PUSH2 0x1057 DUP9 SLOAD PUSH2 0x15F3 JUMP JUMPDEST DUP9 PUSH2 0x197A JUMP JUMPDEST PUSH1 0xA0 MLOAD SWAP6 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x10DC JUMPI DUP4 PUSH32 0x7EE5B861AD236224C1FB776C839C3959F7A0903D4E4DCDE63306821C6FF60AA2 SWAP7 SWAP8 PUSH1 0xA0 MLOAD SWAP2 PUSH2 0x10D1 JUMPI JUMPDEST POP DUP5 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP7 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x10C4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 PUSH2 0x19CE JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG2 PUSH1 0xA0 MLOAD DUP1 RETURN JUMPDEST SWAP1 POP DUP6 ADD CALLDATALOAD DUP9 PUSH2 0x1099 JUMP JUMPDEST DUP1 DUP8 MSTORE PUSH1 0xA0 MLOAD DUP4 DUP2 KECCAK256 PUSH1 0x80 MLOAD PUSH1 0x1F NOT DUP8 AND SWAP10 SWAP1 SWAP3 JUMPDEST DUP11 DUP2 LT PUSH2 0x114A JUMPI POP DUP7 PUSH32 0x7EE5B861AD236224C1FB776C839C3959F7A0903D4E4DCDE63306821C6FF60AA2 SWAP10 SWAP11 LT PUSH2 0x1130 JUMPI JUMPDEST POP POP DUP5 DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x10AD JUMP JUMPDEST DUP8 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x1123 JUMP JUMPDEST DUP9 DUP3 ADD CALLDATALOAD DUP4 SSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 DUP7 ADD PUSH2 0x10F1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL SWAP1 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0xA0 MLOAD REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0x100D JUMP JUMPDEST SWAP3 SWAP4 SWAP5 DUP5 PUSH1 0x1F NOT DUP5 AND SWAP5 MSTORE PUSH1 0xA0 MLOAD SWAP2 DUP11 DUP4 KECCAK256 SWAP3 SWAP5 PUSH1 0x80 MLOAD SWAP6 JUMPDEST DUP13 DUP3 DUP3 LT PUSH2 0x11D8 JUMPI POP POP SWAP1 DUP5 PUSH1 0x2 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x11BF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1022 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x11B2 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE SWAP5 DUP8 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x1197 JUMP JUMPDEST DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0xA0 MLOAD MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0xA0 MLOAD REVERT JUMPDEST DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0xA0 MLOAD MSTORE PUSH1 0xA0 MLOAD DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x13 DUP2 DUP5 ADD MSTORE PUSH19 0x151BDAD95B88185B1C9958591E481859191959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x15 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF DUP2 DUP8 ADD MSTORE PUSH15 0x125B9D985B1A590819995959081251 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH2 0x12E0 PUSH2 0x171A JUMP JUMPDEST PUSH1 0xA0 MLOAD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH2 0x133D PUSH2 0x151F JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 SLOAD SWAP1 PUSH2 0x1363 DUP3 ISZERO ISZERO PUSH2 0x19EF JUMP JUMPDEST PUSH32 0x0 AND SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH4 0x96834AD3 PUSH1 0xE0 SHL SWAP2 DUP3 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xAC0 JUMPI DUP6 SWAP2 PUSH1 0xA0 MLOAD SWAP5 PUSH2 0x1465 JUMPI JUMPDEST POP PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 DUP3 MSTORE PUSH32 0x0 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xAC0 JUMPI PUSH2 0x140B SWAP5 PUSH1 0xA0 MLOAD SWAP5 PUSH2 0x1446 JUMPI JUMPDEST POP POP PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x141A PUSH1 0x8 SLOAD DUP4 PUSH2 0x1B2E JUMP JUMPDEST DIV SWAP1 PUSH2 0x493 PUSH2 0x1429 DUP4 DUP4 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x145D SWAP3 SWAP5 POP DUP1 RETURNDATASIZE LT PUSH2 0xAB9 JUMPI PUSH2 0xAAA DUP2 DUP4 PUSH2 0x16F9 JUMP JUMPDEST SWAP2 DUP5 DUP1 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x147D SWAP2 SWAP5 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0xAB9 JUMPI PUSH2 0xAAA DUP2 DUP4 PUSH2 0x16F9 JUMP JUMPDEST SWAP3 DUP7 PUSH2 0x13B8 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0x8AC7230489E80000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x14C5 PUSH2 0x171A JUMP JUMPDEST PUSH2 0x14CD PUSH2 0x1B84 JUMP JUMPDEST DUP1 SELFBALANCE LT PUSH2 0x14DE JUMPI PUSH2 0xC97 SWAP1 CALLER PUSH2 0x20AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x151A JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x151A JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x151A JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x151A JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x158E JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x156D JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x15DD JUMPI PUSH1 0x3 SWAP1 PUSH1 0x4 PUSH1 0x0 MSTORE MUL PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1623 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x160D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1602 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x163E DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x16A0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1660 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x168C JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x165A JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x1675 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x423 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x423 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x423 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x172E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x17B0 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x179E JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1794 DUP4 PUSH2 0x16DE JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x2 SLOAD DUP2 PUSH1 0x0 PUSH2 0x17C3 DUP4 PUSH2 0x15F3 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x184C JUMPI POP PUSH1 0x1 EQ PUSH2 0x17ED JUMPI JUMPDEST POP PUSH2 0x17EA SWAP3 POP SUB DUP3 PUSH2 0x16F9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP5 DUP4 LT PUSH2 0x1831 JUMPI POP PUSH2 0x17EA SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x17DD JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x1818 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x17EA SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x17DD JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x1890 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x179E JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1794 DUP4 PUSH2 0x16DE JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x3 SLOAD DUP2 PUSH1 0x0 PUSH2 0x18A3 DUP4 PUSH2 0x15F3 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x184C JUMPI POP PUSH1 0x1 EQ PUSH2 0x18C9 JUMPI POP PUSH2 0x17EA SWAP3 POP SUB DUP3 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP5 DUP4 LT PUSH2 0x190D JUMPI POP PUSH2 0x17EA SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x17DD JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x423 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x194F DUP3 PUSH2 0x1928 JUMP JUMPDEST SWAP2 PUSH2 0x195D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x16F9 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x151A JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1988 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x19C4 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x19B9 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19AD JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x19A4 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x19F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP2 DUP6 ADD DUP3 DUP7 MSTORE MSTORE PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 DUP5 PUSH1 0x0 SWAP3 JUMPDEST DUP6 DUP5 LT PUSH2 0x1A63 JUMPI POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 PUSH1 0x3F NOT DUP3 DUP3 SUB ADD DUP5 MSTORE DUP8 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x151A JUMPI DUP4 ADD DUP7 DUP2 ADD SWAP2 SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x151A JUMPI DUP1 CALLDATASIZE SUB DUP4 SGT PUSH2 0x151A JUMPI PUSH2 0x1AB1 DUP9 SWAP3 DUP4 SWAP3 PUSH1 0x1 SWAP6 PUSH2 0x19CE JUMP JUMPDEST SWAP10 ADD SWAP5 ADD SWAP5 ADD SWAP3 SWAP6 SWAP5 SWAP4 SWAP2 SWAP1 PUSH2 0x1A52 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x80 SWAP2 SUB SLT PUSH2 0x151A JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x80 DUP4 ADD DUP2 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x423 JUMPI PUSH1 0x40 MSTORE DUP2 MLOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0x151A JUMPI DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x151A JUMPI PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD SWAP1 DUP2 PUSH1 0x3 SIGNEXTEND DUP3 SUB PUSH2 0x151A JUMPI PUSH1 0x60 SWAP2 PUSH1 0x40 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1B41 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1B61 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1B41 JUMPI JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1B95 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1C39 PUSH1 0x40 MLOAD PUSH2 0x1BF2 DUP2 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP3 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP6 DUP4 ADD MSTORE PUSH1 0x0 DUP1 DUP6 DUP8 DUP3 SWAP8 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL PUSH2 0x1C33 PUSH2 0x1CD3 JUMP JUMPDEST SWAP2 PUSH2 0x1D03 JUMP JUMPDEST DUP1 MLOAD SWAP2 DUP3 ISZERO SWAP2 DUP5 DUP4 ISZERO PUSH2 0x1CAB JUMPI JUMPDEST POP POP POP SWAP1 POP ISZERO PUSH2 0x1C54 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP4 DUP2 DUP1 SWAP5 POP ADD SUB SLT PUSH2 0x1CCF JUMPI DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x144 JUMPI POP DUP1 CODESIZE DUP1 DUP5 PUSH2 0x1C47 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1CFE JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1CE4 DUP3 PUSH2 0x1928 JUMP JUMPDEST SWAP2 PUSH2 0x1CF2 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x16F9 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x1D65 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x1D17 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x1D20 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1D78 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1D9C SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1562 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x1EA4 JUMPI DUP1 PUSH2 0x1DB1 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1DFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1E4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x1E54 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x41 DUP2 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1EE8 JUMPI PUSH2 0x1EE4 SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT PUSH2 0x1F75 JUMPI SWAP2 PUSH1 0x80 SWAP5 SWAP4 SWAP2 PUSH1 0xFF PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1F68 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1F62 JUMPI SWAP2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x3 SWAP1 JUMP JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2082 JUMPI JUMPDEST ISZERO PUSH2 0x1FDC JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x423 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0x20BC PUSH2 0x1CD3 JUMP JUMPDEST POP ISZERO PUSH2 0x20C4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10D196081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x3 SIGNEXTEND PUSH4 0x7FFFFFFF NOT DUP2 EQ PUSH2 0x1B41 JUMPI PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x4D DUP2 GT PUSH2 0x1B41 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP3 SWAP4 PUSH1 0x0 SWAP1 DUP2 DUP2 MLOAD PUSH1 0x7 SIGNEXTEND SGT ISZERO PUSH2 0x23FB JUMPI DUP2 DUP7 MLOAD PUSH1 0x7 SIGNEXTEND SGT ISZERO PUSH2 0x23C2 JUMPI DUP4 ISZERO PUSH2 0x238F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP7 PUSH1 0x4 SWAP6 PUSH1 0x20 SWAP6 SWAP2 SWAP3 SWAP1 SWAP2 DUP7 SWAP1 DUP3 SWAP1 DUP10 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2385 JUMPI DUP6 SWAP2 PUSH2 0x234A JUMPI JUMPDEST POP DUP9 DUP5 ADD MLOAD PUSH1 0x3 SIGNEXTEND SWAP2 DUP6 DUP4 SLT ISZERO PUSH2 0x22FC JUMPI PUSH2 0x21D5 PUSH2 0x21BE PUSH2 0x21B8 PUSH1 0xFF SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 SWAP10 MLOAD AND SWAP1 PUSH2 0x1B2E JUMP JUMPDEST SWAP5 PUSH2 0x20FF JUMP JUMPDEST SWAP4 PUSH2 0x21CF PUSH4 0xFFFFFFFF SWAP6 DUP7 AND PUSH2 0x2114 JUMP JUMPDEST SWAP1 PUSH2 0x1B2E JUMP JUMPDEST SWAP2 AND PUSH1 0x4D DUP2 GT PUSH2 0x22E9 JUMPI SWAP1 PUSH2 0x21ED SWAP2 PUSH1 0xA EXP SWAP1 PUSH2 0x1B57 JUMP JUMPDEST SWAP3 DUP9 DUP4 ADD MLOAD PUSH1 0x3 SIGNEXTEND SWAP3 DUP6 DUP5 SLT ISZERO PUSH2 0x22A8 JUMPI SWAP2 PUSH2 0x2213 PUSH2 0x21CF SWAP3 PUSH2 0x2219 SWAP6 SWAP5 MLOAD AND SWAP4 PUSH2 0x20FF JUMP JUMPDEST AND PUSH2 0x2114 JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2295 JUMPI POP SWAP1 PUSH2 0x223F SWAP2 PUSH2 0x1B57 JUMP JUMPDEST SWAP4 PUSH8 0x8AC7230489E80000 DUP6 GT PUSH2 0x2254 JUMPI POP POP POP JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178204346582070657220737761700000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP9 DUP9 DUP1 DUP14 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E657870656374656420706F736974697665206578706F20666F7220434658 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 DUP9 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP10 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP9 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E657870656374656420706F736974697665206578706F20666F7220746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B7 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x237E JUMPI JUMPDEST PUSH2 0x2361 DUP2 DUP4 PUSH2 0x16F9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x237A JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x237A JUMPI CODESIZE PUSH2 0x2189 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2357 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x416D6F756E74207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420434658207072696365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C696420746F6B656E207072696365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x2DECA9E2DA EXTCODEHASH 0x2B BALANCE 0xD6 0xDB PUSH14 0xE9C40CB869009B2514E858C3C03F 0xBE STATICCALL RETURNDATACOPY 0xEF SGT CHAINID PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"670:7258:19:-:0;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;-1:-1:-1;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;;670:7258:19;;;;;;-1:-1:-1;670:7258:19;;734:10:8;-1:-1:-1;;;;;;670:7258:19;;;;;;-1:-1:-1;;670:7258:19;2566:40:0;-1:-1:-1;;2566:40:0;670:7258:19;;;3251:45:13;;;:::i;:::-;3243:53;;;;;3317:51;;;:::i;:::-;3306:62;;;;;670:7258:19;3392:22:13;;3378:36;;;;670:7258:19;3441:25:13;;3424:42;;;;;;3494:13;670:7258:19;3477:30:13;670:7258:19;;4054:81:13;;;;1929:95;;;;;;;;;;;;3494:13;1929:95;;;;4129:4;670:7258:19;1929:95:13;;;670:7258:19;4054:81:13;;1929:95;670:7258:19;;;;;;;;;;;;;;;;;;4044:92:13;;1929:95;3517:48;4129:4;1929:95;3575:27;1276:2:19;;670:7258;1919:19;;670:7258;;1978:27;;;;670:7258;;2035:19;;;;;2064:28;;;;670:7258;;;;;;;;1929:95:13;670:7258:19;;;;;;;;;;;1929:95:13;670:7258:19;;;;;3378:36:13;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;:::o;2895:341:9:-;670:7258:19;;3040:2:9;;3018:24;;;3040:2;;;670:7258:19;1835:2:9;670:7258:19;;1821:16:9;1817:72;;670:7258:19;;;;;;;;;;;;1930:36:9;;3058:27;:::o;670:7258:19:-;;;;;;;;;;1930:36:9;3058:27;:::o;1817:72::-;670:7258:19;;;1860:18:9;;;;;;;;;;;670:7258:19;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;1835:2:9;670:7258:19;;;;;;;1860:18:9;;;;670:7258:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;3014:216:9;670:7258:19;-1:-1:-1;;;;;670:7258:19;;;;3282:13:13;670:7258:19;;;;;;;;;;;;;;3014:216:9;670:7258:19;;;;;;;;;;;3014:216:9;670:7258:19;;;;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;;;;;;3282:13:13;670:7258:19;1371:66:9;3176:43;:::o;670:7258:19:-;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;3282:13:13;-1:-1:-1;670:7258:19;;-1:-1:-1;670:7258:19;;-1:-1:-1;670:7258:19;;;;;;;;;;;;;;;;;;;;;3282:13:13;670:7258:19;1371:66:9;3176:43;:::o;670:7258:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;;3282:13:13;-1:-1:-1;670:7258:19;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;-1:-1:-1;670:7258:19;;;;;;;;2895:341:9;670:7258:19;;3040:2:9;;670:7258:19;3018:24:9;;;3040:2;;;670:7258:19;;1835:2:9;670:7258:19;;1821:16:9;1817:72;;670:7258:19;;;;;;;;;;;;1930:36:9;;3058:27;:::o;1817:72::-;670:7258:19;;;1860:18:9;;;;;;;;;;;670:7258:19;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;1835:2:9;670:7258:19;;;;;;;1860:18:9;;;;670:7258:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;3014:216:9;-1:-1:-1;;;;;670:7258:19;;;;3351:16:13;670:7258:19;;;;;;;;;;;;;;;;3014:216:9;670:7258:19;;;;;;;;;;;3014:216:9;670:7258:19;;;;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;;;;;;;;1371:66:9;3176:43;:::o;670:7258:19:-;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;-1:-1:-1;670:7258:19;;-1:-1:-1;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;1371:66:9;3176:43;:::o;670:7258:19:-;;;-1:-1:-1;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;;;-1:-1:-1;670:7258:19;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5407,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":6467,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":5429,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_struct_Price_fromMemory":{"entryPoint":6850,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes_calldata_dyn_calldata":{"entryPoint":6707,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes32_uint32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":5474,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":6606,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":5677,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_allocation_size_string":{"entryPoint":6440,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_uint256":{"entryPoint":6999,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_rational_by_uint32":{"entryPoint":8468,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":6958,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":7031,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":6522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5619,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":7379,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":5881,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_22236":{"entryPoint":5827,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_28109":{"entryPoint":5854,"id":null,"parameterSlots":1,"returnSlots":0},"fun_calculateCfxAmount":{"entryPoint":8488,"id":4021,"parameterSlots":4,"returnSlots":1},"fun_callOptionalReturn":{"entryPoint":7130,"id":668,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":5914,"id":54,"parameterSlots":0,"returnSlots":0},"fun_domainSeparatorV4":{"entryPoint":8065,"id":2117,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":7044,"id":182,"parameterSlots":0,"returnSlots":0},"fun_sendCfx":{"entryPoint":8363,"id":3884,"parameterSlots":2,"returnSlots":0},"fun_throwError":{"entryPoint":7584,"id":1686,"parameterSlots":1,"returnSlots":0},"fun_toStringWithFallback":{"entryPoint":6254,"id":1261,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback_22239":{"entryPoint":6002,"id":1261,"parameterSlots":1,"returnSlots":1},"fun_tryRecover":{"entryPoint":7922,"id":1900,"parameterSlots":4,"returnSlots":2},"fun_tryRecover_1732":{"entryPoint":7866,"id":1732,"parameterSlots":2,"returnSlots":2},"fun_verifyCallResultFromTarget":{"entryPoint":7427,"id":1002,"parameterSlots":4,"returnSlots":1},"negate_int32":{"entryPoint":8447,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_a8a5":{"entryPoint":6639,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_TokenInfo_dyn":{"entryPoint":5538,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"2015":[{"length":32,"start":8122}],"2017":[{"length":32,"start":8325}],"2019":[{"length":32,"start":8068}],"2021":[{"length":32,"start":8201}],"2023":[{"length":32,"start":8239}],"2026":[{"length":32,"start":3358}],"2029":[{"length":32,"start":3399}],"3442":[{"length":32,"start":277},{"length":32,"start":1850},{"length":32,"start":1918},{"length":32,"start":2012},{"length":32,"start":2151},{"length":32,"start":2284},{"length":32,"start":4965}],"3444":[{"length":32,"start":686},{"length":32,"start":2218},{"length":32,"start":5062}]},"linkReferences":{},"object":"60c0604052600436101561001257600080fd5b600060a05260003560e01c806311dfca5d146114a957806331e2a65c146114845780635f5443a514611324578063715018a6146112c557806378af1d5514610ede5780637ecebe0014610ea257806383302a6f14610e1457806384b0196e14610d065780638da5cb5b14610cdd57806391f1221814610ca15780639e281a9814610c1d578063a275d6661461050f578063c625562614610497578063c9325d6c14610439578063d3c7c2c7146102d1578063e83d086f14610294578063ef1774a214610274578063f2fde38b146101a7578063f6954a131461014d5763f98d06f0146100fd57600080fd5b346101475760a05180600319360112610144576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80fd5b60a05180fd5b60a051806003193601126101445761016361171a565b341561016f5760a05180f35b60405162461bcd60e51b815260206004820152601060248201526f04d757374206465706f736974203e20360841b6044820152606490fd5b34610147576020366003190112610147576101c061151f565b6101c861171a565b6001600160a01b0390811690811561022057600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360a05180f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346101475760a05180600319360112610144576020600854604051908152f35b346101475760a051806003193601126101445760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346101475760a05180600319360112610144576004546001600160401b038111610423576040519060209061030b828260051b01846116f9565b8083528183019081600460a051527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b60a051915b8383106103ca5750505050604051918083019381845251809452604083019360408160051b850101929160a051955b82871061037b5785850386f35b909192938280600192603f19898203018552875190848060a01b0382511681526040806103b48585015160608088870152850190611562565b930151910152960192019601959291909261036e565b6003866001926040999899516103df816116c3565b848060a01b038654168152604051610404816103fd81898b0161162d565b03826116f9565b838201526002860154604082015281520192019201919095949561033f565b634e487b7160e01b600052604160045260246000fd5b34610147576020366003190112610147576001600160a01b0361045a61151f565b1660a0515260066020526104936103fd61047f604060a051206040519283809261162d565b604051918291602083526020830190611562565b0390f35b3461014757602036600319011261014757600435600454811015610147576104be906115a2565b5060018060a01b038154166002604051926104e7846104e0816001850161162d565b03856116f9565b01546105056040519384938452606060208501526060840190611562565b9060408301520390f35b60e03660031901126101475761052361151f565b6024356001600160a01b0381169003610147576084356001600160401b03811161014757610555903690600401611535565b906001600160401b0360a435116101475736602360a435011215610147576001600160401b0360a43560040135116101475736602460a4356004013560051b60a4350101116101475763ffffffff60c4351660c43503610147576105b7611b84565b6064354211610be45760a080516024356001600160a01b0316905260056020525160409020546105e89015156119ef565b60018060a01b03831660a051526007602052604060a051205491604051927f07f6f794c7fcb551753890b40c47e50ca6b3742713f342e7827073a27f687f46602085015260018060a01b038516604085015260018060a01b03602435166060850152604435608085015260a084015260643560c084015260c083528260e08101106001600160401b0360e085011117610b03576106be6106c49260428560e06106cc97016040526020815191012061069e611f81565b906040519161190160f01b83526002830152602282015220923691611943565b90611eba565b919091611da0565b6001600160a01b03828116911603610bab5760a080516001600160a01b038316905260076020525160408120805490916000198214610b94575060010190556040519063d47eed4560e01b82526020828061073660a43560040135602460a4350160048401611a33565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa918215610ac05760a05192610b60575b50813410610b1b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b1561014757604051631df3cbc560e31b815260a05181806107d760a43560040135602460a4350160048401611a33565b0381867f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af18015610ac057610aec575b5060018060a01b036024351660a051526005602052604060a05120546040516080818061086363052571af60e51b9586835260c435906004840190929163ffffffff6020916040840195845216910152565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610ac05760a05191610acd575b506040519182527f0000000000000000000000000000000000000000000000000000000000000000600483015260c43563ffffffff1660248301526080826044816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610ac05761092e9260a05192610a8f575b50604435602435612128565b61271061093d60085483611b2e565b04926109498483611b77565b914710610a4a57604051906323b872dd60e01b602083015260018060a01b038416602483015230604483015260443560648301526064825260a082018281106001600160401b03821117610423576040526109c9916109b3906024356001600160a01b0316611bda565b6109bd83856120ab565b84610a3b575b34611b77565b80610a2b575b5060408051604435815260208101929092528101929092526001600160a01b036024358116923392909116907f6efced4ed44fb06eaed2ffec26c5392c1b03a2ba58ca72e7af5b738826cd4cec90606090a46001805560a05180f35b610a3590336120ab565b836109cf565b610a4585336120ab565b6109c3565b60405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742043465820696e20636f6e7472616374000000006044820152606490fd5b610ab291925060803d608011610ab9575b610aaa81836116f9565b810190611ac2565b9085610922565b503d610aa0565b6040513d60a051823e3d90fd5b610ae6915060803d608011610ab957610aaa81836116f9565b846108a1565b6001600160401b038111610b035760405282610811565b634e487b7160e01b60a051526041600452602460a051fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420507974682075706461746520666565000000006044820152606490fd5b9091506020813d602011610b8c575b81610b7c602093836116f9565b8101031261014757519082610774565b3d9150610b6f565b634e487b7160e01b9052601160045260a051602490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527014da59db985d1d5c9948195e1c1a5c9959607a1b6044820152606490fd5b3461014757604036600319011261014757610c3661151f565b610c3e61171a565b610c46611b84565b60405163a9059cbb60e01b602082015233602482015260243560448201526044815260808101918183106001600160401b03841117610b0357604092909252610c97916001600160a01b0316611bda565b6001805560a05180f35b34610147576020366003190112610147576001600160a01b03610cc261151f565b1660a0515260056020526020604060a0512054604051908152f35b346101475760a0518060031936011261014457546040516001600160a01b039091168152602090f35b346101475760a0518060031936011261014457610d427f0000000000000000000000000000000000000000000000000000000000000000611772565b610d6b7f000000000000000000000000000000000000000000000000000000000000000061186e565b6040516020808201928284106001600160401b03851117610b03579181610dc58594610db7979660405260a0518452604051978897600f60f81b895260e0858a015260e0890190611562565b908782036040890152611562565b9146606087015230608087015260a05160a087015285830360c0870152519182815201929160a0515b828110610dfd57505050500390f35b835185528695509381019392810192600101610dee565b3461014757602036600319011261014757600435610e3061171a565b6103e88111610e6e576020817f33e1d5145944d624b86865712fc54c442cdfdeebf537007cb7809bccb0126da592600855604051908152a160a05180f35b60405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152606490fd5b34610147576020366003190112610147576001600160a01b03610ec361151f565b1660a0515260076020526020604060a0512054604051908152f35b3461014757606036600319011261014757610ef761151f565b60248035916001600160401b039283811161014757610f1a903690600401611535565b9091604435610f2761171a565b801561128f576001600160a01b03918216948515611253578560a0515260209260058452604060a05120546112195760405190610f63826116c3565b878252610f71368789611943565b908583019182526040830190858252600454680100000000000000008110156111ec57610fa9906001608052600181016004556115a2565b9490946112035751166bffffffffffffffffffffffff60a01b845416178355608051830191519182518b81116111ec57610fed81610fe784546115f3565b8461197a565b60a051938894601f831160011461117e5750600294829160a05192611173575b50508160011b916000199060031b1c19161790555b519101558560a051526005835260a051826040822055600684526040812097851161115f57505061105d8361105788546115f3565b8861197a565b60a05195601f84116001146110dc57837f7ee5b861ad236224c1fb776c839c3959f7a0903d4e4dcde63306821c6ff60aa2969760a051916110d1575b508460011b906000198660031b1c19161790555b6110c46040519485946040865260408601916119ce565b918301520390a260a05180f35b905085013588611099565b80875260a051838120608051601f1987169990925b8a811061114a5750867f7ee5b861ad236224c1fb776c839c3959f7a0903d4e4dcde63306821c6ff60aa2999a10611130575b505084811b0190556110ad565b870135600019600388901b60f8161c191690558880611123565b888201358355918301919086019086016110f1565b634e487b7160e01b9052604160045260a051fd5b015190508d8061100d565b92939484601f198416945260a051918a83209294608051955b8c8282106111d85750509084600298979695949392106111bf575b505050811b019055611022565b015160001960f88460031b161c191690558d80806111b2565b838501518655948701949384019301611197565b85634e487b7160e01b60a05152604160045260a051fd5b85634e487b7160e01b60a0515260a05180600452fd5b60405162461bcd60e51b81526004810185905260138184015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606490fd5b60649060156040519162461bcd60e51b83526020600484015282015274496e76616c696420746f6b656e206164647265737360581b6044820152fd5b60405162461bcd60e51b815260206004820152600f818701526e125b9d985b1a590819995959081251608a1b6044820152606490fd5b346101475760a05180600319360112610144576112e061171a565b60a05180546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b346101475760403660031901126101475761133d61151f565b60018060a01b0380821660a051526005602052604060a0512054906113638215156119ef565b7f00000000000000000000000000000000000000000000000000000000000000001690604051926396834ad360e01b9182855260048501526080938481602481875afa928315610ac057859160a05194611465575b5060246040518096819382527f000000000000000000000000000000000000000000000000000000000000000060048301525afa928315610ac05761140b9460a05194611446575b505060243590612128565b61271061141a60085483611b2e565b04906104936114298383611b77565b604051938493846040919493926060820195825260208201520152565b61145d929450803d10610ab957610aaa81836116f9565b918480611400565b61147d919450823d8411610ab957610aaa81836116f9565b92866113b8565b346101475760a05180600319360112610144576020604051678ac7230489e800008152f35b3461151a57602036600319011261151a576004356114c561171a565b6114cd611b84565b8047106114de57610c9790336120ab565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b600080fd5b600435906001600160a01b038216820361151a57565b9181601f8401121561151a578235916001600160401b03831161151a576020838186019501011161151a57565b919082519283825260005b84811061158e575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161156d565b6004548110156115dd576003906004600052027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015611623575b602083101461160d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611602565b906000929180549161163e836115f3565b9182825260019384811690816000146116a05750600114611660575b50505050565b90919394506000526020928360002092846000945b83861061168c57505050500101903880808061165a565b805485870183015294019385908201611675565b9294505050602093945060ff191683830152151560051b0101903880808061165a565b606081019081106001600160401b0382111761042357604052565b604081019081106001600160401b0382111761042357604052565b90601f801991011681019081106001600160401b0382111761042357604052565b6000546001600160a01b0316330361172e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60ff81146117b05760ff811690601f821161179e5760405191611794836116de565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b506040516002548160006117c3836115f3565b8083529260019081811690811561184c57506001146117ed575b506117ea925003826116f9565b90565b6002600090815291507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b84831061183157506117ea9350508101602001386117dd565b81935090816020925483858901015201910190918492611818565b9050602092506117ea94915060ff191682840152151560051b820101386117dd565b60ff81146118905760ff811690601f821161179e5760405191611794836116de565b506040516003548160006118a3836115f3565b8083529260019081811690811561184c57506001146118c957506117ea925003826116f9565b6003600090815291507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b84831061190d57506117ea9350508101602001386117dd565b819350908160209254838589010152019101909184926118f4565b6001600160401b03811161042357601f01601f191660200190565b92919261194f82611928565b9161195d60405193846116f9565b82948184528183011161151a578281602093846000960137010152565b90601f811161198857505050565b600091825260208220906020601f850160051c830194106119c4575b601f0160051c01915b8281106119b957505050565b8181556001016119ad565b90925082906119a4565b908060209392818452848401376000828201840152601f01601f1916010190565b156119f657565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881b9bdd081dda1a5d195b1a5cdd1959605a1b6044820152606490fd5b9160208181850182865252604084019360408360051b82010194846000925b858410611a63575050505050505090565b90919293949596603f198282030184528735601e198436030181121561151a5783018681019190356001600160401b03811161151a57803603831361151a57611ab1889283926001956119ce565b990194019401929594939190611a52565b9081608091031261151a57604051906001600160401b0360808301818111848210176104235760405281518060070b810361151a5783526020820151908116810361151a5760208301526040810151908160030b820361151a5760609160408401520151606082015290565b81810292918115918404141715611b4157565b634e487b7160e01b600052601160045260246000fd5b8115611b61570490565b634e487b7160e01b600052601260045260246000fd5b91908203918211611b4157565b600260015414611b95576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60018060a01b031690611c39604051611bf2816116de565b6020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af1611c33611cd3565b91611d03565b805191821591848315611cab575b505050905015611c545750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b919381809450010312611ccf57820151908115158203610144575080388084611c47565b5080fd5b3d15611cfe573d90611ce482611928565b91611cf260405193846116f9565b82523d6000602084013e565b606090565b91929015611d655750815115611d17575090565b3b15611d205790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611d785750805190602001fd5b60405162461bcd60e51b815260206004820152908190611d9c906024830190611562565b0390fd5b6005811015611ea45780611db15750565b60018103611dfe5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b60028103611e4b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b600314611e5457565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b906041815114600014611ee857611ee4916020820151906060604084015193015160001a90611ef2565b9091565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311611f755791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15611f685781516001600160a01b03811615611f62579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480612082575b15611fdc577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c081018181106001600160401b038211176104235760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611fb3565b600080809381935af16120bc611cd3565b50156120c457565b60405162461bcd60e51b815260206004820152601360248201527210d196081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b60030b637fffffff198114611b415760000390565b63ffffffff16604d8111611b4157600a0a90565b909193929360009081815160070b13156123fb5781865160070b13156123c257831561238f576040805163313ce56760e01b815290966004956020959192909186908290899082906001600160a01b03165afa90811561238557859161234a575b508884015160030b91858312156122fc576121d56121be6121b860ff936001600160401b038099511690611b2e565b946120ff565b936121cf63ffffffff958616612114565b90611b2e565b9116604d81116122e957906121ed91600a0a90611b57565b928883015160030b92858412156122a857916122136121cf9261221995945116936120ff565b16612114565b91670de0b6b3a76400009182810292818404149015171561229557509061223f91611b57565b93678ac7230489e80000851161225457505050565b5162461bcd60e51b815291820152601860248201527f45786365656473206d6178204346582070657220737761700000000000000000604482015260649150fd5b634e487b7160e01b815260118552602490fd5b60648888808d519262461bcd60e51b845283015260248201527f556e657870656374656420706f736974697665206578706f20666f72204346586044820152fd5b634e487b7160e01b865260118852602486fd5b895162461bcd60e51b8152808901889052602260248201527f556e657870656374656420706f736974697665206578706f20666f7220746f6b60448201526132b760f11b6064820152608490fd5b90508581813d831161237e575b61236181836116f9565b8101031261237a575160ff8116810361237a5738612189565b8480fd5b503d612357565b89513d87823e3d90fd5b60405162461bcd60e51b815260206004820152600b60248201526a416d6f756e74207a65726f60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c69642043465820707269636560781b6044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272496e76616c696420746f6b656e20707269636560681b6044820152606490fdfea2646970667358221220642deca9e2da3f2b31d6db6de9c40cb869009b2514e858c3c03fbefa3eef134664736f6c63430008140033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 MSTORE PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11DFCA5D EQ PUSH2 0x14A9 JUMPI DUP1 PUSH4 0x31E2A65C EQ PUSH2 0x1484 JUMPI DUP1 PUSH4 0x5F5443A5 EQ PUSH2 0x1324 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12C5 JUMPI DUP1 PUSH4 0x78AF1D55 EQ PUSH2 0xEDE JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0xEA2 JUMPI DUP1 PUSH4 0x83302A6F EQ PUSH2 0xE14 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0xD06 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCDD JUMPI DUP1 PUSH4 0x91F12218 EQ PUSH2 0xCA1 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0xC1D JUMPI DUP1 PUSH4 0xA275D666 EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xC6255626 EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0xC9325D6C EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xD3C7C2C7 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xE83D086F EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xEF1774A2 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xF6954A13 EQ PUSH2 0x14D JUMPI PUSH4 0xF98D06F0 EQ PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0xA0 MLOAD DUP1 REVERT JUMPDEST PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH2 0x163 PUSH2 0x171A JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x16F JUMPI PUSH1 0xA0 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4D757374206465706F736974203E203 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x151F JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x171A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0xA0 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x30B DUP3 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST DUP1 DUP4 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 PUSH1 0x4 PUSH1 0xA0 MLOAD MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0xA0 MLOAD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x3CA JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 ADD SWAP4 DUP2 DUP5 MSTORE MLOAD DUP1 SWAP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP4 PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 SWAP2 PUSH1 0xA0 MLOAD SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x37B JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x40 DUP1 PUSH2 0x3B4 DUP6 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP9 DUP8 ADD MSTORE DUP6 ADD SWAP1 PUSH2 0x1562 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x3 DUP7 PUSH1 0x1 SWAP3 PUSH1 0x40 SWAP10 SWAP9 SWAP10 MLOAD PUSH2 0x3DF DUP2 PUSH2 0x16C3 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP7 SLOAD AND DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x404 DUP2 PUSH2 0x3FD DUP2 DUP10 DUP12 ADD PUSH2 0x162D JUMP JUMPDEST SUB DUP3 PUSH2 0x16F9 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP6 SWAP5 SWAP6 PUSH2 0x33F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x45A PUSH2 0x151F JUMP JUMPDEST AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x493 PUSH2 0x3FD PUSH2 0x47F PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x162D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1562 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH2 0x4BE SWAP1 PUSH2 0x15A2 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x4E7 DUP5 PUSH2 0x4E0 DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x162D JUMP JUMPDEST SUB DUP6 PUSH2 0x16F9 JUMP JUMPDEST ADD SLOAD PUSH2 0x505 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE PUSH1 0x60 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0x1562 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH2 0x523 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x147 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x147 JUMPI PUSH2 0x555 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1535 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xA4 CALLDATALOAD GT PUSH2 0x147 JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0xA4 CALLDATALOAD ADD SLT ISZERO PUSH2 0x147 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xA4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT PUSH2 0x147 JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0xA4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x5 SHL PUSH1 0xA4 CALLDATALOAD ADD ADD GT PUSH2 0x147 JUMPI PUSH4 0xFFFFFFFF PUSH1 0xC4 CALLDATALOAD AND PUSH1 0xC4 CALLDATALOAD SUB PUSH2 0x147 JUMPI PUSH2 0x5B7 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD TIMESTAMP GT PUSH2 0xBE4 JUMPI PUSH1 0xA0 DUP1 MLOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5E8 SWAP1 ISZERO ISZERO PUSH2 0x19EF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x7F6F794C7FCB551753890B40C47E50CA6B3742713F342E7827073A27F687F46 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 MSTORE DUP3 PUSH1 0xE0 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xE0 DUP6 ADD GT OR PUSH2 0xB03 JUMPI PUSH2 0x6BE PUSH2 0x6C4 SWAP3 PUSH1 0x42 DUP6 PUSH1 0xE0 PUSH2 0x6CC SWAP8 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x69E PUSH2 0x1F81 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP3 CALLDATASIZE SWAP2 PUSH2 0x1943 JUMP JUMPDEST SWAP1 PUSH2 0x1EBA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1DA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND SUB PUSH2 0xBAB JUMPI PUSH1 0xA0 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 PUSH1 0x0 NOT DUP3 EQ PUSH2 0xB94 JUMPI POP PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 DUP3 DUP1 PUSH2 0x736 PUSH1 0xA4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x24 PUSH1 0xA4 CALLDATALOAD ADD PUSH1 0x4 DUP5 ADD PUSH2 0x1A33 JUMP JUMPDEST SUB DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xAC0 JUMPI PUSH1 0xA0 MLOAD SWAP3 PUSH2 0xB60 JUMPI JUMPDEST POP DUP2 CALLVALUE LT PUSH2 0xB1B JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO PUSH2 0x147 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0xA0 MLOAD DUP2 DUP1 PUSH2 0x7D7 PUSH1 0xA4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x24 PUSH1 0xA4 CALLDATALOAD ADD PUSH1 0x4 DUP5 ADD PUSH2 0x1A33 JUMP JUMPDEST SUB DUP2 DUP7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xAEC JUMPI JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 DUP1 PUSH2 0x863 PUSH4 0x52571AF PUSH1 0xE5 SHL SWAP6 DUP7 DUP4 MSTORE PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0x4 DUP5 ADD SWAP1 SWAP3 SWAP2 PUSH4 0xFFFFFFFF PUSH1 0x20 SWAP2 PUSH1 0x40 DUP5 ADD SWAP6 DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xAC0 JUMPI PUSH1 0xA0 MLOAD SWAP2 PUSH2 0xACD JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x0 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x80 DUP3 PUSH1 0x44 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xAC0 JUMPI PUSH2 0x92E SWAP3 PUSH1 0xA0 MLOAD SWAP3 PUSH2 0xA8F JUMPI JUMPDEST POP PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x2128 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x93D PUSH1 0x8 SLOAD DUP4 PUSH2 0x1B2E JUMP JUMPDEST DIV SWAP3 PUSH2 0x949 DUP5 DUP4 PUSH2 0x1B77 JUMP JUMPDEST SWAP2 SELFBALANCE LT PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP4 ADD MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x64 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x423 JUMPI PUSH1 0x40 MSTORE PUSH2 0x9C9 SWAP2 PUSH2 0x9B3 SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x9BD DUP4 DUP6 PUSH2 0x20AB JUMP JUMPDEST DUP5 PUSH2 0xA3B JUMPI JUMPDEST CALLVALUE PUSH2 0x1B77 JUMP JUMPDEST DUP1 PUSH2 0xA2B JUMPI JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x44 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 AND SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH32 0x6EFCED4ED44FB06EAED2FFEC26C5392C1B03A2BA58CA72E7AF5B738826CD4CEC SWAP1 PUSH1 0x60 SWAP1 LOG4 PUSH1 0x1 DUP1 SSTORE PUSH1 0xA0 MLOAD DUP1 RETURN JUMPDEST PUSH2 0xA35 SWAP1 CALLER PUSH2 0x20AB JUMP JUMPDEST DUP4 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0xA45 DUP6 CALLER PUSH2 0x20AB JUMP JUMPDEST PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742043465820696E20636F6E747261637400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xAB2 SWAP2 SWAP3 POP PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0xAB9 JUMPI JUMPDEST PUSH2 0xAAA DUP2 DUP4 PUSH2 0x16F9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x922 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 MLOAD DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xAE6 SWAP2 POP PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0xAB9 JUMPI PUSH2 0xAAA DUP2 DUP4 PUSH2 0x16F9 JUMP JUMPDEST DUP5 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xB03 JUMPI PUSH1 0x40 MSTORE DUP3 PUSH2 0x811 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0xA0 MLOAD MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0xA0 MLOAD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742050797468207570646174652066656500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB8C JUMPI JUMPDEST DUP2 PUSH2 0xB7C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x16F9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x147 JUMPI MLOAD SWAP1 DUP3 PUSH2 0x774 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB6F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL SWAP1 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0xA0 MLOAD PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14DA59DB985D1D5C9948195E1C1A5C9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH2 0xC36 PUSH2 0x151F JUMP JUMPDEST PUSH2 0xC3E PUSH2 0x171A JUMP JUMPDEST PUSH2 0xC46 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0xB03 JUMPI PUSH1 0x40 SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0xC97 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0xA0 MLOAD DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCC2 PUSH2 0x151F JUMP JUMPDEST AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH2 0xD42 PUSH32 0x0 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0xD6B PUSH32 0x0 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH2 0xB03 JUMPI SWAP2 DUP2 PUSH2 0xDC5 DUP6 SWAP5 PUSH2 0xDB7 SWAP8 SWAP7 PUSH1 0x40 MSTORE PUSH1 0xA0 MLOAD DUP5 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0xF PUSH1 0xF8 SHL DUP10 MSTORE PUSH1 0xE0 DUP6 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD SWAP1 PUSH2 0x1562 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x1562 JUMP JUMPDEST SWAP2 CHAINID PUSH1 0x60 DUP8 ADD MSTORE ADDRESS PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 MLOAD PUSH1 0xA0 DUP8 ADD MSTORE DUP6 DUP4 SUB PUSH1 0xC0 DUP8 ADD MSTORE MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP3 SWAP2 PUSH1 0xA0 MLOAD JUMPDEST DUP3 DUP2 LT PUSH2 0xDFD JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xDEE JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xE30 PUSH2 0x171A JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT PUSH2 0xE6E JUMPI PUSH1 0x20 DUP2 PUSH32 0x33E1D5145944D624B86865712FC54C442CDFDEEBF537007CB7809BCCB0126DA5 SWAP3 PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0xA0 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x8CCACA40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEC3 PUSH2 0x151F JUMP JUMPDEST AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH2 0xEF7 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP2 GT PUSH2 0x147 JUMPI PUSH2 0xF1A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1535 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x44 CALLDATALOAD PUSH2 0xF27 PUSH2 0x171A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x128F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP5 DUP6 ISZERO PUSH2 0x1253 JUMPI DUP6 PUSH1 0xA0 MLOAD MSTORE PUSH1 0x20 SWAP3 PUSH1 0x5 DUP5 MSTORE PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 SLOAD PUSH2 0x1219 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF63 DUP3 PUSH2 0x16C3 JUMP JUMPDEST DUP8 DUP3 MSTORE PUSH2 0xF71 CALLDATASIZE DUP8 DUP10 PUSH2 0x1943 JUMP JUMPDEST SWAP1 DUP6 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 DUP6 DUP3 MSTORE PUSH1 0x4 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x11EC JUMPI PUSH2 0xFA9 SWAP1 PUSH1 0x1 PUSH1 0x80 MSTORE PUSH1 0x1 DUP2 ADD PUSH1 0x4 SSTORE PUSH2 0x15A2 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0x1203 JUMPI MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE PUSH1 0x80 MLOAD DUP4 ADD SWAP2 MLOAD SWAP2 DUP3 MLOAD DUP12 DUP2 GT PUSH2 0x11EC JUMPI PUSH2 0xFED DUP2 PUSH2 0xFE7 DUP5 SLOAD PUSH2 0x15F3 JUMP JUMPDEST DUP5 PUSH2 0x197A JUMP JUMPDEST PUSH1 0xA0 MLOAD SWAP4 DUP9 SWAP5 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x117E JUMPI POP PUSH1 0x2 SWAP5 DUP3 SWAP2 PUSH1 0xA0 MLOAD SWAP3 PUSH2 0x1173 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD SWAP2 ADD SSTORE DUP6 PUSH1 0xA0 MLOAD MSTORE PUSH1 0x5 DUP4 MSTORE PUSH1 0xA0 MLOAD DUP3 PUSH1 0x40 DUP3 KECCAK256 SSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP8 DUP6 GT PUSH2 0x115F JUMPI POP POP PUSH2 0x105D DUP4 PUSH2 0x1057 DUP9 SLOAD PUSH2 0x15F3 JUMP JUMPDEST DUP9 PUSH2 0x197A JUMP JUMPDEST PUSH1 0xA0 MLOAD SWAP6 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x10DC JUMPI DUP4 PUSH32 0x7EE5B861AD236224C1FB776C839C3959F7A0903D4E4DCDE63306821C6FF60AA2 SWAP7 SWAP8 PUSH1 0xA0 MLOAD SWAP2 PUSH2 0x10D1 JUMPI JUMPDEST POP DUP5 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP7 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x10C4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 PUSH2 0x19CE JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG2 PUSH1 0xA0 MLOAD DUP1 RETURN JUMPDEST SWAP1 POP DUP6 ADD CALLDATALOAD DUP9 PUSH2 0x1099 JUMP JUMPDEST DUP1 DUP8 MSTORE PUSH1 0xA0 MLOAD DUP4 DUP2 KECCAK256 PUSH1 0x80 MLOAD PUSH1 0x1F NOT DUP8 AND SWAP10 SWAP1 SWAP3 JUMPDEST DUP11 DUP2 LT PUSH2 0x114A JUMPI POP DUP7 PUSH32 0x7EE5B861AD236224C1FB776C839C3959F7A0903D4E4DCDE63306821C6FF60AA2 SWAP10 SWAP11 LT PUSH2 0x1130 JUMPI JUMPDEST POP POP DUP5 DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x10AD JUMP JUMPDEST DUP8 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x1123 JUMP JUMPDEST DUP9 DUP3 ADD CALLDATALOAD DUP4 SSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 DUP7 ADD PUSH2 0x10F1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL SWAP1 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0xA0 MLOAD REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0x100D JUMP JUMPDEST SWAP3 SWAP4 SWAP5 DUP5 PUSH1 0x1F NOT DUP5 AND SWAP5 MSTORE PUSH1 0xA0 MLOAD SWAP2 DUP11 DUP4 KECCAK256 SWAP3 SWAP5 PUSH1 0x80 MLOAD SWAP6 JUMPDEST DUP13 DUP3 DUP3 LT PUSH2 0x11D8 JUMPI POP POP SWAP1 DUP5 PUSH1 0x2 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x11BF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1022 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x11B2 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE SWAP5 DUP8 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x1197 JUMP JUMPDEST DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0xA0 MLOAD MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0xA0 MLOAD REVERT JUMPDEST DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0xA0 MLOAD MSTORE PUSH1 0xA0 MLOAD DUP1 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x13 DUP2 DUP5 ADD MSTORE PUSH19 0x151BDAD95B88185B1C9958591E481859191959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x15 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF DUP2 DUP8 ADD MSTORE PUSH15 0x125B9D985B1A590819995959081251 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH2 0x12E0 PUSH2 0x171A JUMP JUMPDEST PUSH1 0xA0 MLOAD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x147 JUMPI PUSH2 0x133D PUSH2 0x151F JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0xA0 MLOAD KECCAK256 SLOAD SWAP1 PUSH2 0x1363 DUP3 ISZERO ISZERO PUSH2 0x19EF JUMP JUMPDEST PUSH32 0x0 AND SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH4 0x96834AD3 PUSH1 0xE0 SHL SWAP2 DUP3 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xAC0 JUMPI DUP6 SWAP2 PUSH1 0xA0 MLOAD SWAP5 PUSH2 0x1465 JUMPI JUMPDEST POP PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 DUP3 MSTORE PUSH32 0x0 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xAC0 JUMPI PUSH2 0x140B SWAP5 PUSH1 0xA0 MLOAD SWAP5 PUSH2 0x1446 JUMPI JUMPDEST POP POP PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x141A PUSH1 0x8 SLOAD DUP4 PUSH2 0x1B2E JUMP JUMPDEST DIV SWAP1 PUSH2 0x493 PUSH2 0x1429 DUP4 DUP4 PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x145D SWAP3 SWAP5 POP DUP1 RETURNDATASIZE LT PUSH2 0xAB9 JUMPI PUSH2 0xAAA DUP2 DUP4 PUSH2 0x16F9 JUMP JUMPDEST SWAP2 DUP5 DUP1 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x147D SWAP2 SWAP5 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0xAB9 JUMPI PUSH2 0xAAA DUP2 DUP4 PUSH2 0x16F9 JUMP JUMPDEST SWAP3 DUP7 PUSH2 0x13B8 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH1 0xA0 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0x8AC7230489E80000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x151A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x151A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x14C5 PUSH2 0x171A JUMP JUMPDEST PUSH2 0x14CD PUSH2 0x1B84 JUMP JUMPDEST DUP1 SELFBALANCE LT PUSH2 0x14DE JUMPI PUSH2 0xC97 SWAP1 CALLER PUSH2 0x20AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x151A JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x151A JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x151A JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x151A JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x158E JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x156D JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x15DD JUMPI PUSH1 0x3 SWAP1 PUSH1 0x4 PUSH1 0x0 MSTORE MUL PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1623 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x160D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1602 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x163E DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x16A0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1660 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x168C JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x165A JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x1675 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x423 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x423 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x423 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x172E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x17B0 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x179E JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1794 DUP4 PUSH2 0x16DE JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x2 SLOAD DUP2 PUSH1 0x0 PUSH2 0x17C3 DUP4 PUSH2 0x15F3 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x184C JUMPI POP PUSH1 0x1 EQ PUSH2 0x17ED JUMPI JUMPDEST POP PUSH2 0x17EA SWAP3 POP SUB DUP3 PUSH2 0x16F9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP5 DUP4 LT PUSH2 0x1831 JUMPI POP PUSH2 0x17EA SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x17DD JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x1818 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x17EA SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x17DD JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x1890 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x179E JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1794 DUP4 PUSH2 0x16DE JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x3 SLOAD DUP2 PUSH1 0x0 PUSH2 0x18A3 DUP4 PUSH2 0x15F3 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x184C JUMPI POP PUSH1 0x1 EQ PUSH2 0x18C9 JUMPI POP PUSH2 0x17EA SWAP3 POP SUB DUP3 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP5 DUP4 LT PUSH2 0x190D JUMPI POP PUSH2 0x17EA SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x17DD JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x423 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x194F DUP3 PUSH2 0x1928 JUMP JUMPDEST SWAP2 PUSH2 0x195D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x16F9 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x151A JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1988 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x19C4 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x19B9 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19AD JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x19A4 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x19F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP2 DUP6 ADD DUP3 DUP7 MSTORE MSTORE PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 DUP5 PUSH1 0x0 SWAP3 JUMPDEST DUP6 DUP5 LT PUSH2 0x1A63 JUMPI POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 PUSH1 0x3F NOT DUP3 DUP3 SUB ADD DUP5 MSTORE DUP8 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x151A JUMPI DUP4 ADD DUP7 DUP2 ADD SWAP2 SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x151A JUMPI DUP1 CALLDATASIZE SUB DUP4 SGT PUSH2 0x151A JUMPI PUSH2 0x1AB1 DUP9 SWAP3 DUP4 SWAP3 PUSH1 0x1 SWAP6 PUSH2 0x19CE JUMP JUMPDEST SWAP10 ADD SWAP5 ADD SWAP5 ADD SWAP3 SWAP6 SWAP5 SWAP4 SWAP2 SWAP1 PUSH2 0x1A52 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x80 SWAP2 SUB SLT PUSH2 0x151A JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x80 DUP4 ADD DUP2 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x423 JUMPI PUSH1 0x40 MSTORE DUP2 MLOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0x151A JUMPI DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x151A JUMPI PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD SWAP1 DUP2 PUSH1 0x3 SIGNEXTEND DUP3 SUB PUSH2 0x151A JUMPI PUSH1 0x60 SWAP2 PUSH1 0x40 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1B41 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1B61 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1B41 JUMPI JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1B95 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1C39 PUSH1 0x40 MLOAD PUSH2 0x1BF2 DUP2 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP3 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP6 DUP4 ADD MSTORE PUSH1 0x0 DUP1 DUP6 DUP8 DUP3 SWAP8 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL PUSH2 0x1C33 PUSH2 0x1CD3 JUMP JUMPDEST SWAP2 PUSH2 0x1D03 JUMP JUMPDEST DUP1 MLOAD SWAP2 DUP3 ISZERO SWAP2 DUP5 DUP4 ISZERO PUSH2 0x1CAB JUMPI JUMPDEST POP POP POP SWAP1 POP ISZERO PUSH2 0x1C54 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP4 DUP2 DUP1 SWAP5 POP ADD SUB SLT PUSH2 0x1CCF JUMPI DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x144 JUMPI POP DUP1 CODESIZE DUP1 DUP5 PUSH2 0x1C47 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1CFE JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1CE4 DUP3 PUSH2 0x1928 JUMP JUMPDEST SWAP2 PUSH2 0x1CF2 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x16F9 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x1D65 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x1D17 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x1D20 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1D78 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1D9C SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1562 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x1EA4 JUMPI DUP1 PUSH2 0x1DB1 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1DFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1E4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x1E54 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x41 DUP2 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1EE8 JUMPI PUSH2 0x1EE4 SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT PUSH2 0x1F75 JUMPI SWAP2 PUSH1 0x80 SWAP5 SWAP4 SWAP2 PUSH1 0xFF PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1F68 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1F62 JUMPI SWAP2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x3 SWAP1 JUMP JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2082 JUMPI JUMPDEST ISZERO PUSH2 0x1FDC JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x423 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0x20BC PUSH2 0x1CD3 JUMP JUMPDEST POP ISZERO PUSH2 0x20C4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10D196081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x3 SIGNEXTEND PUSH4 0x7FFFFFFF NOT DUP2 EQ PUSH2 0x1B41 JUMPI PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x4D DUP2 GT PUSH2 0x1B41 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP3 SWAP4 PUSH1 0x0 SWAP1 DUP2 DUP2 MLOAD PUSH1 0x7 SIGNEXTEND SGT ISZERO PUSH2 0x23FB JUMPI DUP2 DUP7 MLOAD PUSH1 0x7 SIGNEXTEND SGT ISZERO PUSH2 0x23C2 JUMPI DUP4 ISZERO PUSH2 0x238F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP7 PUSH1 0x4 SWAP6 PUSH1 0x20 SWAP6 SWAP2 SWAP3 SWAP1 SWAP2 DUP7 SWAP1 DUP3 SWAP1 DUP10 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2385 JUMPI DUP6 SWAP2 PUSH2 0x234A JUMPI JUMPDEST POP DUP9 DUP5 ADD MLOAD PUSH1 0x3 SIGNEXTEND SWAP2 DUP6 DUP4 SLT ISZERO PUSH2 0x22FC JUMPI PUSH2 0x21D5 PUSH2 0x21BE PUSH2 0x21B8 PUSH1 0xFF SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 SWAP10 MLOAD AND SWAP1 PUSH2 0x1B2E JUMP JUMPDEST SWAP5 PUSH2 0x20FF JUMP JUMPDEST SWAP4 PUSH2 0x21CF PUSH4 0xFFFFFFFF SWAP6 DUP7 AND PUSH2 0x2114 JUMP JUMPDEST SWAP1 PUSH2 0x1B2E JUMP JUMPDEST SWAP2 AND PUSH1 0x4D DUP2 GT PUSH2 0x22E9 JUMPI SWAP1 PUSH2 0x21ED SWAP2 PUSH1 0xA EXP SWAP1 PUSH2 0x1B57 JUMP JUMPDEST SWAP3 DUP9 DUP4 ADD MLOAD PUSH1 0x3 SIGNEXTEND SWAP3 DUP6 DUP5 SLT ISZERO PUSH2 0x22A8 JUMPI SWAP2 PUSH2 0x2213 PUSH2 0x21CF SWAP3 PUSH2 0x2219 SWAP6 SWAP5 MLOAD AND SWAP4 PUSH2 0x20FF JUMP JUMPDEST AND PUSH2 0x2114 JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2295 JUMPI POP SWAP1 PUSH2 0x223F SWAP2 PUSH2 0x1B57 JUMP JUMPDEST SWAP4 PUSH8 0x8AC7230489E80000 DUP6 GT PUSH2 0x2254 JUMPI POP POP POP JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178204346582070657220737761700000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP9 DUP9 DUP1 DUP14 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E657870656374656420706F736974697665206578706F20666F7220434658 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 DUP9 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP10 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP9 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E657870656374656420706F736974697665206578706F20666F7220746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B7 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x237E JUMPI JUMPDEST PUSH2 0x2361 DUP2 DUP4 PUSH2 0x16F9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x237A JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x237A JUMPI CODESIZE PUSH2 0x2189 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x2357 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x416D6F756E74207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420434658207072696365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C696420746F6B656E207072696365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x2DECA9E2DA EXTCODEHASH 0x2B BALANCE 0xD6 0xDB PUSH14 0xE9C40CB869009B2514E858C3C03F 0xBE STATICCALL RETURNDATACOPY 0xEF SGT CHAINID PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"670:7258:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:27;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;6717:9:19;:13;670:7258;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;-1:-1:-1;;670:7258:19;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;670:7258:19;;;;2162:22:0;;670:7258:19;;;;;;;;;;;;;;2566:40:0;670:7258:19;2566:40:0;;670:7258:19;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;1241:37;670:7258;;;;;;;;;;;;;;;;;;;;;;;;827:37;670:7258;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;670:7258:19;;;;-1:-1:-1;;;;;670:7258:19;;:::i;:::-;;;;;1071:46;670:7258;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;670:7258:19;;;;;;;;978:34;;;;;;;;:::i;:::-;670:7258;;;;;;;;;978:34;670:7258;;978:34;670:7258;978:34;670:7258;978:34;670:7258;978:34;;670:7258;:::i;:::-;;;;:::i;:::-;978:34;670:7258;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;670:7258:19;;;;;;:::i;:::-;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2227:103:2;;:::i;:::-;670:7258:19;;3048:15;:27;670:7258;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;;3107:74;;3115:40;;3107:74;:::i;:::-;670:7258;;;;;;;;;;4966:6;670:7258;;;;;;;;;;4851:159;1349:119;670:7258;4851:159;;670:7258;;;;;;;;;1349:119;;670:7258;;;;;;;;;;1349:119;;670:7258;;;;1349:119;;670:7258;;1349:119;;670:7258;;;;1349:119;;670:7258;;4851:159;;670:7258;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;1349:119;3800:27:12;670:7258:19;8496:231:12;670:7258:19;;3849:5:12;670:7258:19;;;;;;;4851:159;;4841:170;4893:20:13;;:::i;:::-;8496:231:12;670:7258:19;8496:231:12;;-1:-1:-1;;;8496:231:12;;;;;;;;;;;670:7258:19;;1349:119;;:::i;:::-;3800:27:12;;:::i;:::-;3849:5;;;;:::i;:::-;-1:-1:-1;;;;;670:7258:19;;;;;5132:14;1349:119;;670:7258;;;-1:-1:-1;;;;;670:7258:19;;;;4966:6;670:7258;;;;;;;;;;-1:-1:-1;;670:7258:19;;;;;;;;;;;;;;;3373:29;;670:7258;;;3373:29;670:7258;;;;;;;;;;3373:29;;;:::i;:::-;;670:7258;3373:4;-1:-1:-1;;;;;670:7258:19;3373:29;;;;;;;670:7258;;3373:29;;;670:7258;3420:9;;;:16;670:7258;;3373:4;-1:-1:-1;;;;;670:7258:19;3479:45;;;;670:7258;;;;;3479:45;;670:7258;;;;3479:45;670:7258;;;;;;;;;;3479:45;;;:::i;:::-;;670:7258;;3373:4;-1:-1:-1;;;;;670:7258:19;3479:45;;;;;;;;670:7258;;;;;;;;;;;;;;;;;;;;;;;;;;3595:60;670:7258;;;3595:60;;;;670:7258;;3595:60;670:7258;3595:60;;670:7258;;;;;;;;;;;;;;;;;3595:60;;670:7258;3373:4;-1:-1:-1;;;;;670:7258:19;3595:60;;;;;;;670:7258;3595:60;;;;670:7258;-1:-1:-1;670:7258:19;;3701:46;;;3726:12;670:7258;3701:46;;670:7258;;;;;;;;;;;;;-1:-1:-1;;;;;3373:4:19;670:7258;3701:46;;;;;;;3810:63;3701:46;670:7258;3701:46;;;;670:7258;;;;;;3810:63;:::i;:::-;3938:5;3905:29;3917:17;670:7258;3905:29;;:::i;:::-;670:7258;3977:22;;;;;:::i;:::-;4018:21;;:34;670:7258;;;;;;;;;1482:68:6;;;670:7258:19;;;;;;;;1482:68:6;;670:7258:19;4026:4;670:7258;;;;;;;;;;;1482:68:6;;670:7258:19;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;4416:15;;1482:68:6;;670:7258:19;;-1:-1:-1;;;;;670:7258:19;1482:68:6;:::i;:::-;4243:13:19;;;;:::i;:::-;4295:14;4291:52;;670:7258;3420:9;4416:15;:::i;:::-;4445:10;4441:44;;670:7258;-1:-1:-1;670:7258:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;4519:10;;670:7258;;;;4501:78;;670:7258;;4501:78;670:7258;;;;;;;4441:44;4478:6;4466:10;;4478:6;:::i;:::-;4441:44;;;4291:52;4332:10;4320;;4332;:::i;:::-;4291:52;;670:7258;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;;;;;;;;3701:46;;;;;670:7258;3701:46;670:7258;3701:46;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;670:7258;;;;;;;;;;3595:60;;;;670:7258;3595:60;670:7258;3595:60;;;;;;;:::i;:::-;;;;3479:45;-1:-1:-1;;;;;670:7258:19;;;;;;3479:45;;;670:7258;;;;;;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;;;;;;;;3373:29;;;;670:7258;3373:29;;670:7258;3373:29;;;;;;670:7258;3373:29;;;:::i;:::-;;;670:7258;;;;;3373:29;;;;;;;-1:-1:-1;3373:29:19;;670:7258;-1:-1:-1;;;670:7258:19;;;;;;;;;;1349:119;670:7258;;-1:-1:-1;;;1349:119:19;;670:7258;;1349:119;;;;670:7258;1349:119;;670:7258;-1:-1:-1;;;670:7258:19;;;1349:119;670:7258;;1349:119;670:7258;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;-1:-1:-1;;670:7258:19;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;2227:103:2;;:::i;:::-;670:7258:19;;;;;;1050:58:6;;;7095:10:19;670:7258;1050:58:6;;670:7258:19;;;;;;;;1050:58:6;;670:7258:19;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;1050:58:6;;-1:-1:-1;;;;;670:7258:19;1050:58:6;:::i;:::-;670:7258:19;;;;;;;;;;;;;-1:-1:-1;;670:7258:19;;;;-1:-1:-1;;;;;670:7258:19;;:::i;:::-;;;;;1018:47;670:7258;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;5427:41:13;:5;:41;:::i;:::-;5482:47;:8;:47;:::i;:::-;670:7258:19;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5543:13:13;;670:7258:19;;;;5578:4:13;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;;;;;;;-1:-1:-1;;670:7258:19;;;;;;1063:62:0;;:::i;:::-;6519:4:19;6504:19;;670:7258;;;;6607:30;670:7258;6561:31;670:7258;;;;;;6607:30;670:7258;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;-1:-1:-1;;670:7258:19;;;;-1:-1:-1;;;;;670:7258:19;;:::i;:::-;;;;;1123:41;670:7258;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;670:7258:19;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;;;;:::i;:::-;;;;;1063:62:0;;:::i;:::-;2254:20:19;;670:7258;;-1:-1:-1;;;;;670:7258:19;;;;2312:26;;670:7258;;;;;;;;2382:12;670:7258;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;2478:117;;;;670:7258;;;;2478:117;;670:7258;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2382:12;670:7258;;;;;;;;;2652:12;670:7258;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;2702:40;670:7258;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2702:40;;;670:7258;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;670:7258:19;;;;;;;;;;;;;2702:40;670:7258;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;670:7258:19;;;;-1:-1:-1;;;;;;670:7258:19;;;;;;-1:-1:-1;;;;;670:7258:19;2566:40:0;670:7258:19;;2566:40:0;670:7258:19;;;;;;;;-1:-1:-1;;670:7258:19;;;;;;:::i;:::-;;;;;;;;;;;;7471:12;670:7258;;;;;;;7515:25;7507:59;7515:25;;;7507:59;:::i;:::-;7615:4;670:7258;;;;;;;;7615:32;;;;670:7258;7615:32;;670:7258;7615:32;;;;670:7258;7615:32;;;;;;;;;670:7258;;;;7615:32;;;670:7258;;;;;7693:33;;;;;;7713:12;670:7258;7693:33;;670:7258;7693:33;;;;;;;7749:63;670:7258;;;7693:33;;;670:7258;;;;;7749:63;;:::i;:::-;7869:5;7836:29;7848:17;670:7258;7836:29;;:::i;:::-;670:7258;7897:22;670:7258;7897:22;;;;:::i;:::-;670:7258;;;;;;;;;;;;;;;;;;;;;;;;7693:33;;;;;;;-1:-1:-1;7693:33:19;;;;;;:::i;:::-;;;;;;7615:32;;;;;;;;;;;;;;;:::i;:::-;;;;;670:7258;;;;;;;;;;;;;;;;;1214:11;670:7258;;;;;;;;;-1:-1:-1;;670:7258:19;;;;;;1063:62:0;;:::i;:::-;2227:103:2;;:::i;:::-;6851:21:19;;:31;670:7258;;6938:6;6926:10;;6938:6;:::i;670:7258::-;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;-1:-1:-1;670:7258:19;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;670:7258:19;;;;-1:-1:-1;670:7258:19;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;:::o;1359:130:0:-;1273:6;670:7258:19;-1:-1:-1;;;;;670:7258:19;734:10:8;1422:23:0;670:7258:19;;1359:130:0:o;670:7258:19:-;;;;;;;;;;;;;;;;;;;;;;;;;3367:268:9;1371:66;3490:47;;1371:66;;;2633:40;;2687:11;2696:2;2687:11;;2683:69;;670:7258:19;;;;;;:::i;:::-;2348:90:9;;2292:2;670:7258:19;;2348:90:9;3553:22;:::o;2683:69::-;670:7258:19;;-1:-1:-1;;;2721:20:9;;;;;3486:143;-1:-1:-1;670:7258:19;;5454:13:13;670:7258:19;;-1:-1:-1;670:7258:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1371:66:9;;;;;;;:::i;:::-;3606:12;:::o;670:7258:19:-;5454:13:13;-1:-1:-1;670:7258:19;;;-1:-1:-1;;670:7258:19;;;;;;;-1:-1:-1;1371:66:9;;-1:-1:-1;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1371:66:9;670:7258:19;;;;;;;;;;;;;;;;;;;;3367:268:9;1371:66;3490:47;;1371:66;;;2633:40;;2687:11;2696:2;2687:11;;2683:69;;670:7258:19;;;;;;:::i;3486:143:9:-;-1:-1:-1;670:7258:19;;5512:16:13;670:7258:19;;-1:-1:-1;670:7258:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1371:66:9;;;;;;;:::i;670:7258:19:-;5512:16:13;-1:-1:-1;670:7258:19;;;-1:-1:-1;;670:7258:19;;;;;;;-1:-1:-1;1371:66:9;;-1:-1:-1;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;-1:-1:-1;;670:7258:19;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;;;;;;;-1:-1:-1;;670:7258:19;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;2336:287:2:-;1759:1;2468:7;670:7258:19;2468:19:2;1759:1;;;2468:7;670:7258:19;2336:287:2:o;1759:1::-;670:7258:19;;-1:-1:-1;;;1759:1:2;;;;;;;;;;;670:7258:19;1759:1:2;670:7258:19;;;1759:1:2;;;;5196:642:6;670:7258:19;;;;;;;5535:69:7;670:7258:19;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;5487:31:7;;;;;;;;;;;;;;:::i;:::-;5535:69;;:::i;:::-;670:7258:19;;5728:22:6;;;:56;;;;;;5196:642;670:7258:19;;;;;;;;5196:642:6;:::o;670:7258:19:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;5728:56:6;5754:30;;;;;;;670:7258:19;;;;5754:30:6;;670:7258:19;;;;;;;;;5728:56:6;;;;;;;670:7258:19;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;670:7258:19;;;;:::o;:::-;;;:::o;7671:628:7:-;;;;7875:418;;;670:7258:19;;;7906:22:7;7902:286;;8201:17;;:::o;7902:286::-;1702:19;:23;670:7258:19;;8201:17:7;:::o;670:7258:19:-;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;;;;;;;;7875:418:7;670:7258:19;;;;-1:-1:-1;8980:21:7;:17;;9152:142;;;;;;;8976:379;670:7258:19;;-1:-1:-1;;;9324:20:7;;670:7258:19;9324:20:7;;;670:7258:19;;;;;;;;;;;:::i;:::-;9324:20:7;;;570:511:12;670:7258:19;;;;;;638:29:12;;;683:7;:::o;634:441::-;670:7258:19;734:38:12;;670:7258:19;;;;-1:-1:-1;;;788:34:12;;670:7258:19;788:34:12;;;670:7258:19;;;;;;;;;;;;;788:34:12;730:345;852:35;843:44;;852:35;;670:7258:19;;-1:-1:-1;;;903:41:12;;670:7258:19;903:41:12;;;670:7258:19;;;;;;;;;;;;;903:41:12;839:236;974:30;965:39;961:114;;570:511::o;961:114::-;670:7258:19;;-1:-1:-1;;;1020:44:12;;670:7258:19;1020:44:12;;;670:7258:19;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;1020:44:12;670:7258:19;;;;647:20:12;670:7258:19;;;;;647:20:12;670:7258:19;2145:730:12;;2283:2;670:7258:19;;2263:22:12;2259:610;2283:2;;;2746:25;2546:180;;;;;;;;;;;;;;-1:-1:-1;2546:180:12;2746:25;;:::i;:::-;2739:32;;:::o;2259:610::-;2802:56;;2818:1;2802:56;2822:35;2802:56;:::o;5009:1456::-;;;;6021:66;6008:79;;6004:161;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6276:24:12;;;;;;;;;;;;;;-1:-1:-1;;;;;670:7258:19;;6314:20:12;6310:101;;6421:37;5009:1456;:::o;6310:101::-;6350:50;6276:24;6350:50;:::o;6276:24::-;670:7258:19;;;;;;;;;;;6004:161:12;6103:51;;;;6119:1;6103:51;6123:30;6103:51;:::o;3695:262:13:-;3779:4;3788:11;-1:-1:-1;;;;;670:7258:19;3771:28:13;;:63;;3695:262;3767:184;;;3857:22;3850:29;:::o;3767:184::-;670:7258:19;;4054:81:13;;;670:7258:19;1929:95:13;670:7258:19;;4077:11:13;670:7258:19;1929:95:13;;670:7258:19;4090:14:13;1929:95;;;670:7258:19;4106:13:13;1929:95;;;670:7258:19;3779:4:13;670:7258:19;1929:95:13;;670:7258:19;;4054:81:13;;1929:95;670:7258:19;;;;;-1:-1:-1;;;;;670:7258:19;;;;;;;;4044:92:13;;3910:30;:::o;3771:63::-;3820:14;;3803:13;:31;3771:63;;5181:166:19;5265:26;5181:166;;;;;5265:26;;;;:::i;:::-;;670:7258;;;5181:166::o;670:7258::-;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;-1:-1:-1;;670:7258:19;;;;;;;:::o;:::-;;;;;;;;;;;:::o;5353:1033::-;;;;;;-1:-1:-1;670:7258:19;;;;;;5590:20;670:7258;;;;;;;;5652:18;670:7258;;;5710:10;;670:7258;;;;;-1:-1:-1;;;5769:39:19;;670:7258;;5769:39;;;;670:7258;;;;5769:39;;670:7258;;5769:39;;670:7258;;-1:-1:-1;;;;;670:7258:19;5769:39;;;;;;;;;;;5353:1033;5836:15;;;;670:7258;;;5869:13;;;;670:7258;;;5951:71;6010:10;5951:42;670:7258;;-1:-1:-1;;;;;670:7258:19;;;;5951:42;;:::i;:::-;6010:10;;:::i;:::-;670:7258;5997:24;670:7258;;;;5997:24;:::i;:::-;5951:71;;:::i;:::-;670:7258;;;;;;;;5950:97;670:7258;;;5950:97;;:::i;:::-;6074:13;;;;670:7258;;;6105:11;;;;670:7258;;;;6235:8;6222:22;670:7258;6187:58;670:7258;;;;6235:8;;:::i;:::-;670:7258;6222:22;:::i;6187:58::-;6280:6;;670:7258;;;;;;;;;;;;;;;6268:35;;;;;:::i;:::-;6321:29;1214:11;6321:29;;670:7258;;5353:1033;;;:::o;670:7258::-;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;;;;;;-1:-1:-1;670:7258:19;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;5769:39;;;;;;;;;;;;;;;;:::i;:::-;;;670:7258;;;;;;;;;;;;5769:39;;;670:7258;;;;5769:39;;;;;;670:7258;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;;;;;;;-1:-1:-1;;;670:7258:19;;;;;;"},"methodIdentifiers":{"MAX_CFX_PER_SWAP()":"31e2a65c","addToken(address,string,bytes32)":"78af1d55","cfxUsdFeedId()":"e83d086f","depositCfx()":"f6954a13","eip712Domain()":"84b0196e","estimateCfxOut(address,uint256)":"5f5443a5","getSupportedTokens()":"d3c7c2c7","metaSwap(address,address,uint256,uint256,bytes,bytes[],uint32)":"a275d666","nonces(address)":"7ecebe00","owner()":"8da5cb5b","pyth()":"f98d06f0","relayerFeePercent()":"ef1774a2","renounceOwnership()":"715018a6","setRelayerFee(uint256)":"83302a6f","supportedTokens(uint256)":"c6255626","tokenFeedIds(address)":"91f12218","tokenTickers(address)":"c9325d6c","transferOwnership(address)":"f2fde38b","withdrawCfx(uint256)":"11dfca5d","withdrawToken(address,uint256)":"9e281a98"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pyth\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_cfxUsdFeedId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cfxAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"}],\"name\":\"MetaSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFeePercent\",\"type\":\"uint256\"}],\"name\":\"RelayerFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ticker\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"feedId\",\"type\":\"bytes32\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_CFX_PER_SWAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ticker\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"feedId\",\"type\":\"bytes32\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cfxUsdFeedId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositCfx\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"estimateCfxOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cfxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ticker\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"feedId\",\"type\":\"bytes32\"}],\"internalType\":\"struct GasStation.TokenInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint32\",\"name\":\"maxAge\",\"type\":\"uint32\"}],\"name\":\"metaSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pyth\",\"outputs\":[{\"internalType\":\"contract IPyth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayerFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setRelayerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ticker\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"feedId\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenFeedIds\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenTickers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCfx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"GasStation - Gasless swaps with meta-transactions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gasRouter.sol\":\"GasStation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0xada6a1f4898b056d2804409ecad466b786dc6a12bc6f8f247e7f1471c1b86fcd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecee3c205896236fc11bfb1367f033353448fa462b08e5212a32e767f72022c9\",\"dweb:/ipfs/QmeEQpRRza2Swm2gCCC61TDxQ2GNLjqPhdtbSznADMuMni\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]},\"contracts/gasRouter.sol\":{\"keccak256\":\"0xc3a39c43e480f8054c4bc64e5a68004b9d1463d012d0b25e3bb43e5d1a986efb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c59fe6ce9e52da438d01daa6c377b00cc44271cbddf7c81eaf2f6718946ab7c7\",\"dweb:/ipfs/QmbU9Svvj8asj7JPFkbNtTGdjauWtFEF1vHTxsQ1WP9FA1\"]}},\"version\":1}"}}}}}